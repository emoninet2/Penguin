
penguin.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000319a  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000032e  00802000  0000319a  0000322e  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00007305  0080232e  0080232e  0000355c  2**0
                  ALLOC
  3 .comment      000000bc  00000000  00000000  0000355c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00003618  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000009b0  00000000  00000000  00003658  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000dfb7  00000000  00000000  00004008  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00002348  00000000  00000000  00011fbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000053f0  00000000  00000000  00014307  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00001d04  00000000  00000000  000196f8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000545c  00000000  00000000  0001b3fc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000713d  00000000  00000000  00020858  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000a18  00000000  00000000  00027995  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 87 01 	jmp	0x30e	; 0x30e <__ctors_end>
       4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
       8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
       c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      10:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      14:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      18:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      1c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      20:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      24:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      28:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      2c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      30:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      34:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      38:	0c 94 69 08 	jmp	0x10d2	; 0x10d2 <__vector_14>
      3c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      40:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      44:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      48:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      4c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      50:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      54:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      58:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      5c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      60:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      64:	0c 94 52 12 	jmp	0x24a4	; 0x24a4 <__vector_25>
      68:	0c 94 66 12 	jmp	0x24cc	; 0x24cc <__vector_26>
      6c:	0c 94 5c 12 	jmp	0x24b8	; 0x24b8 <__vector_27>
      70:	0c 94 70 12 	jmp	0x24e0	; 0x24e0 <__vector_28>
      74:	0c 94 84 12 	jmp	0x2508	; 0x2508 <__vector_29>
      78:	0c 94 7a 12 	jmp	0x24f4	; 0x24f4 <__vector_30>
      7c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      80:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      84:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      88:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      8c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      90:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      94:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      98:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      9c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      a0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      a4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      a8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      ac:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      b0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      b4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      b8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      bc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      c0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      c4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      c8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      cc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      d0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      d4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      d8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      dc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      e0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      e4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      e8:	0c 94 ac 12 	jmp	0x2558	; 0x2558 <__vector_58>
      ec:	0c 94 c0 12 	jmp	0x2580	; 0x2580 <__vector_59>
      f0:	0c 94 b6 12 	jmp	0x256c	; 0x256c <__vector_60>
      f4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      f8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
      fc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     100:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     104:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     108:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     10c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     110:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     114:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     118:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     11c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     120:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     124:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     128:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     12c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     130:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     134:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     138:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     13c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     140:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     144:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     148:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     14c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     150:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     154:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     158:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     15c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     160:	0c 94 8e 12 	jmp	0x251c	; 0x251c <__vector_88>
     164:	0c 94 a2 12 	jmp	0x2544	; 0x2544 <__vector_89>
     168:	0c 94 98 12 	jmp	0x2530	; 0x2530 <__vector_90>
     16c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     170:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     174:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     178:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     17c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     180:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     184:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     188:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     18c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     190:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     194:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     198:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     19c:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1a0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1a4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1a8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1ac:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1b0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1b4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1b8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1bc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1c0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1c4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1c8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1cc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1d0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1d4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1d8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1dc:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1e0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1e4:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1e8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1ec:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1f0:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>
     1f4:	0c 94 29 0d 	jmp	0x1a52	; 0x1a52 <__vector_125>
     1f8:	0c 94 a8 01 	jmp	0x350	; 0x350 <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 2c 09 	jmp	0x1258	; 0x1258 <prvIdleTask>
     200:	0c 94 15 0e 	jmp	0x1c2a	; 0x1c2a <radio_thread>
     204:	0c 94 ce 0f 	jmp	0x1f9c	; 0x1f9c <glcd_thread>
     208:	0c 94 9d 0d 	jmp	0x1b3a	; 0x1b3a <relay_thread>

0000020c <__trampolines_end>:
     20c:	6e 61       	ori	r22, 0x1E	; 30
     20e:	6e 00       	.word	0x006e	; ????

00000210 <__c.2240>:
     210:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
     220:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
     230:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
     240:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
     250:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
     260:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
     270:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
     280:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
     290:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
     2a0:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     2b0:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     2c0:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     2d0:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     2e0:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     2f0:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     300:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000030e <__ctors_end>:
     30e:	11 24       	eor	r1, r1
     310:	1f be       	out	0x3f, r1	; 63
     312:	cf ef       	ldi	r28, 0xFF	; 255
     314:	cd bf       	out	0x3d, r28	; 61
     316:	df e9       	ldi	r29, 0x9F	; 159
     318:	de bf       	out	0x3e, r29	; 62
     31a:	00 e0       	ldi	r16, 0x00	; 0
     31c:	0c bf       	out	0x3c, r16	; 60

0000031e <__do_copy_data>:
     31e:	13 e2       	ldi	r17, 0x23	; 35
     320:	a0 e0       	ldi	r26, 0x00	; 0
     322:	b0 e2       	ldi	r27, 0x20	; 32
     324:	ea e9       	ldi	r30, 0x9A	; 154
     326:	f1 e3       	ldi	r31, 0x31	; 49
     328:	00 e0       	ldi	r16, 0x00	; 0
     32a:	0b bf       	out	0x3b, r16	; 59
     32c:	02 c0       	rjmp	.+4      	; 0x332 <__do_copy_data+0x14>
     32e:	07 90       	elpm	r0, Z+
     330:	0d 92       	st	X+, r0
     332:	ae 32       	cpi	r26, 0x2E	; 46
     334:	b1 07       	cpc	r27, r17
     336:	d9 f7       	brne	.-10     	; 0x32e <__do_copy_data+0x10>

00000338 <__do_clear_bss>:
     338:	26 e9       	ldi	r18, 0x96	; 150
     33a:	ae e2       	ldi	r26, 0x2E	; 46
     33c:	b3 e2       	ldi	r27, 0x23	; 35
     33e:	01 c0       	rjmp	.+2      	; 0x342 <.do_clear_bss_start>

00000340 <.do_clear_bss_loop>:
     340:	1d 92       	st	X+, r1

00000342 <.do_clear_bss_start>:
     342:	a3 33       	cpi	r26, 0x33	; 51
     344:	b2 07       	cpc	r27, r18
     346:	e1 f7       	brne	.-8      	; 0x340 <.do_clear_bss_loop>
     348:	0e 94 b9 11 	call	0x2372	; 0x2372 <main>
     34c:	0c 94 cb 18 	jmp	0x3196	; 0x3196 <_exit>

00000350 <__bad_interrupt>:
     350:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000354 <arch_spi_master_transcieve>:
	if(_nrf24l01p_get_fifo_flag_rx_full()){
		_nrf24l01p_clear_data_ready_flag();
		_nrf24l01p_flush_rx();
	}
	return 0;	
}
     354:	cf 93       	push	r28
     356:	df 93       	push	r29
     358:	16 16       	cp	r1, r22
     35a:	17 06       	cpc	r1, r23
     35c:	8c f4       	brge	.+34     	; 0x380 <arch_spi_master_transcieve+0x2c>
     35e:	dc 01       	movw	r26, r24
     360:	68 0f       	add	r22, r24
     362:	79 1f       	adc	r23, r25
     364:	e0 ec       	ldi	r30, 0xC0	; 192
     366:	f8 e0       	ldi	r31, 0x08	; 8
     368:	ed 01       	movw	r28, r26
     36a:	9c 91       	ld	r25, X
     36c:	93 83       	std	Z+3, r25	; 0x03
     36e:	92 81       	ldd	r25, Z+2	; 0x02
     370:	99 23       	and	r25, r25
     372:	ec f7       	brge	.-6      	; 0x36e <arch_spi_master_transcieve+0x1a>
     374:	93 81       	ldd	r25, Z+3	; 0x03
     376:	98 83       	st	Y, r25
     378:	11 96       	adiw	r26, 0x01	; 1
     37a:	a6 17       	cp	r26, r22
     37c:	b7 07       	cpc	r27, r23
     37e:	a1 f7       	brne	.-24     	; 0x368 <arch_spi_master_transcieve+0x14>
     380:	df 91       	pop	r29
     382:	cf 91       	pop	r28
     384:	08 95       	ret

00000386 <_nrf24l01p_ce_pin>:
     386:	cf 93       	push	r28
     388:	c8 2f       	mov	r28, r24
     38a:	88 23       	and	r24, r24
     38c:	49 f0       	breq	.+18     	; 0x3a0 <_nrf24l01p_ce_pin+0x1a>
     38e:	80 e0       	ldi	r24, 0x00	; 0
     390:	90 e2       	ldi	r25, 0x20	; 32
     392:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
     396:	8a e6       	ldi	r24, 0x6A	; 106
     398:	8a 95       	dec	r24
     39a:	f1 f7       	brne	.-4      	; 0x398 <_nrf24l01p_ce_pin+0x12>
     39c:	00 c0       	rjmp	.+0      	; 0x39e <_nrf24l01p_ce_pin+0x18>
     39e:	04 c0       	rjmp	.+8      	; 0x3a8 <_nrf24l01p_ce_pin+0x22>
     3a0:	80 e0       	ldi	r24, 0x00	; 0
     3a2:	90 e2       	ldi	r25, 0x20	; 32
     3a4:	0e 94 31 12 	call	0x2462	; 0x2462 <DigitalPin_ClearValue>
     3a8:	c0 93 8c 93 	sts	0x938C, r28	; 0x80938c <_nrf24l01p_ce_value>
     3ac:	cf 91       	pop	r28
     3ae:	08 95       	ret

000003b0 <_nrf24l01p_csn_pin>:
     3b0:	cf 93       	push	r28
     3b2:	c8 2f       	mov	r28, r24
     3b4:	88 23       	and	r24, r24
     3b6:	29 f0       	breq	.+10     	; 0x3c2 <_nrf24l01p_csn_pin+0x12>
     3b8:	83 e0       	ldi	r24, 0x03	; 3
     3ba:	90 e2       	ldi	r25, 0x20	; 32
     3bc:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
     3c0:	04 c0       	rjmp	.+8      	; 0x3ca <_nrf24l01p_csn_pin+0x1a>
     3c2:	83 e0       	ldi	r24, 0x03	; 3
     3c4:	90 e2       	ldi	r25, 0x20	; 32
     3c6:	0e 94 31 12 	call	0x2462	; 0x2462 <DigitalPin_ClearValue>
     3ca:	c0 93 84 93 	sts	0x9384, r28	; 0x809384 <_nrf24l01p_csn_value>
     3ce:	cf 91       	pop	r28
     3d0:	08 95       	ret

000003d2 <_nrf24l01p_read_register>:
     3d2:	cf 92       	push	r12
     3d4:	df 92       	push	r13
     3d6:	ef 92       	push	r14
     3d8:	ff 92       	push	r15
     3da:	1f 93       	push	r17
     3dc:	cf 93       	push	r28
     3de:	df 93       	push	r29
     3e0:	1f 92       	push	r1
     3e2:	cd b7       	in	r28, 0x3d	; 61
     3e4:	de b7       	in	r29, 0x3e	; 62
     3e6:	18 2f       	mov	r17, r24
     3e8:	7b 01       	movw	r14, r22
     3ea:	6a 01       	movw	r12, r20
     3ec:	80 e0       	ldi	r24, 0x00	; 0
     3ee:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     3f2:	1f 71       	andi	r17, 0x1F	; 31
     3f4:	19 83       	std	Y+1, r17	; 0x01
     3f6:	61 e0       	ldi	r22, 0x01	; 1
     3f8:	70 e0       	ldi	r23, 0x00	; 0
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     402:	b6 01       	movw	r22, r12
     404:	c7 01       	movw	r24, r14
     406:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     40a:	83 e0       	ldi	r24, 0x03	; 3
     40c:	90 e2       	ldi	r25, 0x20	; 32
     40e:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
     412:	0f 90       	pop	r0
     414:	df 91       	pop	r29
     416:	cf 91       	pop	r28
     418:	1f 91       	pop	r17
     41a:	ff 90       	pop	r15
     41c:	ef 90       	pop	r14
     41e:	df 90       	pop	r13
     420:	cf 90       	pop	r12
     422:	08 95       	ret

00000424 <_nrf24l01p_write_register>:
     424:	cf 92       	push	r12
     426:	df 92       	push	r13
     428:	ef 92       	push	r14
     42a:	ff 92       	push	r15
     42c:	1f 93       	push	r17
     42e:	cf 93       	push	r28
     430:	df 93       	push	r29
     432:	1f 92       	push	r1
     434:	cd b7       	in	r28, 0x3d	; 61
     436:	de b7       	in	r29, 0x3e	; 62
     438:	18 2f       	mov	r17, r24
     43a:	7b 01       	movw	r14, r22
     43c:	6a 01       	movw	r12, r20
     43e:	80 e0       	ldi	r24, 0x00	; 0
     440:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     444:	1f 71       	andi	r17, 0x1F	; 31
     446:	10 62       	ori	r17, 0x20	; 32
     448:	19 83       	std	Y+1, r17	; 0x01
     44a:	61 e0       	ldi	r22, 0x01	; 1
     44c:	70 e0       	ldi	r23, 0x00	; 0
     44e:	ce 01       	movw	r24, r28
     450:	01 96       	adiw	r24, 0x01	; 1
     452:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     456:	b6 01       	movw	r22, r12
     458:	c7 01       	movw	r24, r14
     45a:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     45e:	81 e0       	ldi	r24, 0x01	; 1
     460:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     464:	0f 90       	pop	r0
     466:	df 91       	pop	r29
     468:	cf 91       	pop	r28
     46a:	1f 91       	pop	r17
     46c:	ff 90       	pop	r15
     46e:	ef 90       	pop	r14
     470:	df 90       	pop	r13
     472:	cf 90       	pop	r12
     474:	08 95       	ret

00000476 <_nrf24l01p_read_rx_payload>:
     476:	ef 92       	push	r14
     478:	ff 92       	push	r15
     47a:	0f 93       	push	r16
     47c:	1f 93       	push	r17
     47e:	cf 93       	push	r28
     480:	df 93       	push	r29
     482:	1f 92       	push	r1
     484:	cd b7       	in	r28, 0x3d	; 61
     486:	de b7       	in	r29, 0x3e	; 62
     488:	8c 01       	movw	r16, r24
     48a:	7b 01       	movw	r14, r22
     48c:	80 e0       	ldi	r24, 0x00	; 0
     48e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     492:	81 e6       	ldi	r24, 0x61	; 97
     494:	89 83       	std	Y+1, r24	; 0x01
     496:	61 e0       	ldi	r22, 0x01	; 1
     498:	70 e0       	ldi	r23, 0x00	; 0
     49a:	ce 01       	movw	r24, r28
     49c:	01 96       	adiw	r24, 0x01	; 1
     49e:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     4a2:	b7 01       	movw	r22, r14
     4a4:	c8 01       	movw	r24, r16
     4a6:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     4aa:	81 e0       	ldi	r24, 0x01	; 1
     4ac:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     4b0:	0f 90       	pop	r0
     4b2:	df 91       	pop	r29
     4b4:	cf 91       	pop	r28
     4b6:	1f 91       	pop	r17
     4b8:	0f 91       	pop	r16
     4ba:	ff 90       	pop	r15
     4bc:	ef 90       	pop	r14
     4be:	08 95       	ret

000004c0 <_nrf24l01p_flush_tx>:
     4c0:	cf 93       	push	r28
     4c2:	df 93       	push	r29
     4c4:	1f 92       	push	r1
     4c6:	cd b7       	in	r28, 0x3d	; 61
     4c8:	de b7       	in	r29, 0x3e	; 62
     4ca:	80 e0       	ldi	r24, 0x00	; 0
     4cc:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     4d0:	81 ee       	ldi	r24, 0xE1	; 225
     4d2:	89 83       	std	Y+1, r24	; 0x01
     4d4:	61 e0       	ldi	r22, 0x01	; 1
     4d6:	70 e0       	ldi	r23, 0x00	; 0
     4d8:	ce 01       	movw	r24, r28
     4da:	01 96       	adiw	r24, 0x01	; 1
     4dc:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     4e0:	81 e0       	ldi	r24, 0x01	; 1
     4e2:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     4e6:	0f 90       	pop	r0
     4e8:	df 91       	pop	r29
     4ea:	cf 91       	pop	r28
     4ec:	08 95       	ret

000004ee <_nrf24l01p_flush_rx>:
     4ee:	cf 93       	push	r28
     4f0:	df 93       	push	r29
     4f2:	1f 92       	push	r1
     4f4:	cd b7       	in	r28, 0x3d	; 61
     4f6:	de b7       	in	r29, 0x3e	; 62
     4f8:	80 e0       	ldi	r24, 0x00	; 0
     4fa:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     4fe:	82 ee       	ldi	r24, 0xE2	; 226
     500:	89 83       	std	Y+1, r24	; 0x01
     502:	61 e0       	ldi	r22, 0x01	; 1
     504:	70 e0       	ldi	r23, 0x00	; 0
     506:	ce 01       	movw	r24, r28
     508:	01 96       	adiw	r24, 0x01	; 1
     50a:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     514:	0f 90       	pop	r0
     516:	df 91       	pop	r29
     518:	cf 91       	pop	r28
     51a:	08 95       	ret

0000051c <_nrf24l01p_read_rx_payload_width>:
     51c:	cf 93       	push	r28
     51e:	df 93       	push	r29
     520:	1f 92       	push	r1
     522:	1f 92       	push	r1
     524:	cd b7       	in	r28, 0x3d	; 61
     526:	de b7       	in	r29, 0x3e	; 62
     528:	80 e0       	ldi	r24, 0x00	; 0
     52a:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     52e:	80 e6       	ldi	r24, 0x60	; 96
     530:	89 83       	std	Y+1, r24	; 0x01
     532:	8f ef       	ldi	r24, 0xFF	; 255
     534:	8a 83       	std	Y+2, r24	; 0x02
     536:	61 e0       	ldi	r22, 0x01	; 1
     538:	70 e0       	ldi	r23, 0x00	; 0
     53a:	ce 01       	movw	r24, r28
     53c:	01 96       	adiw	r24, 0x01	; 1
     53e:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     542:	61 e0       	ldi	r22, 0x01	; 1
     544:	70 e0       	ldi	r23, 0x00	; 0
     546:	ce 01       	movw	r24, r28
     548:	02 96       	adiw	r24, 0x02	; 2
     54a:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     54e:	81 e0       	ldi	r24, 0x01	; 1
     550:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     554:	8a 81       	ldd	r24, Y+2	; 0x02
     556:	90 e0       	ldi	r25, 0x00	; 0
     558:	0f 90       	pop	r0
     55a:	0f 90       	pop	r0
     55c:	df 91       	pop	r29
     55e:	cf 91       	pop	r28
     560:	08 95       	ret

00000562 <_nrf24l01p_get_status>:
     562:	cf 93       	push	r28
     564:	df 93       	push	r29
     566:	1f 92       	push	r1
     568:	cd b7       	in	r28, 0x3d	; 61
     56a:	de b7       	in	r29, 0x3e	; 62
     56c:	80 e0       	ldi	r24, 0x00	; 0
     56e:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     572:	8f ef       	ldi	r24, 0xFF	; 255
     574:	89 83       	std	Y+1, r24	; 0x01
     576:	61 e0       	ldi	r22, 0x01	; 1
     578:	70 e0       	ldi	r23, 0x00	; 0
     57a:	ce 01       	movw	r24, r28
     57c:	01 96       	adiw	r24, 0x01	; 1
     57e:	0e 94 aa 01 	call	0x354	; 0x354 <arch_spi_master_transcieve>
     582:	81 e0       	ldi	r24, 0x01	; 1
     584:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     588:	89 81       	ldd	r24, Y+1	; 0x01
     58a:	90 e0       	ldi	r25, 0x00	; 0
     58c:	0f 90       	pop	r0
     58e:	df 91       	pop	r29
     590:	cf 91       	pop	r28
     592:	08 95       	ret

00000594 <_nrf24l01p_power_up>:
     594:	cf 93       	push	r28
     596:	df 93       	push	r29
     598:	1f 92       	push	r1
     59a:	cd b7       	in	r28, 0x3d	; 61
     59c:	de b7       	in	r29, 0x3e	; 62
     59e:	41 e0       	ldi	r20, 0x01	; 1
     5a0:	50 e0       	ldi	r21, 0x00	; 0
     5a2:	be 01       	movw	r22, r28
     5a4:	6f 5f       	subi	r22, 0xFF	; 255
     5a6:	7f 4f       	sbci	r23, 0xFF	; 255
     5a8:	80 e0       	ldi	r24, 0x00	; 0
     5aa:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     5ae:	89 81       	ldd	r24, Y+1	; 0x01
     5b0:	82 60       	ori	r24, 0x02	; 2
     5b2:	89 83       	std	Y+1, r24	; 0x01
     5b4:	41 e0       	ldi	r20, 0x01	; 1
     5b6:	50 e0       	ldi	r21, 0x00	; 0
     5b8:	be 01       	movw	r22, r28
     5ba:	6f 5f       	subi	r22, 0xFF	; 255
     5bc:	7f 4f       	sbci	r23, 0xFF	; 255
     5be:	80 e0       	ldi	r24, 0x00	; 0
     5c0:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     5c4:	0f 90       	pop	r0
     5c6:	df 91       	pop	r29
     5c8:	cf 91       	pop	r28
     5ca:	08 95       	ret

000005cc <_nrf24l01p_power_down>:
     5cc:	cf 93       	push	r28
     5ce:	df 93       	push	r29
     5d0:	1f 92       	push	r1
     5d2:	cd b7       	in	r28, 0x3d	; 61
     5d4:	de b7       	in	r29, 0x3e	; 62
     5d6:	41 e0       	ldi	r20, 0x01	; 1
     5d8:	50 e0       	ldi	r21, 0x00	; 0
     5da:	be 01       	movw	r22, r28
     5dc:	6f 5f       	subi	r22, 0xFF	; 255
     5de:	7f 4f       	sbci	r23, 0xFF	; 255
     5e0:	80 e0       	ldi	r24, 0x00	; 0
     5e2:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     5e6:	89 81       	ldd	r24, Y+1	; 0x01
     5e8:	8d 7f       	andi	r24, 0xFD	; 253
     5ea:	89 83       	std	Y+1, r24	; 0x01
     5ec:	41 e0       	ldi	r20, 0x01	; 1
     5ee:	50 e0       	ldi	r21, 0x00	; 0
     5f0:	be 01       	movw	r22, r28
     5f2:	6f 5f       	subi	r22, 0xFF	; 255
     5f4:	7f 4f       	sbci	r23, 0xFF	; 255
     5f6:	80 e0       	ldi	r24, 0x00	; 0
     5f8:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     5fc:	0f 90       	pop	r0
     5fe:	df 91       	pop	r29
     600:	cf 91       	pop	r28
     602:	08 95       	ret

00000604 <_nrf24l01p_rx_mode>:
     604:	cf 93       	push	r28
     606:	df 93       	push	r29
     608:	1f 92       	push	r1
     60a:	cd b7       	in	r28, 0x3d	; 61
     60c:	de b7       	in	r29, 0x3e	; 62
     60e:	41 e0       	ldi	r20, 0x01	; 1
     610:	50 e0       	ldi	r21, 0x00	; 0
     612:	be 01       	movw	r22, r28
     614:	6f 5f       	subi	r22, 0xFF	; 255
     616:	7f 4f       	sbci	r23, 0xFF	; 255
     618:	80 e0       	ldi	r24, 0x00	; 0
     61a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     61e:	89 81       	ldd	r24, Y+1	; 0x01
     620:	81 60       	ori	r24, 0x01	; 1
     622:	89 83       	std	Y+1, r24	; 0x01
     624:	41 e0       	ldi	r20, 0x01	; 1
     626:	50 e0       	ldi	r21, 0x00	; 0
     628:	be 01       	movw	r22, r28
     62a:	6f 5f       	subi	r22, 0xFF	; 255
     62c:	7f 4f       	sbci	r23, 0xFF	; 255
     62e:	80 e0       	ldi	r24, 0x00	; 0
     630:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     634:	83 e0       	ldi	r24, 0x03	; 3
     636:	80 93 86 93 	sts	0x9386, r24	; 0x809386 <mode>
     63a:	0f 90       	pop	r0
     63c:	df 91       	pop	r29
     63e:	cf 91       	pop	r28
     640:	08 95       	ret

00000642 <_nrf24l01p_tx_mode>:
     642:	cf 93       	push	r28
     644:	df 93       	push	r29
     646:	1f 92       	push	r1
     648:	cd b7       	in	r28, 0x3d	; 61
     64a:	de b7       	in	r29, 0x3e	; 62
     64c:	41 e0       	ldi	r20, 0x01	; 1
     64e:	50 e0       	ldi	r21, 0x00	; 0
     650:	be 01       	movw	r22, r28
     652:	6f 5f       	subi	r22, 0xFF	; 255
     654:	7f 4f       	sbci	r23, 0xFF	; 255
     656:	80 e0       	ldi	r24, 0x00	; 0
     658:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     65c:	89 81       	ldd	r24, Y+1	; 0x01
     65e:	8e 7f       	andi	r24, 0xFE	; 254
     660:	89 83       	std	Y+1, r24	; 0x01
     662:	41 e0       	ldi	r20, 0x01	; 1
     664:	50 e0       	ldi	r21, 0x00	; 0
     666:	be 01       	movw	r22, r28
     668:	6f 5f       	subi	r22, 0xFF	; 255
     66a:	7f 4f       	sbci	r23, 0xFF	; 255
     66c:	80 e0       	ldi	r24, 0x00	; 0
     66e:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     672:	84 e0       	ldi	r24, 0x04	; 4
     674:	80 93 86 93 	sts	0x9386, r24	; 0x809386 <mode>
     678:	0f 90       	pop	r0
     67a:	df 91       	pop	r29
     67c:	cf 91       	pop	r28
     67e:	08 95       	ret

00000680 <_nrf24l01p_enable_auto_ack>:
     680:	1f 93       	push	r17
     682:	cf 93       	push	r28
     684:	df 93       	push	r29
     686:	1f 92       	push	r1
     688:	cd b7       	in	r28, 0x3d	; 61
     68a:	de b7       	in	r29, 0x3e	; 62
     68c:	18 2f       	mov	r17, r24
     68e:	41 e0       	ldi	r20, 0x01	; 1
     690:	50 e0       	ldi	r21, 0x00	; 0
     692:	be 01       	movw	r22, r28
     694:	6f 5f       	subi	r22, 0xFF	; 255
     696:	7f 4f       	sbci	r23, 0xFF	; 255
     698:	81 e0       	ldi	r24, 0x01	; 1
     69a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     69e:	21 e0       	ldi	r18, 0x01	; 1
     6a0:	30 e0       	ldi	r19, 0x00	; 0
     6a2:	c9 01       	movw	r24, r18
     6a4:	02 c0       	rjmp	.+4      	; 0x6aa <_nrf24l01p_enable_auto_ack+0x2a>
     6a6:	88 0f       	add	r24, r24
     6a8:	99 1f       	adc	r25, r25
     6aa:	1a 95       	dec	r17
     6ac:	e2 f7       	brpl	.-8      	; 0x6a6 <_nrf24l01p_enable_auto_ack+0x26>
     6ae:	99 81       	ldd	r25, Y+1	; 0x01
     6b0:	89 2b       	or	r24, r25
     6b2:	89 83       	std	Y+1, r24	; 0x01
     6b4:	41 e0       	ldi	r20, 0x01	; 1
     6b6:	50 e0       	ldi	r21, 0x00	; 0
     6b8:	be 01       	movw	r22, r28
     6ba:	6f 5f       	subi	r22, 0xFF	; 255
     6bc:	7f 4f       	sbci	r23, 0xFF	; 255
     6be:	81 e0       	ldi	r24, 0x01	; 1
     6c0:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     6c4:	0f 90       	pop	r0
     6c6:	df 91       	pop	r29
     6c8:	cf 91       	pop	r28
     6ca:	1f 91       	pop	r17
     6cc:	08 95       	ret

000006ce <_nrf24l01p_disable_auto_ack_all_pipes>:
     6ce:	cf 93       	push	r28
     6d0:	df 93       	push	r29
     6d2:	1f 92       	push	r1
     6d4:	cd b7       	in	r28, 0x3d	; 61
     6d6:	de b7       	in	r29, 0x3e	; 62
     6d8:	19 82       	std	Y+1, r1	; 0x01
     6da:	41 e0       	ldi	r20, 0x01	; 1
     6dc:	50 e0       	ldi	r21, 0x00	; 0
     6de:	be 01       	movw	r22, r28
     6e0:	6f 5f       	subi	r22, 0xFF	; 255
     6e2:	7f 4f       	sbci	r23, 0xFF	; 255
     6e4:	81 e0       	ldi	r24, 0x01	; 1
     6e6:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     6ea:	0f 90       	pop	r0
     6ec:	df 91       	pop	r29
     6ee:	cf 91       	pop	r28
     6f0:	08 95       	ret

000006f2 <_nrf24l01p_enable_rx_on_pipe>:
     6f2:	1f 93       	push	r17
     6f4:	cf 93       	push	r28
     6f6:	df 93       	push	r29
     6f8:	1f 92       	push	r1
     6fa:	cd b7       	in	r28, 0x3d	; 61
     6fc:	de b7       	in	r29, 0x3e	; 62
     6fe:	18 2f       	mov	r17, r24
     700:	41 e0       	ldi	r20, 0x01	; 1
     702:	50 e0       	ldi	r21, 0x00	; 0
     704:	be 01       	movw	r22, r28
     706:	6f 5f       	subi	r22, 0xFF	; 255
     708:	7f 4f       	sbci	r23, 0xFF	; 255
     70a:	82 e0       	ldi	r24, 0x02	; 2
     70c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     710:	21 e0       	ldi	r18, 0x01	; 1
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	c9 01       	movw	r24, r18
     716:	02 c0       	rjmp	.+4      	; 0x71c <_nrf24l01p_enable_rx_on_pipe+0x2a>
     718:	88 0f       	add	r24, r24
     71a:	99 1f       	adc	r25, r25
     71c:	1a 95       	dec	r17
     71e:	e2 f7       	brpl	.-8      	; 0x718 <_nrf24l01p_enable_rx_on_pipe+0x26>
     720:	99 81       	ldd	r25, Y+1	; 0x01
     722:	89 2b       	or	r24, r25
     724:	89 83       	std	Y+1, r24	; 0x01
     726:	41 e0       	ldi	r20, 0x01	; 1
     728:	50 e0       	ldi	r21, 0x00	; 0
     72a:	be 01       	movw	r22, r28
     72c:	6f 5f       	subi	r22, 0xFF	; 255
     72e:	7f 4f       	sbci	r23, 0xFF	; 255
     730:	82 e0       	ldi	r24, 0x02	; 2
     732:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     736:	0f 90       	pop	r0
     738:	df 91       	pop	r29
     73a:	cf 91       	pop	r28
     73c:	1f 91       	pop	r17
     73e:	08 95       	ret

00000740 <_nrf24l01p_set_auto_retransmission_count>:
     740:	1f 93       	push	r17
     742:	cf 93       	push	r28
     744:	df 93       	push	r29
     746:	1f 92       	push	r1
     748:	cd b7       	in	r28, 0x3d	; 61
     74a:	de b7       	in	r29, 0x3e	; 62
     74c:	18 2f       	mov	r17, r24
     74e:	41 e0       	ldi	r20, 0x01	; 1
     750:	50 e0       	ldi	r21, 0x00	; 0
     752:	be 01       	movw	r22, r28
     754:	6f 5f       	subi	r22, 0xFF	; 255
     756:	7f 4f       	sbci	r23, 0xFF	; 255
     758:	84 e0       	ldi	r24, 0x04	; 4
     75a:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     75e:	99 81       	ldd	r25, Y+1	; 0x01
     760:	90 7f       	andi	r25, 0xF0	; 240
     762:	81 2f       	mov	r24, r17
     764:	89 2b       	or	r24, r25
     766:	89 83       	std	Y+1, r24	; 0x01
     768:	41 e0       	ldi	r20, 0x01	; 1
     76a:	50 e0       	ldi	r21, 0x00	; 0
     76c:	be 01       	movw	r22, r28
     76e:	6f 5f       	subi	r22, 0xFF	; 255
     770:	7f 4f       	sbci	r23, 0xFF	; 255
     772:	84 e0       	ldi	r24, 0x04	; 4
     774:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     778:	0f 90       	pop	r0
     77a:	df 91       	pop	r29
     77c:	cf 91       	pop	r28
     77e:	1f 91       	pop	r17
     780:	08 95       	ret

00000782 <_nrf24l01p_set_auto_retransmission_delay>:
     782:	1f 93       	push	r17
     784:	cf 93       	push	r28
     786:	df 93       	push	r29
     788:	1f 92       	push	r1
     78a:	cd b7       	in	r28, 0x3d	; 61
     78c:	de b7       	in	r29, 0x3e	; 62
     78e:	18 2f       	mov	r17, r24
     790:	41 e0       	ldi	r20, 0x01	; 1
     792:	50 e0       	ldi	r21, 0x00	; 0
     794:	be 01       	movw	r22, r28
     796:	6f 5f       	subi	r22, 0xFF	; 255
     798:	7f 4f       	sbci	r23, 0xFF	; 255
     79a:	84 e0       	ldi	r24, 0x04	; 4
     79c:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     7a0:	20 e1       	ldi	r18, 0x10	; 16
     7a2:	12 9f       	mul	r17, r18
     7a4:	c0 01       	movw	r24, r0
     7a6:	11 24       	eor	r1, r1
     7a8:	99 81       	ldd	r25, Y+1	; 0x01
     7aa:	9f 70       	andi	r25, 0x0F	; 15
     7ac:	89 2b       	or	r24, r25
     7ae:	89 83       	std	Y+1, r24	; 0x01
     7b0:	41 e0       	ldi	r20, 0x01	; 1
     7b2:	50 e0       	ldi	r21, 0x00	; 0
     7b4:	be 01       	movw	r22, r28
     7b6:	6f 5f       	subi	r22, 0xFF	; 255
     7b8:	7f 4f       	sbci	r23, 0xFF	; 255
     7ba:	84 e0       	ldi	r24, 0x04	; 4
     7bc:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     7c0:	0f 90       	pop	r0
     7c2:	df 91       	pop	r29
     7c4:	cf 91       	pop	r28
     7c6:	1f 91       	pop	r17
     7c8:	08 95       	ret

000007ca <_nrf24l01p_set_DataRate>:
     7ca:	1f 93       	push	r17
     7cc:	cf 93       	push	r28
     7ce:	df 93       	push	r29
     7d0:	1f 92       	push	r1
     7d2:	cd b7       	in	r28, 0x3d	; 61
     7d4:	de b7       	in	r29, 0x3e	; 62
     7d6:	18 2f       	mov	r17, r24
     7d8:	41 e0       	ldi	r20, 0x01	; 1
     7da:	50 e0       	ldi	r21, 0x00	; 0
     7dc:	be 01       	movw	r22, r28
     7de:	6f 5f       	subi	r22, 0xFF	; 255
     7e0:	7f 4f       	sbci	r23, 0xFF	; 255
     7e2:	86 e0       	ldi	r24, 0x06	; 6
     7e4:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     7e8:	99 81       	ldd	r25, Y+1	; 0x01
     7ea:	97 7d       	andi	r25, 0xD7	; 215
     7ec:	81 2f       	mov	r24, r17
     7ee:	89 2b       	or	r24, r25
     7f0:	89 83       	std	Y+1, r24	; 0x01
     7f2:	41 e0       	ldi	r20, 0x01	; 1
     7f4:	50 e0       	ldi	r21, 0x00	; 0
     7f6:	be 01       	movw	r22, r28
     7f8:	6f 5f       	subi	r22, 0xFF	; 255
     7fa:	7f 4f       	sbci	r23, 0xFF	; 255
     7fc:	86 e0       	ldi	r24, 0x06	; 6
     7fe:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     802:	0f 90       	pop	r0
     804:	df 91       	pop	r29
     806:	cf 91       	pop	r28
     808:	1f 91       	pop	r17
     80a:	08 95       	ret

0000080c <_nrf24l01p_get_max_retry_flag>:
     80c:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     810:	92 95       	swap	r25
     812:	82 95       	swap	r24
     814:	8f 70       	andi	r24, 0x0F	; 15
     816:	89 27       	eor	r24, r25
     818:	9f 70       	andi	r25, 0x0F	; 15
     81a:	89 27       	eor	r24, r25
     81c:	81 70       	andi	r24, 0x01	; 1
     81e:	08 95       	ret

00000820 <_nrf24l01p_get_data_sent_flag>:
     820:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     824:	96 95       	lsr	r25
     826:	87 95       	ror	r24
     828:	92 95       	swap	r25
     82a:	82 95       	swap	r24
     82c:	8f 70       	andi	r24, 0x0F	; 15
     82e:	89 27       	eor	r24, r25
     830:	9f 70       	andi	r25, 0x0F	; 15
     832:	89 27       	eor	r24, r25
     834:	81 70       	andi	r24, 0x01	; 1
     836:	08 95       	ret

00000838 <_nrf24l01p_clear_data_sent_flag>:
     838:	cf 93       	push	r28
     83a:	df 93       	push	r29
     83c:	1f 92       	push	r1
     83e:	cd b7       	in	r28, 0x3d	; 61
     840:	de b7       	in	r29, 0x3e	; 62
     842:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     846:	80 62       	ori	r24, 0x20	; 32
     848:	89 83       	std	Y+1, r24	; 0x01
     84a:	41 e0       	ldi	r20, 0x01	; 1
     84c:	50 e0       	ldi	r21, 0x00	; 0
     84e:	be 01       	movw	r22, r28
     850:	6f 5f       	subi	r22, 0xFF	; 255
     852:	7f 4f       	sbci	r23, 0xFF	; 255
     854:	87 e0       	ldi	r24, 0x07	; 7
     856:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     85a:	0f 90       	pop	r0
     85c:	df 91       	pop	r29
     85e:	cf 91       	pop	r28
     860:	08 95       	ret

00000862 <_nrf24l01p_get_data_ready_flag>:
     862:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     866:	00 24       	eor	r0, r0
     868:	88 0f       	add	r24, r24
     86a:	99 1f       	adc	r25, r25
     86c:	00 1c       	adc	r0, r0
     86e:	88 0f       	add	r24, r24
     870:	99 1f       	adc	r25, r25
     872:	00 1c       	adc	r0, r0
     874:	89 2f       	mov	r24, r25
     876:	90 2d       	mov	r25, r0
     878:	81 70       	andi	r24, 0x01	; 1
     87a:	08 95       	ret

0000087c <_nrf24l01p_clear_data_ready_flag>:
     87c:	cf 93       	push	r28
     87e:	df 93       	push	r29
     880:	1f 92       	push	r1
     882:	cd b7       	in	r28, 0x3d	; 61
     884:	de b7       	in	r29, 0x3e	; 62
     886:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     88a:	80 64       	ori	r24, 0x40	; 64
     88c:	89 83       	std	Y+1, r24	; 0x01
     88e:	41 e0       	ldi	r20, 0x01	; 1
     890:	50 e0       	ldi	r21, 0x00	; 0
     892:	be 01       	movw	r22, r28
     894:	6f 5f       	subi	r22, 0xFF	; 255
     896:	7f 4f       	sbci	r23, 0xFF	; 255
     898:	87 e0       	ldi	r24, 0x07	; 7
     89a:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     89e:	0f 90       	pop	r0
     8a0:	df 91       	pop	r29
     8a2:	cf 91       	pop	r28
     8a4:	08 95       	ret

000008a6 <_nrf24l01p_get_rx_payload_pipe>:
     8a6:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     8aa:	8e 70       	andi	r24, 0x0E	; 14
     8ac:	99 27       	eor	r25, r25
     8ae:	95 95       	asr	r25
     8b0:	87 95       	ror	r24
     8b2:	08 95       	ret

000008b4 <_nrf24l01p_set_RX_pipe_address>:
     8b4:	2f 92       	push	r2
     8b6:	3f 92       	push	r3
     8b8:	4f 92       	push	r4
     8ba:	5f 92       	push	r5
     8bc:	6f 92       	push	r6
     8be:	7f 92       	push	r7
     8c0:	8f 92       	push	r8
     8c2:	9f 92       	push	r9
     8c4:	af 92       	push	r10
     8c6:	bf 92       	push	r11
     8c8:	cf 92       	push	r12
     8ca:	df 92       	push	r13
     8cc:	ef 92       	push	r14
     8ce:	ff 92       	push	r15
     8d0:	0f 93       	push	r16
     8d2:	1f 93       	push	r17
     8d4:	cf 93       	push	r28
     8d6:	df 93       	push	r29
     8d8:	cd b7       	in	r28, 0x3d	; 61
     8da:	de b7       	in	r29, 0x3e	; 62
     8dc:	25 97       	sbiw	r28, 0x05	; 5
     8de:	cd bf       	out	0x3d, r28	; 61
     8e0:	de bf       	out	0x3e, r29	; 62
     8e2:	48 2e       	mov	r4, r24
     8e4:	b0 2e       	mov	r11, r16
     8e6:	a2 2e       	mov	r10, r18
     8e8:	93 2e       	mov	r9, r19
     8ea:	84 2e       	mov	r8, r20
     8ec:	75 2e       	mov	r7, r21
     8ee:	66 2e       	mov	r6, r22
     8f0:	57 2e       	mov	r5, r23
     8f2:	81 e0       	ldi	r24, 0x01	; 1
     8f4:	84 15       	cp	r24, r4
     8f6:	68 f4       	brcc	.+26     	; 0x912 <_nrf24l01p_set_RX_pipe_address+0x5e>
     8f8:	21 e0       	ldi	r18, 0x01	; 1
     8fa:	90 e0       	ldi	r25, 0x00	; 0
     8fc:	8e ef       	ldi	r24, 0xFE	; 254
     8fe:	84 0d       	add	r24, r4
     900:	84 30       	cpi	r24, 0x04	; 4
     902:	08 f0       	brcs	.+2      	; 0x906 <_nrf24l01p_set_RX_pipe_address+0x52>
     904:	20 e0       	ldi	r18, 0x00	; 0
     906:	c2 2e       	mov	r12, r18
     908:	d9 2e       	mov	r13, r25
     90a:	1c 14       	cp	r1, r12
     90c:	1d 04       	cpc	r1, r13
     90e:	34 f0       	brlt	.+12     	; 0x91c <_nrf24l01p_set_RX_pipe_address+0x68>
     910:	21 c0       	rjmp	.+66     	; 0x954 <_nrf24l01p_set_RX_pipe_address+0xa0>
     912:	0f 2e       	mov	r0, r31
     914:	f5 e0       	ldi	r31, 0x05	; 5
     916:	cf 2e       	mov	r12, r31
     918:	d1 2c       	mov	r13, r1
     91a:	f0 2d       	mov	r31, r0
     91c:	de 01       	movw	r26, r28
     91e:	11 96       	adiw	r26, 0x01	; 1
     920:	7d 01       	movw	r14, r26
     922:	21 2c       	mov	r2, r1
     924:	31 2c       	mov	r3, r1
     926:	e0 e0       	ldi	r30, 0x00	; 0
     928:	f0 e0       	ldi	r31, 0x00	; 0
     92a:	2b 2d       	mov	r18, r11
     92c:	31 2f       	mov	r19, r17
     92e:	4a 2d       	mov	r20, r10
     930:	59 2d       	mov	r21, r9
     932:	68 2d       	mov	r22, r8
     934:	77 2d       	mov	r23, r7
     936:	86 2d       	mov	r24, r6
     938:	95 2d       	mov	r25, r5
     93a:	02 2d       	mov	r16, r2
     93c:	0e 94 cd 16 	call	0x2d9a	; 0x2d9a <__lshrdi3>
     940:	d7 01       	movw	r26, r14
     942:	2d 93       	st	X+, r18
     944:	7d 01       	movw	r14, r26
     946:	31 96       	adiw	r30, 0x01	; 1
     948:	b8 e0       	ldi	r27, 0x08	; 8
     94a:	2b 0e       	add	r2, r27
     94c:	31 1c       	adc	r3, r1
     94e:	ec 15       	cp	r30, r12
     950:	fd 05       	cpc	r31, r13
     952:	5c f3       	brlt	.-42     	; 0x92a <_nrf24l01p_set_RX_pipe_address+0x76>
     954:	a6 01       	movw	r20, r12
     956:	be 01       	movw	r22, r28
     958:	6f 5f       	subi	r22, 0xFF	; 255
     95a:	7f 4f       	sbci	r23, 0xFF	; 255
     95c:	8a e0       	ldi	r24, 0x0A	; 10
     95e:	84 0d       	add	r24, r4
     960:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     964:	25 96       	adiw	r28, 0x05	; 5
     966:	cd bf       	out	0x3d, r28	; 61
     968:	de bf       	out	0x3e, r29	; 62
     96a:	df 91       	pop	r29
     96c:	cf 91       	pop	r28
     96e:	1f 91       	pop	r17
     970:	0f 91       	pop	r16
     972:	ff 90       	pop	r15
     974:	ef 90       	pop	r14
     976:	df 90       	pop	r13
     978:	cf 90       	pop	r12
     97a:	bf 90       	pop	r11
     97c:	af 90       	pop	r10
     97e:	9f 90       	pop	r9
     980:	8f 90       	pop	r8
     982:	7f 90       	pop	r7
     984:	6f 90       	pop	r6
     986:	5f 90       	pop	r5
     988:	4f 90       	pop	r4
     98a:	3f 90       	pop	r3
     98c:	2f 90       	pop	r2
     98e:	08 95       	ret

00000990 <_nrf24l01p_get_fifo_flag_rx_empty>:
     990:	cf 93       	push	r28
     992:	df 93       	push	r29
     994:	1f 92       	push	r1
     996:	cd b7       	in	r28, 0x3d	; 61
     998:	de b7       	in	r29, 0x3e	; 62
     99a:	41 e0       	ldi	r20, 0x01	; 1
     99c:	50 e0       	ldi	r21, 0x00	; 0
     99e:	be 01       	movw	r22, r28
     9a0:	6f 5f       	subi	r22, 0xFF	; 255
     9a2:	7f 4f       	sbci	r23, 0xFF	; 255
     9a4:	87 e1       	ldi	r24, 0x17	; 23
     9a6:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     9aa:	89 81       	ldd	r24, Y+1	; 0x01
     9ac:	81 70       	andi	r24, 0x01	; 1
     9ae:	0f 90       	pop	r0
     9b0:	df 91       	pop	r29
     9b2:	cf 91       	pop	r28
     9b4:	08 95       	ret

000009b6 <_nrf24l01p_get_fifo_flag_tx_empty>:
     9b6:	cf 93       	push	r28
     9b8:	df 93       	push	r29
     9ba:	1f 92       	push	r1
     9bc:	cd b7       	in	r28, 0x3d	; 61
     9be:	de b7       	in	r29, 0x3e	; 62
     9c0:	41 e0       	ldi	r20, 0x01	; 1
     9c2:	50 e0       	ldi	r21, 0x00	; 0
     9c4:	be 01       	movw	r22, r28
     9c6:	6f 5f       	subi	r22, 0xFF	; 255
     9c8:	7f 4f       	sbci	r23, 0xFF	; 255
     9ca:	87 e1       	ldi	r24, 0x17	; 23
     9cc:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     9d0:	89 81       	ldd	r24, Y+1	; 0x01
     9d2:	82 95       	swap	r24
     9d4:	81 70       	andi	r24, 0x01	; 1
     9d6:	0f 90       	pop	r0
     9d8:	df 91       	pop	r29
     9da:	cf 91       	pop	r28
     9dc:	08 95       	ret

000009de <_nrf24l01p_enable_dynamic_payload_pipe>:
     9de:	1f 93       	push	r17
     9e0:	cf 93       	push	r28
     9e2:	df 93       	push	r29
     9e4:	1f 92       	push	r1
     9e6:	cd b7       	in	r28, 0x3d	; 61
     9e8:	de b7       	in	r29, 0x3e	; 62
     9ea:	18 2f       	mov	r17, r24
     9ec:	41 e0       	ldi	r20, 0x01	; 1
     9ee:	50 e0       	ldi	r21, 0x00	; 0
     9f0:	be 01       	movw	r22, r28
     9f2:	6f 5f       	subi	r22, 0xFF	; 255
     9f4:	7f 4f       	sbci	r23, 0xFF	; 255
     9f6:	8c e1       	ldi	r24, 0x1C	; 28
     9f8:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     9fc:	21 e0       	ldi	r18, 0x01	; 1
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	c9 01       	movw	r24, r18
     a02:	02 c0       	rjmp	.+4      	; 0xa08 <_nrf24l01p_enable_dynamic_payload_pipe+0x2a>
     a04:	88 0f       	add	r24, r24
     a06:	99 1f       	adc	r25, r25
     a08:	1a 95       	dec	r17
     a0a:	e2 f7       	brpl	.-8      	; 0xa04 <_nrf24l01p_enable_dynamic_payload_pipe+0x26>
     a0c:	99 81       	ldd	r25, Y+1	; 0x01
     a0e:	89 2b       	or	r24, r25
     a10:	89 83       	std	Y+1, r24	; 0x01
     a12:	41 e0       	ldi	r20, 0x01	; 1
     a14:	50 e0       	ldi	r21, 0x00	; 0
     a16:	be 01       	movw	r22, r28
     a18:	6f 5f       	subi	r22, 0xFF	; 255
     a1a:	7f 4f       	sbci	r23, 0xFF	; 255
     a1c:	8c e1       	ldi	r24, 0x1C	; 28
     a1e:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     a22:	0f 90       	pop	r0
     a24:	df 91       	pop	r29
     a26:	cf 91       	pop	r28
     a28:	1f 91       	pop	r17
     a2a:	08 95       	ret

00000a2c <_nrf24l01p_disable_dynamic_payload_all_pipe>:
     a2c:	cf 93       	push	r28
     a2e:	df 93       	push	r29
     a30:	1f 92       	push	r1
     a32:	cd b7       	in	r28, 0x3d	; 61
     a34:	de b7       	in	r29, 0x3e	; 62
     a36:	19 82       	std	Y+1, r1	; 0x01
     a38:	41 e0       	ldi	r20, 0x01	; 1
     a3a:	50 e0       	ldi	r21, 0x00	; 0
     a3c:	be 01       	movw	r22, r28
     a3e:	6f 5f       	subi	r22, 0xFF	; 255
     a40:	7f 4f       	sbci	r23, 0xFF	; 255
     a42:	8c e1       	ldi	r24, 0x1C	; 28
     a44:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     a48:	0f 90       	pop	r0
     a4a:	df 91       	pop	r29
     a4c:	cf 91       	pop	r28
     a4e:	08 95       	ret

00000a50 <_nrf24l01p_enable_dynamic_payload>:
     a50:	cf 93       	push	r28
     a52:	df 93       	push	r29
     a54:	1f 92       	push	r1
     a56:	cd b7       	in	r28, 0x3d	; 61
     a58:	de b7       	in	r29, 0x3e	; 62
     a5a:	41 e0       	ldi	r20, 0x01	; 1
     a5c:	50 e0       	ldi	r21, 0x00	; 0
     a5e:	be 01       	movw	r22, r28
     a60:	6f 5f       	subi	r22, 0xFF	; 255
     a62:	7f 4f       	sbci	r23, 0xFF	; 255
     a64:	8d e1       	ldi	r24, 0x1D	; 29
     a66:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     a6a:	89 81       	ldd	r24, Y+1	; 0x01
     a6c:	84 60       	ori	r24, 0x04	; 4
     a6e:	89 83       	std	Y+1, r24	; 0x01
     a70:	41 e0       	ldi	r20, 0x01	; 1
     a72:	50 e0       	ldi	r21, 0x00	; 0
     a74:	be 01       	movw	r22, r28
     a76:	6f 5f       	subi	r22, 0xFF	; 255
     a78:	7f 4f       	sbci	r23, 0xFF	; 255
     a7a:	8d e1       	ldi	r24, 0x1D	; 29
     a7c:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     a80:	0f 90       	pop	r0
     a82:	df 91       	pop	r29
     a84:	cf 91       	pop	r28
     a86:	08 95       	ret

00000a88 <_nrf24l01p_enable_payload_with_ack>:
     a88:	cf 93       	push	r28
     a8a:	df 93       	push	r29
     a8c:	1f 92       	push	r1
     a8e:	cd b7       	in	r28, 0x3d	; 61
     a90:	de b7       	in	r29, 0x3e	; 62
     a92:	41 e0       	ldi	r20, 0x01	; 1
     a94:	50 e0       	ldi	r21, 0x00	; 0
     a96:	be 01       	movw	r22, r28
     a98:	6f 5f       	subi	r22, 0xFF	; 255
     a9a:	7f 4f       	sbci	r23, 0xFF	; 255
     a9c:	8d e1       	ldi	r24, 0x1D	; 29
     a9e:	0e 94 e9 01 	call	0x3d2	; 0x3d2 <_nrf24l01p_read_register>
     aa2:	89 81       	ldd	r24, Y+1	; 0x01
     aa4:	82 60       	ori	r24, 0x02	; 2
     aa6:	89 83       	std	Y+1, r24	; 0x01
     aa8:	41 e0       	ldi	r20, 0x01	; 1
     aaa:	50 e0       	ldi	r21, 0x00	; 0
     aac:	be 01       	movw	r22, r28
     aae:	6f 5f       	subi	r22, 0xFF	; 255
     ab0:	7f 4f       	sbci	r23, 0xFF	; 255
     ab2:	8d e1       	ldi	r24, 0x1D	; 29
     ab4:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     ab8:	0f 90       	pop	r0
     aba:	df 91       	pop	r29
     abc:	cf 91       	pop	r28
     abe:	08 95       	ret

00000ac0 <_nrf24l01p_default_config>:
     ac0:	0e 94 67 03 	call	0x6ce	; 0x6ce <_nrf24l01p_disable_auto_ack_all_pipes>
     ac4:	0e 94 16 05 	call	0xa2c	; 0xa2c <_nrf24l01p_disable_dynamic_payload_all_pipe>
     ac8:	0e 94 28 05 	call	0xa50	; 0xa50 <_nrf24l01p_enable_dynamic_payload>
     acc:	0e 94 44 05 	call	0xa88	; 0xa88 <_nrf24l01p_enable_payload_with_ack>
     ad0:	80 e0       	ldi	r24, 0x00	; 0
     ad2:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     ad6:	81 e0       	ldi	r24, 0x01	; 1
     ad8:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     adc:	82 e0       	ldi	r24, 0x02	; 2
     ade:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     ae2:	83 e0       	ldi	r24, 0x03	; 3
     ae4:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     ae8:	84 e0       	ldi	r24, 0x04	; 4
     aea:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     aee:	85 e0       	ldi	r24, 0x05	; 5
     af0:	0e 94 40 03 	call	0x680	; 0x680 <_nrf24l01p_enable_auto_ack>
     af4:	80 e0       	ldi	r24, 0x00	; 0
     af6:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     afa:	81 e0       	ldi	r24, 0x01	; 1
     afc:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     b00:	82 e0       	ldi	r24, 0x02	; 2
     b02:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     b06:	83 e0       	ldi	r24, 0x03	; 3
     b08:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     b0c:	84 e0       	ldi	r24, 0x04	; 4
     b0e:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     b12:	85 e0       	ldi	r24, 0x05	; 5
     b14:	0e 94 ef 04 	call	0x9de	; 0x9de <_nrf24l01p_enable_dynamic_payload_pipe>
     b18:	80 e0       	ldi	r24, 0x00	; 0
     b1a:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b1e:	81 e0       	ldi	r24, 0x01	; 1
     b20:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b24:	82 e0       	ldi	r24, 0x02	; 2
     b26:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b2a:	83 e0       	ldi	r24, 0x03	; 3
     b2c:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b30:	84 e0       	ldi	r24, 0x04	; 4
     b32:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b36:	85 e0       	ldi	r24, 0x05	; 5
     b38:	0e 94 79 03 	call	0x6f2	; 0x6f2 <_nrf24l01p_enable_rx_on_pipe>
     b3c:	8f e0       	ldi	r24, 0x0F	; 15
     b3e:	0e 94 a0 03 	call	0x740	; 0x740 <_nrf24l01p_set_auto_retransmission_count>
     b42:	8f e0       	ldi	r24, 0x0F	; 15
     b44:	0e 94 c1 03 	call	0x782	; 0x782 <_nrf24l01p_set_auto_retransmission_delay>
     b48:	80 e2       	ldi	r24, 0x20	; 32
     b4a:	0e 94 e5 03 	call	0x7ca	; 0x7ca <_nrf24l01p_set_DataRate>
     b4e:	80 e0       	ldi	r24, 0x00	; 0
     b50:	90 e0       	ldi	r25, 0x00	; 0
     b52:	08 95       	ret

00000b54 <_nrf24l01p_stateMode>:
     b54:	82 30       	cpi	r24, 0x02	; 2
     b56:	91 f0       	breq	.+36     	; 0xb7c <_nrf24l01p_stateMode+0x28>
     b58:	18 f4       	brcc	.+6      	; 0xb60 <_nrf24l01p_stateMode+0xc>
     b5a:	81 30       	cpi	r24, 0x01	; 1
     b5c:	31 f0       	breq	.+12     	; 0xb6a <_nrf24l01p_stateMode+0x16>
     b5e:	3f c0       	rjmp	.+126    	; 0xbde <_nrf24l01p_stateMode+0x8a>
     b60:	83 30       	cpi	r24, 0x03	; 3
     b62:	01 f1       	breq	.+64     	; 0xba4 <_nrf24l01p_stateMode+0x50>
     b64:	84 30       	cpi	r24, 0x04	; 4
     b66:	69 f1       	breq	.+90     	; 0xbc2 <_nrf24l01p_stateMode+0x6e>
     b68:	3a c0       	rjmp	.+116    	; 0xbde <_nrf24l01p_stateMode+0x8a>
     b6a:	0e 94 e6 02 	call	0x5cc	; 0x5cc <_nrf24l01p_power_down>
     b6e:	80 e0       	ldi	r24, 0x00	; 0
     b70:	0e 94 c3 01 	call	0x386	; 0x386 <_nrf24l01p_ce_pin>
     b74:	81 e0       	ldi	r24, 0x01	; 1
     b76:	80 93 89 93 	sts	0x9389, r24	; 0x809389 <_nrf24l01p_mode>
     b7a:	31 c0       	rjmp	.+98     	; 0xbde <_nrf24l01p_stateMode+0x8a>
     b7c:	80 91 89 93 	lds	r24, 0x9389	; 0x809389 <_nrf24l01p_mode>
     b80:	81 30       	cpi	r24, 0x01	; 1
     b82:	49 f4       	brne	.+18     	; 0xb96 <_nrf24l01p_stateMode+0x42>
     b84:	0e 94 ca 02 	call	0x594	; 0x594 <_nrf24l01p_power_up>
     b88:	8f e9       	ldi	r24, 0x9F	; 159
     b8a:	9c e8       	ldi	r25, 0x8C	; 140
     b8c:	01 97       	sbiw	r24, 0x01	; 1
     b8e:	f1 f7       	brne	.-4      	; 0xb8c <_nrf24l01p_stateMode+0x38>
     b90:	00 c0       	rjmp	.+0      	; 0xb92 <_nrf24l01p_stateMode+0x3e>
     b92:	00 00       	nop
     b94:	03 c0       	rjmp	.+6      	; 0xb9c <_nrf24l01p_stateMode+0x48>
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	0e 94 c3 01 	call	0x386	; 0x386 <_nrf24l01p_ce_pin>
     b9c:	82 e0       	ldi	r24, 0x02	; 2
     b9e:	80 93 89 93 	sts	0x9389, r24	; 0x809389 <_nrf24l01p_mode>
     ba2:	1d c0       	rjmp	.+58     	; 0xbde <_nrf24l01p_stateMode+0x8a>
     ba4:	0e 94 02 03 	call	0x604	; 0x604 <_nrf24l01p_rx_mode>
     ba8:	81 e0       	ldi	r24, 0x01	; 1
     baa:	0e 94 c3 01 	call	0x386	; 0x386 <_nrf24l01p_ce_pin>
     bae:	8f e0       	ldi	r24, 0x0F	; 15
     bb0:	94 e0       	ldi	r25, 0x04	; 4
     bb2:	01 97       	sbiw	r24, 0x01	; 1
     bb4:	f1 f7       	brne	.-4      	; 0xbb2 <_nrf24l01p_stateMode+0x5e>
     bb6:	00 c0       	rjmp	.+0      	; 0xbb8 <_nrf24l01p_stateMode+0x64>
     bb8:	00 00       	nop
     bba:	83 e0       	ldi	r24, 0x03	; 3
     bbc:	80 93 89 93 	sts	0x9389, r24	; 0x809389 <_nrf24l01p_mode>
     bc0:	0e c0       	rjmp	.+28     	; 0xbde <_nrf24l01p_stateMode+0x8a>
     bc2:	0e 94 21 03 	call	0x642	; 0x642 <_nrf24l01p_tx_mode>
     bc6:	81 e0       	ldi	r24, 0x01	; 1
     bc8:	0e 94 c3 01 	call	0x386	; 0x386 <_nrf24l01p_ce_pin>
     bcc:	8f e0       	ldi	r24, 0x0F	; 15
     bce:	94 e0       	ldi	r25, 0x04	; 4
     bd0:	01 97       	sbiw	r24, 0x01	; 1
     bd2:	f1 f7       	brne	.-4      	; 0xbd0 <_nrf24l01p_stateMode+0x7c>
     bd4:	00 c0       	rjmp	.+0      	; 0xbd6 <_nrf24l01p_stateMode+0x82>
     bd6:	00 00       	nop
     bd8:	84 e0       	ldi	r24, 0x04	; 4
     bda:	80 93 89 93 	sts	0x9389, r24	; 0x809389 <_nrf24l01p_mode>
     bde:	80 e0       	ldi	r24, 0x00	; 0
     be0:	90 e0       	ldi	r25, 0x00	; 0
     be2:	08 95       	ret

00000be4 <_nrf24l01p_startup>:
     be4:	cf 93       	push	r28
     be6:	df 93       	push	r29
     be8:	1f 92       	push	r1
     bea:	1f 92       	push	r1
     bec:	cd b7       	in	r28, 0x3d	; 61
     bee:	de b7       	in	r29, 0x3e	; 62
     bf0:	80 e0       	ldi	r24, 0x00	; 0
     bf2:	0e 94 c3 01 	call	0x386	; 0x386 <_nrf24l01p_ce_pin>
     bf6:	80 e0       	ldi	r24, 0x00	; 0
     bf8:	0e 94 d8 01 	call	0x3b0	; 0x3b0 <_nrf24l01p_csn_pin>
     bfc:	2f ef       	ldi	r18, 0xFF	; 255
     bfe:	83 ec       	ldi	r24, 0xC3	; 195
     c00:	99 e0       	ldi	r25, 0x09	; 9
     c02:	21 50       	subi	r18, 0x01	; 1
     c04:	80 40       	sbci	r24, 0x00	; 0
     c06:	90 40       	sbci	r25, 0x00	; 0
     c08:	e1 f7       	brne	.-8      	; 0xc02 <_nrf24l01p_startup+0x1e>
     c0a:	00 c0       	rjmp	.+0      	; 0xc0c <_nrf24l01p_startup+0x28>
     c0c:	00 00       	nop
     c0e:	81 e0       	ldi	r24, 0x01	; 1
     c10:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     c14:	83 e0       	ldi	r24, 0x03	; 3
     c16:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     c1a:	0e 94 77 02 	call	0x4ee	; 0x4ee <_nrf24l01p_flush_rx>
     c1e:	0e 94 60 02 	call	0x4c0	; 0x4c0 <_nrf24l01p_flush_tx>
     c22:	8e e0       	ldi	r24, 0x0E	; 14
     c24:	89 83       	std	Y+1, r24	; 0x01
     c26:	41 e0       	ldi	r20, 0x01	; 1
     c28:	50 e0       	ldi	r21, 0x00	; 0
     c2a:	be 01       	movw	r22, r28
     c2c:	6f 5f       	subi	r22, 0xFF	; 255
     c2e:	7f 4f       	sbci	r23, 0xFF	; 255
     c30:	87 e0       	ldi	r24, 0x07	; 7
     c32:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     c36:	8b e0       	ldi	r24, 0x0B	; 11
     c38:	8a 83       	std	Y+2, r24	; 0x02
     c3a:	41 e0       	ldi	r20, 0x01	; 1
     c3c:	50 e0       	ldi	r21, 0x00	; 0
     c3e:	be 01       	movw	r22, r28
     c40:	6e 5f       	subi	r22, 0xFE	; 254
     c42:	7f 4f       	sbci	r23, 0xFF	; 255
     c44:	80 e0       	ldi	r24, 0x00	; 0
     c46:	0e 94 12 02 	call	0x424	; 0x424 <_nrf24l01p_write_register>
     c4a:	80 e0       	ldi	r24, 0x00	; 0
     c4c:	90 e0       	ldi	r25, 0x00	; 0
     c4e:	0f 90       	pop	r0
     c50:	0f 90       	pop	r0
     c52:	df 91       	pop	r29
     c54:	cf 91       	pop	r28
     c56:	08 95       	ret

00000c58 <_nrf24l01p_init>:
     c58:	e0 e4       	ldi	r30, 0x40	; 64
     c5a:	f6 e0       	ldi	r31, 0x06	; 6
     c5c:	80 eb       	ldi	r24, 0xB0	; 176
     c5e:	81 83       	std	Z+1, r24	; 0x01
     c60:	80 e4       	ldi	r24, 0x40	; 64
     c62:	82 83       	std	Z+2, r24	; 0x02
     c64:	80 e5       	ldi	r24, 0x50	; 80
     c66:	80 93 c0 08 	sts	0x08C0, r24	; 0x8008c0 <__TEXT_REGION_LENGTH__+0x7008c0>
     c6a:	80 e1       	ldi	r24, 0x10	; 16
     c6c:	81 83       	std	Z+1, r24	; 0x01
     c6e:	80 e8       	ldi	r24, 0x80	; 128
     c70:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <__TEXT_REGION_LENGTH__+0x700621>
     c74:	0e 94 f2 05 	call	0xbe4	; 0xbe4 <_nrf24l01p_startup>
     c78:	0e 94 60 05 	call	0xac0	; 0xac0 <_nrf24l01p_default_config>
     c7c:	08 95       	ret

00000c7e <_nrf24l01p_readable>:
     c7e:	0e 94 c8 04 	call	0x990	; 0x990 <_nrf24l01p_get_fifo_flag_rx_empty>
     c82:	91 e0       	ldi	r25, 0x01	; 1
     c84:	89 27       	eor	r24, r25
     c86:	08 95       	ret

00000c88 <_nrf24l01p_writable>:
     c88:	0e 94 db 04 	call	0x9b6	; 0x9b6 <_nrf24l01p_get_fifo_flag_tx_empty>
     c8c:	91 e0       	ldi	r25, 0x01	; 1
     c8e:	89 27       	eor	r24, r25
     c90:	08 95       	ret

00000c92 <_nrf24l01p_PTX>:
     c92:	1f 93       	push	r17
     c94:	cf 93       	push	r28
     c96:	df 93       	push	r29
     c98:	1f 92       	push	r1
     c9a:	cd b7       	in	r28, 0x3d	; 61
     c9c:	de b7       	in	r29, 0x3e	; 62
     c9e:	10 91 89 93 	lds	r17, 0x9389	; 0x809389 <_nrf24l01p_mode>
     ca2:	82 e0       	ldi	r24, 0x02	; 2
     ca4:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     ca8:	0e 94 44 06 	call	0xc88	; 0xc88 <_nrf24l01p_writable>
     cac:	88 23       	and	r24, r24
     cae:	41 f1       	breq	.+80     	; 0xd00 <_nrf24l01p_PTX+0x6e>
     cb0:	0e 94 3f 06 	call	0xc7e	; 0xc7e <_nrf24l01p_readable>
     cb4:	81 11       	cpse	r24, r1
     cb6:	24 c0       	rjmp	.+72     	; 0xd00 <_nrf24l01p_PTX+0x6e>
     cb8:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     cbc:	89 83       	std	Y+1, r24	; 0x01
     cbe:	0e 94 1c 04 	call	0x838	; 0x838 <_nrf24l01p_clear_data_sent_flag>
     cc2:	84 e0       	ldi	r24, 0x04	; 4
     cc4:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     cc8:	8f e0       	ldi	r24, 0x0F	; 15
     cca:	94 e0       	ldi	r25, 0x04	; 4
     ccc:	01 97       	sbiw	r24, 0x01	; 1
     cce:	f1 f7       	brne	.-4      	; 0xccc <_nrf24l01p_PTX+0x3a>
     cd0:	00 c0       	rjmp	.+0      	; 0xcd2 <_nrf24l01p_PTX+0x40>
     cd2:	00 00       	nop
     cd4:	82 e0       	ldi	r24, 0x02	; 2
     cd6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     cda:	0e 94 10 04 	call	0x820	; 0x820 <_nrf24l01p_get_data_sent_flag>
     cde:	81 11       	cpse	r24, r1
     ce0:	08 c0       	rjmp	.+16     	; 0xcf2 <_nrf24l01p_PTX+0x60>
     ce2:	0e 94 44 06 	call	0xc88	; 0xc88 <_nrf24l01p_writable>
     ce6:	88 23       	and	r24, r24
     ce8:	21 f0       	breq	.+8      	; 0xcf2 <_nrf24l01p_PTX+0x60>
     cea:	0e 94 06 04 	call	0x80c	; 0x80c <_nrf24l01p_get_max_retry_flag>
     cee:	88 23       	and	r24, r24
     cf0:	19 f3       	breq	.-58     	; 0xcb8 <_nrf24l01p_PTX+0x26>
     cf2:	0e 94 1c 04 	call	0x838	; 0x838 <_nrf24l01p_clear_data_sent_flag>
     cf6:	0e 94 31 04 	call	0x862	; 0x862 <_nrf24l01p_get_data_ready_flag>
     cfa:	81 11       	cpse	r24, r1
     cfc:	0e 94 77 02 	call	0x4ee	; 0x4ee <_nrf24l01p_flush_rx>
     d00:	81 2f       	mov	r24, r17
     d02:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
     d06:	0f 90       	pop	r0
     d08:	df 91       	pop	r29
     d0a:	cf 91       	pop	r28
     d0c:	1f 91       	pop	r17
     d0e:	08 95       	ret

00000d10 <_nrf24l01p_readableOnPipe>:
     d10:	cf 93       	push	r28
     d12:	86 30       	cpi	r24, 0x06	; 6
     d14:	90 f4       	brcc	.+36     	; 0xd3a <_nrf24l01p_readableOnPipe+0x2a>
     d16:	c8 2f       	mov	r28, r24
     d18:	0e 94 b1 02 	call	0x562	; 0x562 <_nrf24l01p_get_status>
     d1c:	86 ff       	sbrs	r24, 6
     d1e:	0f c0       	rjmp	.+30     	; 0xd3e <_nrf24l01p_readableOnPipe+0x2e>
     d20:	8e 70       	andi	r24, 0x0E	; 14
     d22:	99 27       	eor	r25, r25
     d24:	ac 01       	movw	r20, r24
     d26:	55 95       	asr	r21
     d28:	47 95       	ror	r20
     d2a:	2c 2f       	mov	r18, r28
     d2c:	30 e0       	ldi	r19, 0x00	; 0
     d2e:	81 e0       	ldi	r24, 0x01	; 1
     d30:	42 17       	cp	r20, r18
     d32:	53 07       	cpc	r21, r19
     d34:	29 f0       	breq	.+10     	; 0xd40 <_nrf24l01p_readableOnPipe+0x30>
     d36:	80 e0       	ldi	r24, 0x00	; 0
     d38:	03 c0       	rjmp	.+6      	; 0xd40 <_nrf24l01p_readableOnPipe+0x30>
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	01 c0       	rjmp	.+2      	; 0xd40 <_nrf24l01p_readableOnPipe+0x30>
     d3e:	80 e0       	ldi	r24, 0x00	; 0
     d40:	cf 91       	pop	r28
     d42:	08 95       	ret

00000d44 <_nrf24l01p_read_dyn_pld>:

int _nrf24l01p_read_dyn_pld(_nrf24l01p_pipe_t pipe, uint8_t *data){
     d44:	0f 93       	push	r16
     d46:	1f 93       	push	r17
     d48:	cf 93       	push	r28
     d4a:	df 93       	push	r29
	
	int rxPayloadWidth;
	
	if ( ( pipe < 0 ) || ( pipe > 5 ) ) {
     d4c:	86 30       	cpi	r24, 0x06	; 6
     d4e:	f0 f4       	brcc	.+60     	; 0xd8c <_nrf24l01p_read_dyn_pld+0x48>
     d50:	eb 01       	movw	r28, r22
		return -1;
	}
	
	if (_nrf24l01p_readableOnPipe(pipe) ) {
     d52:	0e 94 88 06 	call	0xd10	; 0xd10 <_nrf24l01p_readableOnPipe>
     d56:	88 23       	and	r24, r24
     d58:	e1 f0       	breq	.+56     	; 0xd92 <_nrf24l01p_read_dyn_pld+0x4e>
		asm("nop");
     d5a:	00 00       	nop
		rxPayloadWidth = _nrf24l01p_read_rx_payload_width();
     d5c:	0e 94 8e 02 	call	0x51c	; 0x51c <_nrf24l01p_read_rx_payload_width>
     d60:	8c 01       	movw	r16, r24
	
		if ( ( rxPayloadWidth < 0 ) || ( rxPayloadWidth > _NRF24L01P_RX_FIFO_SIZE ) ) {
     d62:	81 32       	cpi	r24, 0x21	; 33
     d64:	91 05       	cpc	r25, r1
     d66:	28 f0       	brcs	.+10     	; 0xd72 <_nrf24l01p_read_dyn_pld+0x2e>
			_nrf24l01p_flush_rx();
     d68:	0e 94 77 02 	call	0x4ee	; 0x4ee <_nrf24l01p_flush_rx>
			if(_nrf24l01p_get_fifo_flag_rx_empty()) {
				_nrf24l01p_clear_data_ready_flag();
			}
		}

		return rxPayloadWidth;
     d6c:	80 2f       	mov	r24, r16
     d6e:	91 2f       	mov	r25, r17
     d70:	15 c0       	rjmp	.+42     	; 0xd9c <_nrf24l01p_read_dyn_pld+0x58>
	
		if ( ( rxPayloadWidth < 0 ) || ( rxPayloadWidth > _NRF24L01P_RX_FIFO_SIZE ) ) {
			_nrf24l01p_flush_rx();
		}
		else{
			_nrf24l01p_read_rx_payload(data,rxPayloadWidth);
     d72:	bc 01       	movw	r22, r24
     d74:	ce 01       	movw	r24, r28
     d76:	0e 94 3b 02 	call	0x476	; 0x476 <_nrf24l01p_read_rx_payload>
					
			if(_nrf24l01p_get_fifo_flag_rx_empty()) {
     d7a:	0e 94 c8 04 	call	0x990	; 0x990 <_nrf24l01p_get_fifo_flag_rx_empty>
     d7e:	88 23       	and	r24, r24
     d80:	59 f0       	breq	.+22     	; 0xd98 <_nrf24l01p_read_dyn_pld+0x54>
				_nrf24l01p_clear_data_ready_flag();
     d82:	0e 94 3e 04 	call	0x87c	; 0x87c <_nrf24l01p_clear_data_ready_flag>
			}
		}

		return rxPayloadWidth;
     d86:	80 2f       	mov	r24, r16
     d88:	91 2f       	mov	r25, r17
     d8a:	08 c0       	rjmp	.+16     	; 0xd9c <_nrf24l01p_read_dyn_pld+0x58>
int _nrf24l01p_read_dyn_pld(_nrf24l01p_pipe_t pipe, uint8_t *data){
	
	int rxPayloadWidth;
	
	if ( ( pipe < 0 ) || ( pipe > 5 ) ) {
		return -1;
     d8c:	8f ef       	ldi	r24, 0xFF	; 255
     d8e:	9f ef       	ldi	r25, 0xFF	; 255
     d90:	05 c0       	rjmp	.+10     	; 0xd9c <_nrf24l01p_read_dyn_pld+0x58>
		}

		return rxPayloadWidth;
	}
	else {//if pipe not readable
		return 0;
     d92:	80 e0       	ldi	r24, 0x00	; 0
     d94:	90 e0       	ldi	r25, 0x00	; 0
     d96:	02 c0       	rjmp	.+4      	; 0xd9c <_nrf24l01p_read_dyn_pld+0x58>
			if(_nrf24l01p_get_fifo_flag_rx_empty()) {
				_nrf24l01p_clear_data_ready_flag();
			}
		}

		return rxPayloadWidth;
     d98:	80 2f       	mov	r24, r16
     d9a:	91 2f       	mov	r25, r17
	}
	else {//if pipe not readable
		return 0;
	}
	return 0;
}
     d9c:	df 91       	pop	r29
     d9e:	cf 91       	pop	r28
     da0:	1f 91       	pop	r17
     da2:	0f 91       	pop	r16
     da4:	08 95       	ret

00000da6 <_nrf24l01p_PRX>:
	_nrf24l01p_stateMode(originalMode);
	
}


void _nrf24l01p_PRX(){
     da6:	1f 93       	push	r17
     da8:	cf 93       	push	r28
     daa:	df 93       	push	r29
     dac:	cd b7       	in	r28, 0x3d	; 61
     dae:	de b7       	in	r29, 0x3e	; 62
     db0:	a0 97       	sbiw	r28, 0x20	; 32
     db2:	cd bf       	out	0x3d, r28	; 61
     db4:	de bf       	out	0x3e, r29	; 62

	//backup original machine state
	nRF24L01P_Mode_Type originalMode = _nrf24l01p_mode;
     db6:	10 91 89 93 	lds	r17, 0x9389	; 0x809389 <_nrf24l01p_mode>
	
	//switching to STANDBY to avoid data reception during state check (ATOMIC state check)
	_nrf24l01p_stateMode(_NRF24L01P_MODE_STANDBY);
     dba:	82 e0       	ldi	r24, 0x02	; 2
     dbc:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
	
	//if readable (if RX payload data in RX FIFO)
	if(_nrf24l01p_readable()){
     dc0:	0e 94 3f 06 	call	0xc7e	; 0xc7e <_nrf24l01p_readable>
     dc4:	88 23       	and	r24, r24
     dc6:	b1 f0       	breq	.+44     	; 0xdf4 <_nrf24l01p_PRX+0x4e>
		
		while(1){

			char rxData[32];
			int pipe = _nrf24l01p_get_rx_payload_pipe();
     dc8:	0e 94 53 04 	call	0x8a6	; 0x8a6 <_nrf24l01p_get_rx_payload_pipe>
			int width = _nrf24l01p_read_dyn_pld(pipe, rxData);
     dcc:	be 01       	movw	r22, r28
     dce:	6f 5f       	subi	r22, 0xFF	; 255
     dd0:	7f 4f       	sbci	r23, 0xFF	; 255
     dd2:	0e 94 a2 06 	call	0xd44	; 0xd44 <_nrf24l01p_read_dyn_pld>
			rxData[width] = '\0';
     dd6:	e1 e0       	ldi	r30, 0x01	; 1
     dd8:	f0 e0       	ldi	r31, 0x00	; 0
     dda:	ec 0f       	add	r30, r28
     ddc:	fd 1f       	adc	r31, r29
     dde:	e8 0f       	add	r30, r24
     de0:	f9 1f       	adc	r31, r25
     de2:	10 82       	st	Z, r1

			command_parse_execute(rxData);
     de4:	ce 01       	movw	r24, r28
     de6:	01 96       	adiw	r24, 0x01	; 1
     de8:	0e 94 7c 11 	call	0x22f8	; 0x22f8 <command_parse_execute>
			//what needs to be done with the data read
			//printf("MESG: %s\n", rxData);

			if(!_nrf24l01p_readable()) break;
     dec:	0e 94 3f 06 	call	0xc7e	; 0xc7e <_nrf24l01p_readable>
     df0:	81 11       	cpse	r24, r1
     df2:	ea cf       	rjmp	.-44     	; 0xdc8 <_nrf24l01p_PRX+0x22>
			

		}
	}
	//restore original machine state
	_nrf24l01p_stateMode(originalMode);
     df4:	81 2f       	mov	r24, r17
     df6:	0e 94 aa 05 	call	0xb54	; 0xb54 <_nrf24l01p_stateMode>
	
	
}
     dfa:	a0 96       	adiw	r28, 0x20	; 32
     dfc:	cd bf       	out	0x3d, r28	; 61
     dfe:	de bf       	out	0x3e, r29	; 62
     e00:	df 91       	pop	r29
     e02:	cf 91       	pop	r28
     e04:	1f 91       	pop	r17
     e06:	08 95       	ret

00000e08 <pxPortInitialiseStack>:
     e08:	31 e1       	ldi	r19, 0x11	; 17
     e0a:	fc 01       	movw	r30, r24
     e0c:	30 83       	st	Z, r19
     e0e:	31 97       	sbiw	r30, 0x01	; 1
     e10:	22 e2       	ldi	r18, 0x22	; 34
     e12:	20 83       	st	Z, r18
     e14:	31 97       	sbiw	r30, 0x01	; 1
     e16:	a3 e3       	ldi	r26, 0x33	; 51
     e18:	a0 83       	st	Z, r26
     e1a:	31 97       	sbiw	r30, 0x01	; 1
     e1c:	60 83       	st	Z, r22
     e1e:	31 97       	sbiw	r30, 0x01	; 1
     e20:	70 83       	st	Z, r23
     e22:	31 97       	sbiw	r30, 0x01	; 1
     e24:	10 82       	st	Z, r1
     e26:	31 97       	sbiw	r30, 0x01	; 1
     e28:	10 82       	st	Z, r1
     e2a:	31 97       	sbiw	r30, 0x01	; 1
     e2c:	60 e8       	ldi	r22, 0x80	; 128
     e2e:	60 83       	st	Z, r22
     e30:	31 97       	sbiw	r30, 0x01	; 1
     e32:	10 82       	st	Z, r1
     e34:	31 97       	sbiw	r30, 0x01	; 1
     e36:	62 e0       	ldi	r22, 0x02	; 2
     e38:	60 83       	st	Z, r22
     e3a:	31 97       	sbiw	r30, 0x01	; 1
     e3c:	63 e0       	ldi	r22, 0x03	; 3
     e3e:	60 83       	st	Z, r22
     e40:	31 97       	sbiw	r30, 0x01	; 1
     e42:	64 e0       	ldi	r22, 0x04	; 4
     e44:	60 83       	st	Z, r22
     e46:	31 97       	sbiw	r30, 0x01	; 1
     e48:	65 e0       	ldi	r22, 0x05	; 5
     e4a:	60 83       	st	Z, r22
     e4c:	31 97       	sbiw	r30, 0x01	; 1
     e4e:	66 e0       	ldi	r22, 0x06	; 6
     e50:	60 83       	st	Z, r22
     e52:	31 97       	sbiw	r30, 0x01	; 1
     e54:	67 e0       	ldi	r22, 0x07	; 7
     e56:	60 83       	st	Z, r22
     e58:	31 97       	sbiw	r30, 0x01	; 1
     e5a:	68 e0       	ldi	r22, 0x08	; 8
     e5c:	60 83       	st	Z, r22
     e5e:	31 97       	sbiw	r30, 0x01	; 1
     e60:	69 e0       	ldi	r22, 0x09	; 9
     e62:	60 83       	st	Z, r22
     e64:	31 97       	sbiw	r30, 0x01	; 1
     e66:	60 e1       	ldi	r22, 0x10	; 16
     e68:	60 83       	st	Z, r22
     e6a:	31 97       	sbiw	r30, 0x01	; 1
     e6c:	30 83       	st	Z, r19
     e6e:	31 97       	sbiw	r30, 0x01	; 1
     e70:	32 e1       	ldi	r19, 0x12	; 18
     e72:	30 83       	st	Z, r19
     e74:	31 97       	sbiw	r30, 0x01	; 1
     e76:	33 e1       	ldi	r19, 0x13	; 19
     e78:	30 83       	st	Z, r19
     e7a:	31 97       	sbiw	r30, 0x01	; 1
     e7c:	34 e1       	ldi	r19, 0x14	; 20
     e7e:	30 83       	st	Z, r19
     e80:	31 97       	sbiw	r30, 0x01	; 1
     e82:	35 e1       	ldi	r19, 0x15	; 21
     e84:	30 83       	st	Z, r19
     e86:	31 97       	sbiw	r30, 0x01	; 1
     e88:	36 e1       	ldi	r19, 0x16	; 22
     e8a:	30 83       	st	Z, r19
     e8c:	31 97       	sbiw	r30, 0x01	; 1
     e8e:	37 e1       	ldi	r19, 0x17	; 23
     e90:	30 83       	st	Z, r19
     e92:	31 97       	sbiw	r30, 0x01	; 1
     e94:	38 e1       	ldi	r19, 0x18	; 24
     e96:	30 83       	st	Z, r19
     e98:	31 97       	sbiw	r30, 0x01	; 1
     e9a:	39 e1       	ldi	r19, 0x19	; 25
     e9c:	30 83       	st	Z, r19
     e9e:	31 97       	sbiw	r30, 0x01	; 1
     ea0:	30 e2       	ldi	r19, 0x20	; 32
     ea2:	30 83       	st	Z, r19
     ea4:	31 97       	sbiw	r30, 0x01	; 1
     ea6:	31 e2       	ldi	r19, 0x21	; 33
     ea8:	30 83       	st	Z, r19
     eaa:	31 97       	sbiw	r30, 0x01	; 1
     eac:	20 83       	st	Z, r18
     eae:	31 97       	sbiw	r30, 0x01	; 1
     eb0:	23 e2       	ldi	r18, 0x23	; 35
     eb2:	20 83       	st	Z, r18
     eb4:	31 97       	sbiw	r30, 0x01	; 1
     eb6:	40 83       	st	Z, r20
     eb8:	31 97       	sbiw	r30, 0x01	; 1
     eba:	50 83       	st	Z, r21
     ebc:	31 97       	sbiw	r30, 0x01	; 1
     ebe:	26 e2       	ldi	r18, 0x26	; 38
     ec0:	20 83       	st	Z, r18
     ec2:	31 97       	sbiw	r30, 0x01	; 1
     ec4:	27 e2       	ldi	r18, 0x27	; 39
     ec6:	20 83       	st	Z, r18
     ec8:	31 97       	sbiw	r30, 0x01	; 1
     eca:	28 e2       	ldi	r18, 0x28	; 40
     ecc:	20 83       	st	Z, r18
     ece:	31 97       	sbiw	r30, 0x01	; 1
     ed0:	29 e2       	ldi	r18, 0x29	; 41
     ed2:	20 83       	st	Z, r18
     ed4:	31 97       	sbiw	r30, 0x01	; 1
     ed6:	20 e3       	ldi	r18, 0x30	; 48
     ed8:	20 83       	st	Z, r18
     eda:	31 97       	sbiw	r30, 0x01	; 1
     edc:	21 e3       	ldi	r18, 0x31	; 49
     ede:	20 83       	st	Z, r18
     ee0:	87 97       	sbiw	r24, 0x27	; 39
     ee2:	08 95       	ret

00000ee4 <xPortStartScheduler>:
     ee4:	65 e0       	ldi	r22, 0x05	; 5
     ee6:	80 e0       	ldi	r24, 0x00	; 0
     ee8:	98 e0       	ldi	r25, 0x08	; 8
     eea:	0e 94 fe 12 	call	0x25fc	; 0x25fc <TC0_ConfigClockSource>
     eee:	83 ef       	ldi	r24, 0xF3	; 243
     ef0:	91 e0       	ldi	r25, 0x01	; 1
     ef2:	80 93 26 08 	sts	0x0826, r24	; 0x800826 <__TEXT_REGION_LENGTH__+0x700826>
     ef6:	90 93 27 08 	sts	0x0827, r25	; 0x800827 <__TEXT_REGION_LENGTH__+0x700827>
     efa:	61 e0       	ldi	r22, 0x01	; 1
     efc:	80 e0       	ldi	r24, 0x00	; 0
     efe:	98 e0       	ldi	r25, 0x08	; 8
     f00:	0e 94 04 13 	call	0x2608	; 0x2608 <TC0_SetOverflowIntLevel>
     f04:	e0 ea       	ldi	r30, 0xA0	; 160
     f06:	f0 e0       	ldi	r31, 0x00	; 0
     f08:	82 81       	ldd	r24, Z+2	; 0x02
     f0a:	81 60       	ori	r24, 0x01	; 1
     f0c:	82 83       	std	Z+2, r24	; 0x02
     f0e:	a0 91 81 93 	lds	r26, 0x9381	; 0x809381 <pxCurrentTCB>
     f12:	b0 91 82 93 	lds	r27, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
     f16:	cd 91       	ld	r28, X+
     f18:	cd bf       	out	0x3d, r28	; 61
     f1a:	dd 91       	ld	r29, X+
     f1c:	de bf       	out	0x3e, r29	; 62
     f1e:	ff 91       	pop	r31
     f20:	ef 91       	pop	r30
     f22:	df 91       	pop	r29
     f24:	cf 91       	pop	r28
     f26:	bf 91       	pop	r27
     f28:	af 91       	pop	r26
     f2a:	9f 91       	pop	r25
     f2c:	8f 91       	pop	r24
     f2e:	7f 91       	pop	r23
     f30:	6f 91       	pop	r22
     f32:	5f 91       	pop	r21
     f34:	4f 91       	pop	r20
     f36:	3f 91       	pop	r19
     f38:	2f 91       	pop	r18
     f3a:	1f 91       	pop	r17
     f3c:	0f 91       	pop	r16
     f3e:	ff 90       	pop	r15
     f40:	ef 90       	pop	r14
     f42:	df 90       	pop	r13
     f44:	cf 90       	pop	r12
     f46:	bf 90       	pop	r11
     f48:	af 90       	pop	r10
     f4a:	9f 90       	pop	r9
     f4c:	8f 90       	pop	r8
     f4e:	7f 90       	pop	r7
     f50:	6f 90       	pop	r6
     f52:	5f 90       	pop	r5
     f54:	4f 90       	pop	r4
     f56:	3f 90       	pop	r3
     f58:	2f 90       	pop	r2
     f5a:	1f 90       	pop	r1
     f5c:	0f 90       	pop	r0
     f5e:	0f be       	out	0x3f, r0	; 63
     f60:	0f 90       	pop	r0
     f62:	08 95       	ret
     f64:	81 e0       	ldi	r24, 0x01	; 1
     f66:	08 95       	ret

00000f68 <vPortYield>:
     f68:	0f 92       	push	r0
     f6a:	0f b6       	in	r0, 0x3f	; 63
     f6c:	f8 94       	cli
     f6e:	0f 92       	push	r0
     f70:	1f 92       	push	r1
     f72:	11 24       	eor	r1, r1
     f74:	2f 92       	push	r2
     f76:	3f 92       	push	r3
     f78:	4f 92       	push	r4
     f7a:	5f 92       	push	r5
     f7c:	6f 92       	push	r6
     f7e:	7f 92       	push	r7
     f80:	8f 92       	push	r8
     f82:	9f 92       	push	r9
     f84:	af 92       	push	r10
     f86:	bf 92       	push	r11
     f88:	cf 92       	push	r12
     f8a:	df 92       	push	r13
     f8c:	ef 92       	push	r14
     f8e:	ff 92       	push	r15
     f90:	0f 93       	push	r16
     f92:	1f 93       	push	r17
     f94:	2f 93       	push	r18
     f96:	3f 93       	push	r19
     f98:	4f 93       	push	r20
     f9a:	5f 93       	push	r21
     f9c:	6f 93       	push	r22
     f9e:	7f 93       	push	r23
     fa0:	8f 93       	push	r24
     fa2:	9f 93       	push	r25
     fa4:	af 93       	push	r26
     fa6:	bf 93       	push	r27
     fa8:	cf 93       	push	r28
     faa:	df 93       	push	r29
     fac:	ef 93       	push	r30
     fae:	ff 93       	push	r31
     fb0:	a0 91 81 93 	lds	r26, 0x9381	; 0x809381 <pxCurrentTCB>
     fb4:	b0 91 82 93 	lds	r27, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
     fb8:	0d b6       	in	r0, 0x3d	; 61
     fba:	0d 92       	st	X+, r0
     fbc:	0e b6       	in	r0, 0x3e	; 62
     fbe:	0d 92       	st	X+, r0
     fc0:	0e 94 15 0c 	call	0x182a	; 0x182a <vTaskSwitchContext>
     fc4:	a0 91 81 93 	lds	r26, 0x9381	; 0x809381 <pxCurrentTCB>
     fc8:	b0 91 82 93 	lds	r27, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
     fcc:	cd 91       	ld	r28, X+
     fce:	cd bf       	out	0x3d, r28	; 61
     fd0:	dd 91       	ld	r29, X+
     fd2:	de bf       	out	0x3e, r29	; 62
     fd4:	ff 91       	pop	r31
     fd6:	ef 91       	pop	r30
     fd8:	df 91       	pop	r29
     fda:	cf 91       	pop	r28
     fdc:	bf 91       	pop	r27
     fde:	af 91       	pop	r26
     fe0:	9f 91       	pop	r25
     fe2:	8f 91       	pop	r24
     fe4:	7f 91       	pop	r23
     fe6:	6f 91       	pop	r22
     fe8:	5f 91       	pop	r21
     fea:	4f 91       	pop	r20
     fec:	3f 91       	pop	r19
     fee:	2f 91       	pop	r18
     ff0:	1f 91       	pop	r17
     ff2:	0f 91       	pop	r16
     ff4:	ff 90       	pop	r15
     ff6:	ef 90       	pop	r14
     ff8:	df 90       	pop	r13
     ffa:	cf 90       	pop	r12
     ffc:	bf 90       	pop	r11
     ffe:	af 90       	pop	r10
    1000:	9f 90       	pop	r9
    1002:	8f 90       	pop	r8
    1004:	7f 90       	pop	r7
    1006:	6f 90       	pop	r6
    1008:	5f 90       	pop	r5
    100a:	4f 90       	pop	r4
    100c:	3f 90       	pop	r3
    100e:	2f 90       	pop	r2
    1010:	1f 90       	pop	r1
    1012:	0f 90       	pop	r0
    1014:	0f be       	out	0x3f, r0	; 63
    1016:	0f 90       	pop	r0
    1018:	08 95       	ret

0000101a <vPortYieldFromTick>:
    101a:	0f 92       	push	r0
    101c:	0f b6       	in	r0, 0x3f	; 63
    101e:	f8 94       	cli
    1020:	0f 92       	push	r0
    1022:	1f 92       	push	r1
    1024:	11 24       	eor	r1, r1
    1026:	2f 92       	push	r2
    1028:	3f 92       	push	r3
    102a:	4f 92       	push	r4
    102c:	5f 92       	push	r5
    102e:	6f 92       	push	r6
    1030:	7f 92       	push	r7
    1032:	8f 92       	push	r8
    1034:	9f 92       	push	r9
    1036:	af 92       	push	r10
    1038:	bf 92       	push	r11
    103a:	cf 92       	push	r12
    103c:	df 92       	push	r13
    103e:	ef 92       	push	r14
    1040:	ff 92       	push	r15
    1042:	0f 93       	push	r16
    1044:	1f 93       	push	r17
    1046:	2f 93       	push	r18
    1048:	3f 93       	push	r19
    104a:	4f 93       	push	r20
    104c:	5f 93       	push	r21
    104e:	6f 93       	push	r22
    1050:	7f 93       	push	r23
    1052:	8f 93       	push	r24
    1054:	9f 93       	push	r25
    1056:	af 93       	push	r26
    1058:	bf 93       	push	r27
    105a:	cf 93       	push	r28
    105c:	df 93       	push	r29
    105e:	ef 93       	push	r30
    1060:	ff 93       	push	r31
    1062:	a0 91 81 93 	lds	r26, 0x9381	; 0x809381 <pxCurrentTCB>
    1066:	b0 91 82 93 	lds	r27, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    106a:	0d b6       	in	r0, 0x3d	; 61
    106c:	0d 92       	st	X+, r0
    106e:	0e b6       	in	r0, 0x3e	; 62
    1070:	0d 92       	st	X+, r0
    1072:	0e 94 9d 0a 	call	0x153a	; 0x153a <xTaskIncrementTick>
    1076:	81 11       	cpse	r24, r1
    1078:	0e 94 15 0c 	call	0x182a	; 0x182a <vTaskSwitchContext>
    107c:	a0 91 81 93 	lds	r26, 0x9381	; 0x809381 <pxCurrentTCB>
    1080:	b0 91 82 93 	lds	r27, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    1084:	cd 91       	ld	r28, X+
    1086:	cd bf       	out	0x3d, r28	; 61
    1088:	dd 91       	ld	r29, X+
    108a:	de bf       	out	0x3e, r29	; 62
    108c:	ff 91       	pop	r31
    108e:	ef 91       	pop	r30
    1090:	df 91       	pop	r29
    1092:	cf 91       	pop	r28
    1094:	bf 91       	pop	r27
    1096:	af 91       	pop	r26
    1098:	9f 91       	pop	r25
    109a:	8f 91       	pop	r24
    109c:	7f 91       	pop	r23
    109e:	6f 91       	pop	r22
    10a0:	5f 91       	pop	r21
    10a2:	4f 91       	pop	r20
    10a4:	3f 91       	pop	r19
    10a6:	2f 91       	pop	r18
    10a8:	1f 91       	pop	r17
    10aa:	0f 91       	pop	r16
    10ac:	ff 90       	pop	r15
    10ae:	ef 90       	pop	r14
    10b0:	df 90       	pop	r13
    10b2:	cf 90       	pop	r12
    10b4:	bf 90       	pop	r11
    10b6:	af 90       	pop	r10
    10b8:	9f 90       	pop	r9
    10ba:	8f 90       	pop	r8
    10bc:	7f 90       	pop	r7
    10be:	6f 90       	pop	r6
    10c0:	5f 90       	pop	r5
    10c2:	4f 90       	pop	r4
    10c4:	3f 90       	pop	r3
    10c6:	2f 90       	pop	r2
    10c8:	1f 90       	pop	r1
    10ca:	0f 90       	pop	r0
    10cc:	0f be       	out	0x3f, r0	; 63
    10ce:	0f 90       	pop	r0
    10d0:	08 95       	ret

000010d2 <__vector_14>:
    10d2:	0e 94 0d 08 	call	0x101a	; 0x101a <vPortYieldFromTick>
    10d6:	18 95       	reti

000010d8 <pvPortMalloc>:
    10d8:	cf 93       	push	r28
    10da:	df 93       	push	r29
    10dc:	ec 01       	movw	r28, r24
    10de:	0e 94 97 0a 	call	0x152e	; 0x152e <vTaskSuspendAll>
    10e2:	80 91 30 23 	lds	r24, 0x2330	; 0x802330 <pucAlignedHeap.3808>
    10e6:	90 91 31 23 	lds	r25, 0x2331	; 0x802331 <pucAlignedHeap.3808+0x1>
    10ea:	89 2b       	or	r24, r25
    10ec:	31 f4       	brne	.+12     	; 0x10fa <pvPortMalloc+0x22>
    10ee:	85 e3       	ldi	r24, 0x35	; 53
    10f0:	93 e2       	ldi	r25, 0x23	; 35
    10f2:	80 93 30 23 	sts	0x2330, r24	; 0x802330 <pucAlignedHeap.3808>
    10f6:	90 93 31 23 	sts	0x2331, r25	; 0x802331 <pucAlignedHeap.3808+0x1>
    10fa:	20 91 32 23 	lds	r18, 0x2332	; 0x802332 <xNextFreeByte>
    10fe:	30 91 33 23 	lds	r19, 0x2333	; 0x802333 <xNextFreeByte+0x1>
    1102:	ce 01       	movw	r24, r28
    1104:	82 0f       	add	r24, r18
    1106:	93 1f       	adc	r25, r19
    1108:	8f 3f       	cpi	r24, 0xFF	; 255
    110a:	4f e6       	ldi	r20, 0x6F	; 111
    110c:	94 07       	cpc	r25, r20
    110e:	70 f4       	brcc	.+28     	; 0x112c <pvPortMalloc+0x54>
    1110:	28 17       	cp	r18, r24
    1112:	39 07       	cpc	r19, r25
    1114:	70 f4       	brcc	.+28     	; 0x1132 <pvPortMalloc+0x5a>
    1116:	c0 91 30 23 	lds	r28, 0x2330	; 0x802330 <pucAlignedHeap.3808>
    111a:	d0 91 31 23 	lds	r29, 0x2331	; 0x802331 <pucAlignedHeap.3808+0x1>
    111e:	c2 0f       	add	r28, r18
    1120:	d3 1f       	adc	r29, r19
    1122:	80 93 32 23 	sts	0x2332, r24	; 0x802332 <xNextFreeByte>
    1126:	90 93 33 23 	sts	0x2333, r25	; 0x802333 <xNextFreeByte+0x1>
    112a:	05 c0       	rjmp	.+10     	; 0x1136 <pvPortMalloc+0x5e>
    112c:	c0 e0       	ldi	r28, 0x00	; 0
    112e:	d0 e0       	ldi	r29, 0x00	; 0
    1130:	02 c0       	rjmp	.+4      	; 0x1136 <pvPortMalloc+0x5e>
    1132:	c0 e0       	ldi	r28, 0x00	; 0
    1134:	d0 e0       	ldi	r29, 0x00	; 0
    1136:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <xTaskResumeAll>
    113a:	ce 01       	movw	r24, r28
    113c:	df 91       	pop	r29
    113e:	cf 91       	pop	r28
    1140:	08 95       	ret

00001142 <vPortFree>:
    1142:	08 95       	ret

00001144 <vListInitialise>:
    1144:	fc 01       	movw	r30, r24
    1146:	03 96       	adiw	r24, 0x03	; 3
    1148:	81 83       	std	Z+1, r24	; 0x01
    114a:	92 83       	std	Z+2, r25	; 0x02
    114c:	2f ef       	ldi	r18, 0xFF	; 255
    114e:	3f ef       	ldi	r19, 0xFF	; 255
    1150:	23 83       	std	Z+3, r18	; 0x03
    1152:	34 83       	std	Z+4, r19	; 0x04
    1154:	85 83       	std	Z+5, r24	; 0x05
    1156:	96 83       	std	Z+6, r25	; 0x06
    1158:	87 83       	std	Z+7, r24	; 0x07
    115a:	90 87       	std	Z+8, r25	; 0x08
    115c:	10 82       	st	Z, r1
    115e:	08 95       	ret

00001160 <vListInitialiseItem>:
    1160:	fc 01       	movw	r30, r24
    1162:	10 86       	std	Z+8, r1	; 0x08
    1164:	11 86       	std	Z+9, r1	; 0x09
    1166:	08 95       	ret

00001168 <vListInsertEnd>:
    1168:	cf 93       	push	r28
    116a:	df 93       	push	r29
    116c:	9c 01       	movw	r18, r24
    116e:	fb 01       	movw	r30, r22
    1170:	dc 01       	movw	r26, r24
    1172:	11 96       	adiw	r26, 0x01	; 1
    1174:	cd 91       	ld	r28, X+
    1176:	dc 91       	ld	r29, X
    1178:	12 97       	sbiw	r26, 0x02	; 2
    117a:	c2 83       	std	Z+2, r28	; 0x02
    117c:	d3 83       	std	Z+3, r29	; 0x03
    117e:	8c 81       	ldd	r24, Y+4	; 0x04
    1180:	9d 81       	ldd	r25, Y+5	; 0x05
    1182:	84 83       	std	Z+4, r24	; 0x04
    1184:	95 83       	std	Z+5, r25	; 0x05
    1186:	8c 81       	ldd	r24, Y+4	; 0x04
    1188:	9d 81       	ldd	r25, Y+5	; 0x05
    118a:	dc 01       	movw	r26, r24
    118c:	12 96       	adiw	r26, 0x02	; 2
    118e:	6d 93       	st	X+, r22
    1190:	7c 93       	st	X, r23
    1192:	13 97       	sbiw	r26, 0x03	; 3
    1194:	6c 83       	std	Y+4, r22	; 0x04
    1196:	7d 83       	std	Y+5, r23	; 0x05
    1198:	20 87       	std	Z+8, r18	; 0x08
    119a:	31 87       	std	Z+9, r19	; 0x09
    119c:	f9 01       	movw	r30, r18
    119e:	80 81       	ld	r24, Z
    11a0:	8f 5f       	subi	r24, 0xFF	; 255
    11a2:	80 83       	st	Z, r24
    11a4:	df 91       	pop	r29
    11a6:	cf 91       	pop	r28
    11a8:	08 95       	ret

000011aa <vListInsert>:
    11aa:	cf 93       	push	r28
    11ac:	df 93       	push	r29
    11ae:	eb 01       	movw	r28, r22
    11b0:	48 81       	ld	r20, Y
    11b2:	59 81       	ldd	r21, Y+1	; 0x01
    11b4:	4f 3f       	cpi	r20, 0xFF	; 255
    11b6:	2f ef       	ldi	r18, 0xFF	; 255
    11b8:	52 07       	cpc	r21, r18
    11ba:	21 f4       	brne	.+8      	; 0x11c4 <vListInsert+0x1a>
    11bc:	fc 01       	movw	r30, r24
    11be:	a7 81       	ldd	r26, Z+7	; 0x07
    11c0:	b0 85       	ldd	r27, Z+8	; 0x08
    11c2:	0d c0       	rjmp	.+26     	; 0x11de <vListInsert+0x34>
    11c4:	dc 01       	movw	r26, r24
    11c6:	13 96       	adiw	r26, 0x03	; 3
    11c8:	01 c0       	rjmp	.+2      	; 0x11cc <vListInsert+0x22>
    11ca:	df 01       	movw	r26, r30
    11cc:	12 96       	adiw	r26, 0x02	; 2
    11ce:	ed 91       	ld	r30, X+
    11d0:	fc 91       	ld	r31, X
    11d2:	13 97       	sbiw	r26, 0x03	; 3
    11d4:	20 81       	ld	r18, Z
    11d6:	31 81       	ldd	r19, Z+1	; 0x01
    11d8:	42 17       	cp	r20, r18
    11da:	53 07       	cpc	r21, r19
    11dc:	b0 f7       	brcc	.-20     	; 0x11ca <vListInsert+0x20>
    11de:	12 96       	adiw	r26, 0x02	; 2
    11e0:	ed 91       	ld	r30, X+
    11e2:	fc 91       	ld	r31, X
    11e4:	13 97       	sbiw	r26, 0x03	; 3
    11e6:	ea 83       	std	Y+2, r30	; 0x02
    11e8:	fb 83       	std	Y+3, r31	; 0x03
    11ea:	c4 83       	std	Z+4, r28	; 0x04
    11ec:	d5 83       	std	Z+5, r29	; 0x05
    11ee:	ac 83       	std	Y+4, r26	; 0x04
    11f0:	bd 83       	std	Y+5, r27	; 0x05
    11f2:	12 96       	adiw	r26, 0x02	; 2
    11f4:	cd 93       	st	X+, r28
    11f6:	dc 93       	st	X, r29
    11f8:	13 97       	sbiw	r26, 0x03	; 3
    11fa:	88 87       	std	Y+8, r24	; 0x08
    11fc:	99 87       	std	Y+9, r25	; 0x09
    11fe:	fc 01       	movw	r30, r24
    1200:	20 81       	ld	r18, Z
    1202:	2f 5f       	subi	r18, 0xFF	; 255
    1204:	20 83       	st	Z, r18
    1206:	df 91       	pop	r29
    1208:	cf 91       	pop	r28
    120a:	08 95       	ret

0000120c <uxListRemove>:
    120c:	cf 93       	push	r28
    120e:	df 93       	push	r29
    1210:	fc 01       	movw	r30, r24
    1212:	a0 85       	ldd	r26, Z+8	; 0x08
    1214:	b1 85       	ldd	r27, Z+9	; 0x09
    1216:	c2 81       	ldd	r28, Z+2	; 0x02
    1218:	d3 81       	ldd	r29, Z+3	; 0x03
    121a:	84 81       	ldd	r24, Z+4	; 0x04
    121c:	95 81       	ldd	r25, Z+5	; 0x05
    121e:	8c 83       	std	Y+4, r24	; 0x04
    1220:	9d 83       	std	Y+5, r25	; 0x05
    1222:	c4 81       	ldd	r28, Z+4	; 0x04
    1224:	d5 81       	ldd	r29, Z+5	; 0x05
    1226:	82 81       	ldd	r24, Z+2	; 0x02
    1228:	93 81       	ldd	r25, Z+3	; 0x03
    122a:	8a 83       	std	Y+2, r24	; 0x02
    122c:	9b 83       	std	Y+3, r25	; 0x03
    122e:	11 96       	adiw	r26, 0x01	; 1
    1230:	cd 91       	ld	r28, X+
    1232:	dc 91       	ld	r29, X
    1234:	12 97       	sbiw	r26, 0x02	; 2
    1236:	ce 17       	cp	r28, r30
    1238:	df 07       	cpc	r29, r31
    123a:	31 f4       	brne	.+12     	; 0x1248 <uxListRemove+0x3c>
    123c:	8c 81       	ldd	r24, Y+4	; 0x04
    123e:	9d 81       	ldd	r25, Y+5	; 0x05
    1240:	11 96       	adiw	r26, 0x01	; 1
    1242:	8d 93       	st	X+, r24
    1244:	9c 93       	st	X, r25
    1246:	12 97       	sbiw	r26, 0x02	; 2
    1248:	10 86       	std	Z+8, r1	; 0x08
    124a:	11 86       	std	Z+9, r1	; 0x09
    124c:	8c 91       	ld	r24, X
    124e:	81 50       	subi	r24, 0x01	; 1
    1250:	8c 93       	st	X, r24
    1252:	df 91       	pop	r29
    1254:	cf 91       	pop	r28
    1256:	08 95       	ret

00001258 <prvIdleTask>:
    1258:	ff cf       	rjmp	.-2      	; 0x1258 <prvIdleTask>

0000125a <prvAddCurrentTaskToDelayedList>:
    125a:	cf 93       	push	r28
    125c:	df 93       	push	r29
    125e:	ec 01       	movw	r28, r24
    1260:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1264:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    1268:	82 83       	std	Z+2, r24	; 0x02
    126a:	93 83       	std	Z+3, r25	; 0x03
    126c:	80 91 3b 93 	lds	r24, 0x933B	; 0x80933b <xTickCount>
    1270:	90 91 3c 93 	lds	r25, 0x933C	; 0x80933c <xTickCount+0x1>
    1274:	c8 17       	cp	r28, r24
    1276:	d9 07       	cpc	r29, r25
    1278:	68 f4       	brcc	.+26     	; 0x1294 <prvAddCurrentTaskToDelayedList+0x3a>
    127a:	60 91 81 93 	lds	r22, 0x9381	; 0x809381 <pxCurrentTCB>
    127e:	70 91 82 93 	lds	r23, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    1282:	80 91 47 93 	lds	r24, 0x9347	; 0x809347 <pxOverflowDelayedTaskList>
    1286:	90 91 48 93 	lds	r25, 0x9348	; 0x809348 <pxOverflowDelayedTaskList+0x1>
    128a:	6e 5f       	subi	r22, 0xFE	; 254
    128c:	7f 4f       	sbci	r23, 0xFF	; 255
    128e:	0e 94 d5 08 	call	0x11aa	; 0x11aa <vListInsert>
    1292:	17 c0       	rjmp	.+46     	; 0x12c2 <prvAddCurrentTaskToDelayedList+0x68>
    1294:	60 91 81 93 	lds	r22, 0x9381	; 0x809381 <pxCurrentTCB>
    1298:	70 91 82 93 	lds	r23, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    129c:	80 91 49 93 	lds	r24, 0x9349	; 0x809349 <pxDelayedTaskList>
    12a0:	90 91 4a 93 	lds	r25, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    12a4:	6e 5f       	subi	r22, 0xFE	; 254
    12a6:	7f 4f       	sbci	r23, 0xFF	; 255
    12a8:	0e 94 d5 08 	call	0x11aa	; 0x11aa <vListInsert>
    12ac:	80 91 8f 22 	lds	r24, 0x228F	; 0x80228f <xNextTaskUnblockTime>
    12b0:	90 91 90 22 	lds	r25, 0x2290	; 0x802290 <xNextTaskUnblockTime+0x1>
    12b4:	c8 17       	cp	r28, r24
    12b6:	d9 07       	cpc	r29, r25
    12b8:	20 f4       	brcc	.+8      	; 0x12c2 <prvAddCurrentTaskToDelayedList+0x68>
    12ba:	c0 93 8f 22 	sts	0x228F, r28	; 0x80228f <xNextTaskUnblockTime>
    12be:	d0 93 90 22 	sts	0x2290, r29	; 0x802290 <xNextTaskUnblockTime+0x1>
    12c2:	df 91       	pop	r29
    12c4:	cf 91       	pop	r28
    12c6:	08 95       	ret

000012c8 <xTaskGenericCreate>:
    12c8:	4f 92       	push	r4
    12ca:	5f 92       	push	r5
    12cc:	6f 92       	push	r6
    12ce:	7f 92       	push	r7
    12d0:	8f 92       	push	r8
    12d2:	9f 92       	push	r9
    12d4:	af 92       	push	r10
    12d6:	bf 92       	push	r11
    12d8:	cf 92       	push	r12
    12da:	df 92       	push	r13
    12dc:	ef 92       	push	r14
    12de:	ff 92       	push	r15
    12e0:	0f 93       	push	r16
    12e2:	1f 93       	push	r17
    12e4:	cf 93       	push	r28
    12e6:	df 93       	push	r29
    12e8:	4c 01       	movw	r8, r24
    12ea:	eb 01       	movw	r28, r22
    12ec:	5a 01       	movw	r10, r20
    12ee:	29 01       	movw	r4, r18
    12f0:	81 e2       	ldi	r24, 0x21	; 33
    12f2:	90 e0       	ldi	r25, 0x00	; 0
    12f4:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <pvPortMalloc>
    12f8:	3c 01       	movw	r6, r24
    12fa:	00 97       	sbiw	r24, 0x00	; 0
    12fc:	09 f4       	brne	.+2      	; 0x1300 <xTaskGenericCreate+0x38>
    12fe:	da c0       	rjmp	.+436    	; 0x14b4 <xTaskGenericCreate+0x1ec>
    1300:	c1 14       	cp	r12, r1
    1302:	d1 04       	cpc	r13, r1
    1304:	09 f0       	breq	.+2      	; 0x1308 <xTaskGenericCreate+0x40>
    1306:	d2 c0       	rjmp	.+420    	; 0x14ac <xTaskGenericCreate+0x1e4>
    1308:	c5 01       	movw	r24, r10
    130a:	0e 94 6c 08 	call	0x10d8	; 0x10d8 <pvPortMalloc>
    130e:	f3 01       	movw	r30, r6
    1310:	87 8b       	std	Z+23, r24	; 0x17
    1312:	90 8f       	std	Z+24, r25	; 0x18
    1314:	89 2b       	or	r24, r25
    1316:	21 f4       	brne	.+8      	; 0x1320 <xTaskGenericCreate+0x58>
    1318:	c3 01       	movw	r24, r6
    131a:	0e 94 a1 08 	call	0x1142	; 0x1142 <vPortFree>
    131e:	ca c0       	rjmp	.+404    	; 0x14b4 <xTaskGenericCreate+0x1ec>
    1320:	f1 e0       	ldi	r31, 0x01	; 1
    1322:	af 1a       	sub	r10, r31
    1324:	b1 08       	sbc	r11, r1
    1326:	f3 01       	movw	r30, r6
    1328:	87 89       	ldd	r24, Z+23	; 0x17
    132a:	90 8d       	ldd	r25, Z+24	; 0x18
    132c:	a8 0e       	add	r10, r24
    132e:	b9 1e       	adc	r11, r25
    1330:	88 81       	ld	r24, Y
    1332:	81 8f       	std	Z+25, r24	; 0x19
    1334:	88 81       	ld	r24, Y
    1336:	88 23       	and	r24, r24
    1338:	81 f0       	breq	.+32     	; 0x135a <xTaskGenericCreate+0x92>
    133a:	d3 01       	movw	r26, r6
    133c:	5a 96       	adiw	r26, 0x1a	; 26
    133e:	fe 01       	movw	r30, r28
    1340:	31 96       	adiw	r30, 0x01	; 1
    1342:	9e 01       	movw	r18, r28
    1344:	28 5f       	subi	r18, 0xF8	; 248
    1346:	3f 4f       	sbci	r19, 0xFF	; 255
    1348:	ef 01       	movw	r28, r30
    134a:	81 91       	ld	r24, Z+
    134c:	8d 93       	st	X+, r24
    134e:	88 81       	ld	r24, Y
    1350:	88 23       	and	r24, r24
    1352:	19 f0       	breq	.+6      	; 0x135a <xTaskGenericCreate+0x92>
    1354:	e2 17       	cp	r30, r18
    1356:	f3 07       	cpc	r31, r19
    1358:	b9 f7       	brne	.-18     	; 0x1348 <xTaskGenericCreate+0x80>
    135a:	f3 01       	movw	r30, r6
    135c:	10 a2       	std	Z+32, r1	; 0x20
    135e:	10 2f       	mov	r17, r16
    1360:	04 30       	cpi	r16, 0x04	; 4
    1362:	08 f0       	brcs	.+2      	; 0x1366 <xTaskGenericCreate+0x9e>
    1364:	13 e0       	ldi	r17, 0x03	; 3
    1366:	f3 01       	movw	r30, r6
    1368:	16 8b       	std	Z+22, r17	; 0x16
    136a:	e3 01       	movw	r28, r6
    136c:	22 96       	adiw	r28, 0x02	; 2
    136e:	ce 01       	movw	r24, r28
    1370:	0e 94 b0 08 	call	0x1160	; 0x1160 <vListInitialiseItem>
    1374:	c3 01       	movw	r24, r6
    1376:	0c 96       	adiw	r24, 0x0c	; 12
    1378:	0e 94 b0 08 	call	0x1160	; 0x1160 <vListInitialiseItem>
    137c:	f3 01       	movw	r30, r6
    137e:	60 86       	std	Z+8, r6	; 0x08
    1380:	71 86       	std	Z+9, r7	; 0x09
    1382:	84 e0       	ldi	r24, 0x04	; 4
    1384:	90 e0       	ldi	r25, 0x00	; 0
    1386:	81 1b       	sub	r24, r17
    1388:	91 09       	sbc	r25, r1
    138a:	84 87       	std	Z+12, r24	; 0x0c
    138c:	95 87       	std	Z+13, r25	; 0x0d
    138e:	62 8a       	std	Z+18, r6	; 0x12
    1390:	73 8a       	std	Z+19, r7	; 0x13
    1392:	a2 01       	movw	r20, r4
    1394:	b4 01       	movw	r22, r8
    1396:	c5 01       	movw	r24, r10
    1398:	0e 94 04 07 	call	0xe08	; 0xe08 <pxPortInitialiseStack>
    139c:	f3 01       	movw	r30, r6
    139e:	80 83       	st	Z, r24
    13a0:	91 83       	std	Z+1, r25	; 0x01
    13a2:	e1 14       	cp	r14, r1
    13a4:	f1 04       	cpc	r15, r1
    13a6:	19 f0       	breq	.+6      	; 0x13ae <xTaskGenericCreate+0xe6>
    13a8:	f7 01       	movw	r30, r14
    13aa:	60 82       	st	Z, r6
    13ac:	71 82       	std	Z+1, r7	; 0x01
    13ae:	0f b6       	in	r0, 0x3f	; 63
    13b0:	f8 94       	cli
    13b2:	0f 92       	push	r0
    13b4:	80 91 3d 93 	lds	r24, 0x933D	; 0x80933d <uxCurrentNumberOfTasks>
    13b8:	8f 5f       	subi	r24, 0xFF	; 255
    13ba:	80 93 3d 93 	sts	0x933D, r24	; 0x80933d <uxCurrentNumberOfTasks>
    13be:	80 91 81 93 	lds	r24, 0x9381	; 0x809381 <pxCurrentTCB>
    13c2:	90 91 82 93 	lds	r25, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    13c6:	89 2b       	or	r24, r25
    13c8:	89 f5       	brne	.+98     	; 0x142c <xTaskGenericCreate+0x164>
    13ca:	60 92 81 93 	sts	0x9381, r6	; 0x809381 <pxCurrentTCB>
    13ce:	70 92 82 93 	sts	0x9382, r7	; 0x809382 <pxCurrentTCB+0x1>
    13d2:	80 91 3d 93 	lds	r24, 0x933D	; 0x80933d <uxCurrentNumberOfTasks>
    13d6:	81 30       	cpi	r24, 0x01	; 1
    13d8:	c1 f5       	brne	.+112    	; 0x144a <xTaskGenericCreate+0x182>
    13da:	8d e5       	ldi	r24, 0x5D	; 93
    13dc:	93 e9       	ldi	r25, 0x93	; 147
    13de:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    13e2:	86 e6       	ldi	r24, 0x66	; 102
    13e4:	93 e9       	ldi	r25, 0x93	; 147
    13e6:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    13ea:	8f e6       	ldi	r24, 0x6F	; 111
    13ec:	93 e9       	ldi	r25, 0x93	; 147
    13ee:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    13f2:	88 e7       	ldi	r24, 0x78	; 120
    13f4:	93 e9       	ldi	r25, 0x93	; 147
    13f6:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    13fa:	84 e5       	ldi	r24, 0x54	; 84
    13fc:	93 e9       	ldi	r25, 0x93	; 147
    13fe:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    1402:	8b e4       	ldi	r24, 0x4B	; 75
    1404:	93 e9       	ldi	r25, 0x93	; 147
    1406:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    140a:	8e e3       	ldi	r24, 0x3E	; 62
    140c:	93 e9       	ldi	r25, 0x93	; 147
    140e:	0e 94 a2 08 	call	0x1144	; 0x1144 <vListInitialise>
    1412:	84 e5       	ldi	r24, 0x54	; 84
    1414:	93 e9       	ldi	r25, 0x93	; 147
    1416:	80 93 49 93 	sts	0x9349, r24	; 0x809349 <pxDelayedTaskList>
    141a:	90 93 4a 93 	sts	0x934A, r25	; 0x80934a <pxDelayedTaskList+0x1>
    141e:	8b e4       	ldi	r24, 0x4B	; 75
    1420:	93 e9       	ldi	r25, 0x93	; 147
    1422:	80 93 47 93 	sts	0x9347, r24	; 0x809347 <pxOverflowDelayedTaskList>
    1426:	90 93 48 93 	sts	0x9348, r25	; 0x809348 <pxOverflowDelayedTaskList+0x1>
    142a:	0f c0       	rjmp	.+30     	; 0x144a <xTaskGenericCreate+0x182>
    142c:	80 91 39 93 	lds	r24, 0x9339	; 0x809339 <xSchedulerRunning>
    1430:	81 11       	cpse	r24, r1
    1432:	0b c0       	rjmp	.+22     	; 0x144a <xTaskGenericCreate+0x182>
    1434:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1438:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    143c:	86 89       	ldd	r24, Z+22	; 0x16
    143e:	08 17       	cp	r16, r24
    1440:	20 f0       	brcs	.+8      	; 0x144a <xTaskGenericCreate+0x182>
    1442:	60 92 81 93 	sts	0x9381, r6	; 0x809381 <pxCurrentTCB>
    1446:	70 92 82 93 	sts	0x9382, r7	; 0x809382 <pxCurrentTCB+0x1>
    144a:	80 91 35 93 	lds	r24, 0x9335	; 0x809335 <uxTaskNumber>
    144e:	8f 5f       	subi	r24, 0xFF	; 255
    1450:	80 93 35 93 	sts	0x9335, r24	; 0x809335 <uxTaskNumber>
    1454:	f3 01       	movw	r30, r6
    1456:	86 89       	ldd	r24, Z+22	; 0x16
    1458:	90 91 3a 93 	lds	r25, 0x933A	; 0x80933a <uxTopReadyPriority>
    145c:	98 17       	cp	r25, r24
    145e:	10 f4       	brcc	.+4      	; 0x1464 <xTaskGenericCreate+0x19c>
    1460:	80 93 3a 93 	sts	0x933A, r24	; 0x80933a <uxTopReadyPriority>
    1464:	90 e0       	ldi	r25, 0x00	; 0
    1466:	9c 01       	movw	r18, r24
    1468:	22 0f       	add	r18, r18
    146a:	33 1f       	adc	r19, r19
    146c:	22 0f       	add	r18, r18
    146e:	33 1f       	adc	r19, r19
    1470:	22 0f       	add	r18, r18
    1472:	33 1f       	adc	r19, r19
    1474:	82 0f       	add	r24, r18
    1476:	93 1f       	adc	r25, r19
    1478:	be 01       	movw	r22, r28
    147a:	83 5a       	subi	r24, 0xA3	; 163
    147c:	9c 46       	sbci	r25, 0x6C	; 108
    147e:	0e 94 b4 08 	call	0x1168	; 0x1168 <vListInsertEnd>
    1482:	0f 90       	pop	r0
    1484:	0f be       	out	0x3f, r0	; 63
    1486:	80 91 39 93 	lds	r24, 0x9339	; 0x809339 <xSchedulerRunning>
    148a:	88 23       	and	r24, r24
    148c:	59 f0       	breq	.+22     	; 0x14a4 <xTaskGenericCreate+0x1dc>
    148e:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1492:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    1496:	86 89       	ldd	r24, Z+22	; 0x16
    1498:	80 17       	cp	r24, r16
    149a:	30 f4       	brcc	.+12     	; 0x14a8 <xTaskGenericCreate+0x1e0>
    149c:	0e 94 b4 07 	call	0xf68	; 0xf68 <vPortYield>
    14a0:	81 e0       	ldi	r24, 0x01	; 1
    14a2:	09 c0       	rjmp	.+18     	; 0x14b6 <xTaskGenericCreate+0x1ee>
    14a4:	81 e0       	ldi	r24, 0x01	; 1
    14a6:	07 c0       	rjmp	.+14     	; 0x14b6 <xTaskGenericCreate+0x1ee>
    14a8:	81 e0       	ldi	r24, 0x01	; 1
    14aa:	05 c0       	rjmp	.+10     	; 0x14b6 <xTaskGenericCreate+0x1ee>
    14ac:	fc 01       	movw	r30, r24
    14ae:	c7 8a       	std	Z+23, r12	; 0x17
    14b0:	d0 8e       	std	Z+24, r13	; 0x18
    14b2:	36 cf       	rjmp	.-404    	; 0x1320 <xTaskGenericCreate+0x58>
    14b4:	8f ef       	ldi	r24, 0xFF	; 255
    14b6:	df 91       	pop	r29
    14b8:	cf 91       	pop	r28
    14ba:	1f 91       	pop	r17
    14bc:	0f 91       	pop	r16
    14be:	ff 90       	pop	r15
    14c0:	ef 90       	pop	r14
    14c2:	df 90       	pop	r13
    14c4:	cf 90       	pop	r12
    14c6:	bf 90       	pop	r11
    14c8:	af 90       	pop	r10
    14ca:	9f 90       	pop	r9
    14cc:	8f 90       	pop	r8
    14ce:	7f 90       	pop	r7
    14d0:	6f 90       	pop	r6
    14d2:	5f 90       	pop	r5
    14d4:	4f 90       	pop	r4
    14d6:	08 95       	ret

000014d8 <vTaskStartScheduler>:
    14d8:	af 92       	push	r10
    14da:	bf 92       	push	r11
    14dc:	cf 92       	push	r12
    14de:	df 92       	push	r13
    14e0:	ef 92       	push	r14
    14e2:	ff 92       	push	r15
    14e4:	0f 93       	push	r16
    14e6:	a1 2c       	mov	r10, r1
    14e8:	b1 2c       	mov	r11, r1
    14ea:	c1 2c       	mov	r12, r1
    14ec:	d1 2c       	mov	r13, r1
    14ee:	e1 2c       	mov	r14, r1
    14f0:	f1 2c       	mov	r15, r1
    14f2:	00 e0       	ldi	r16, 0x00	; 0
    14f4:	20 e0       	ldi	r18, 0x00	; 0
    14f6:	30 e0       	ldi	r19, 0x00	; 0
    14f8:	44 e6       	ldi	r20, 0x64	; 100
    14fa:	50 e0       	ldi	r21, 0x00	; 0
    14fc:	69 eb       	ldi	r22, 0xB9	; 185
    14fe:	72 e2       	ldi	r23, 0x22	; 34
    1500:	8c e2       	ldi	r24, 0x2C	; 44
    1502:	99 e0       	ldi	r25, 0x09	; 9
    1504:	0e 94 64 09 	call	0x12c8	; 0x12c8 <xTaskGenericCreate>
    1508:	81 30       	cpi	r24, 0x01	; 1
    150a:	49 f4       	brne	.+18     	; 0x151e <vTaskStartScheduler+0x46>
    150c:	f8 94       	cli
    150e:	80 93 39 93 	sts	0x9339, r24	; 0x809339 <xSchedulerRunning>
    1512:	10 92 3b 93 	sts	0x933B, r1	; 0x80933b <xTickCount>
    1516:	10 92 3c 93 	sts	0x933C, r1	; 0x80933c <xTickCount+0x1>
    151a:	0e 94 72 07 	call	0xee4	; 0xee4 <xPortStartScheduler>
    151e:	0f 91       	pop	r16
    1520:	ff 90       	pop	r15
    1522:	ef 90       	pop	r14
    1524:	df 90       	pop	r13
    1526:	cf 90       	pop	r12
    1528:	bf 90       	pop	r11
    152a:	af 90       	pop	r10
    152c:	08 95       	ret

0000152e <vTaskSuspendAll>:
    152e:	80 91 34 93 	lds	r24, 0x9334	; 0x809334 <uxSchedulerSuspended>
    1532:	8f 5f       	subi	r24, 0xFF	; 255
    1534:	80 93 34 93 	sts	0x9334, r24	; 0x809334 <uxSchedulerSuspended>
    1538:	08 95       	ret

0000153a <xTaskIncrementTick>:
    153a:	df 92       	push	r13
    153c:	ef 92       	push	r14
    153e:	ff 92       	push	r15
    1540:	0f 93       	push	r16
    1542:	1f 93       	push	r17
    1544:	cf 93       	push	r28
    1546:	df 93       	push	r29
    1548:	80 91 34 93 	lds	r24, 0x9334	; 0x809334 <uxSchedulerSuspended>
    154c:	81 11       	cpse	r24, r1
    154e:	b6 c0       	rjmp	.+364    	; 0x16bc <xTaskIncrementTick+0x182>
    1550:	80 91 3b 93 	lds	r24, 0x933B	; 0x80933b <xTickCount>
    1554:	90 91 3c 93 	lds	r25, 0x933C	; 0x80933c <xTickCount+0x1>
    1558:	01 96       	adiw	r24, 0x01	; 1
    155a:	80 93 3b 93 	sts	0x933B, r24	; 0x80933b <xTickCount>
    155e:	90 93 3c 93 	sts	0x933C, r25	; 0x80933c <xTickCount+0x1>
    1562:	e0 90 3b 93 	lds	r14, 0x933B	; 0x80933b <xTickCount>
    1566:	f0 90 3c 93 	lds	r15, 0x933C	; 0x80933c <xTickCount+0x1>
    156a:	e1 14       	cp	r14, r1
    156c:	f1 04       	cpc	r15, r1
    156e:	99 f5       	brne	.+102    	; 0x15d6 <xTaskIncrementTick+0x9c>
    1570:	80 91 49 93 	lds	r24, 0x9349	; 0x809349 <pxDelayedTaskList>
    1574:	90 91 4a 93 	lds	r25, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    1578:	20 91 47 93 	lds	r18, 0x9347	; 0x809347 <pxOverflowDelayedTaskList>
    157c:	30 91 48 93 	lds	r19, 0x9348	; 0x809348 <pxOverflowDelayedTaskList+0x1>
    1580:	20 93 49 93 	sts	0x9349, r18	; 0x809349 <pxDelayedTaskList>
    1584:	30 93 4a 93 	sts	0x934A, r19	; 0x80934a <pxDelayedTaskList+0x1>
    1588:	80 93 47 93 	sts	0x9347, r24	; 0x809347 <pxOverflowDelayedTaskList>
    158c:	90 93 48 93 	sts	0x9348, r25	; 0x809348 <pxOverflowDelayedTaskList+0x1>
    1590:	80 91 36 93 	lds	r24, 0x9336	; 0x809336 <xNumOfOverflows>
    1594:	8f 5f       	subi	r24, 0xFF	; 255
    1596:	80 93 36 93 	sts	0x9336, r24	; 0x809336 <xNumOfOverflows>
    159a:	e0 91 49 93 	lds	r30, 0x9349	; 0x809349 <pxDelayedTaskList>
    159e:	f0 91 4a 93 	lds	r31, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    15a2:	80 81       	ld	r24, Z
    15a4:	81 11       	cpse	r24, r1
    15a6:	07 c0       	rjmp	.+14     	; 0x15b6 <xTaskIncrementTick+0x7c>
    15a8:	8f ef       	ldi	r24, 0xFF	; 255
    15aa:	9f ef       	ldi	r25, 0xFF	; 255
    15ac:	80 93 8f 22 	sts	0x228F, r24	; 0x80228f <xNextTaskUnblockTime>
    15b0:	90 93 90 22 	sts	0x2290, r25	; 0x802290 <xNextTaskUnblockTime+0x1>
    15b4:	10 c0       	rjmp	.+32     	; 0x15d6 <xTaskIncrementTick+0x9c>
    15b6:	e0 91 49 93 	lds	r30, 0x9349	; 0x809349 <pxDelayedTaskList>
    15ba:	f0 91 4a 93 	lds	r31, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    15be:	05 80       	ldd	r0, Z+5	; 0x05
    15c0:	f6 81       	ldd	r31, Z+6	; 0x06
    15c2:	e0 2d       	mov	r30, r0
    15c4:	06 80       	ldd	r0, Z+6	; 0x06
    15c6:	f7 81       	ldd	r31, Z+7	; 0x07
    15c8:	e0 2d       	mov	r30, r0
    15ca:	82 81       	ldd	r24, Z+2	; 0x02
    15cc:	93 81       	ldd	r25, Z+3	; 0x03
    15ce:	80 93 8f 22 	sts	0x228F, r24	; 0x80228f <xNextTaskUnblockTime>
    15d2:	90 93 90 22 	sts	0x2290, r25	; 0x802290 <xNextTaskUnblockTime+0x1>
    15d6:	80 91 8f 22 	lds	r24, 0x228F	; 0x80228f <xNextTaskUnblockTime>
    15da:	90 91 90 22 	lds	r25, 0x2290	; 0x802290 <xNextTaskUnblockTime+0x1>
    15de:	e8 16       	cp	r14, r24
    15e0:	f9 06       	cpc	r15, r25
    15e2:	10 f4       	brcc	.+4      	; 0x15e8 <xTaskIncrementTick+0xae>
    15e4:	d1 2c       	mov	r13, r1
    15e6:	52 c0       	rjmp	.+164    	; 0x168c <xTaskIncrementTick+0x152>
    15e8:	d1 2c       	mov	r13, r1
    15ea:	e0 91 49 93 	lds	r30, 0x9349	; 0x809349 <pxDelayedTaskList>
    15ee:	f0 91 4a 93 	lds	r31, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    15f2:	90 81       	ld	r25, Z
    15f4:	91 11       	cpse	r25, r1
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <xTaskIncrementTick+0xcc>
    15f8:	8f ef       	ldi	r24, 0xFF	; 255
    15fa:	9f ef       	ldi	r25, 0xFF	; 255
    15fc:	80 93 8f 22 	sts	0x228F, r24	; 0x80228f <xNextTaskUnblockTime>
    1600:	90 93 90 22 	sts	0x2290, r25	; 0x802290 <xNextTaskUnblockTime+0x1>
    1604:	43 c0       	rjmp	.+134    	; 0x168c <xTaskIncrementTick+0x152>
    1606:	e0 91 49 93 	lds	r30, 0x9349	; 0x809349 <pxDelayedTaskList>
    160a:	f0 91 4a 93 	lds	r31, 0x934A	; 0x80934a <pxDelayedTaskList+0x1>
    160e:	05 80       	ldd	r0, Z+5	; 0x05
    1610:	f6 81       	ldd	r31, Z+6	; 0x06
    1612:	e0 2d       	mov	r30, r0
    1614:	c6 81       	ldd	r28, Z+6	; 0x06
    1616:	d7 81       	ldd	r29, Z+7	; 0x07
    1618:	2a 81       	ldd	r18, Y+2	; 0x02
    161a:	3b 81       	ldd	r19, Y+3	; 0x03
    161c:	e2 16       	cp	r14, r18
    161e:	f3 06       	cpc	r15, r19
    1620:	28 f4       	brcc	.+10     	; 0x162c <xTaskIncrementTick+0xf2>
    1622:	20 93 8f 22 	sts	0x228F, r18	; 0x80228f <xNextTaskUnblockTime>
    1626:	30 93 90 22 	sts	0x2290, r19	; 0x802290 <xNextTaskUnblockTime+0x1>
    162a:	30 c0       	rjmp	.+96     	; 0x168c <xTaskIncrementTick+0x152>
    162c:	8e 01       	movw	r16, r28
    162e:	0e 5f       	subi	r16, 0xFE	; 254
    1630:	1f 4f       	sbci	r17, 0xFF	; 255
    1632:	c8 01       	movw	r24, r16
    1634:	0e 94 06 09 	call	0x120c	; 0x120c <uxListRemove>
    1638:	8c 89       	ldd	r24, Y+20	; 0x14
    163a:	9d 89       	ldd	r25, Y+21	; 0x15
    163c:	89 2b       	or	r24, r25
    163e:	21 f0       	breq	.+8      	; 0x1648 <xTaskIncrementTick+0x10e>
    1640:	ce 01       	movw	r24, r28
    1642:	0c 96       	adiw	r24, 0x0c	; 12
    1644:	0e 94 06 09 	call	0x120c	; 0x120c <uxListRemove>
    1648:	2e 89       	ldd	r18, Y+22	; 0x16
    164a:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    164e:	82 17       	cp	r24, r18
    1650:	10 f4       	brcc	.+4      	; 0x1656 <xTaskIncrementTick+0x11c>
    1652:	20 93 3a 93 	sts	0x933A, r18	; 0x80933a <uxTopReadyPriority>
    1656:	30 e0       	ldi	r19, 0x00	; 0
    1658:	c9 01       	movw	r24, r18
    165a:	88 0f       	add	r24, r24
    165c:	99 1f       	adc	r25, r25
    165e:	88 0f       	add	r24, r24
    1660:	99 1f       	adc	r25, r25
    1662:	88 0f       	add	r24, r24
    1664:	99 1f       	adc	r25, r25
    1666:	82 0f       	add	r24, r18
    1668:	93 1f       	adc	r25, r19
    166a:	b8 01       	movw	r22, r16
    166c:	83 5a       	subi	r24, 0xA3	; 163
    166e:	9c 46       	sbci	r25, 0x6C	; 108
    1670:	0e 94 b4 08 	call	0x1168	; 0x1168 <vListInsertEnd>
    1674:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1678:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    167c:	9e 89       	ldd	r25, Y+22	; 0x16
    167e:	86 89       	ldd	r24, Z+22	; 0x16
    1680:	98 17       	cp	r25, r24
    1682:	08 f4       	brcc	.+2      	; 0x1686 <xTaskIncrementTick+0x14c>
    1684:	b2 cf       	rjmp	.-156    	; 0x15ea <xTaskIncrementTick+0xb0>
    1686:	dd 24       	eor	r13, r13
    1688:	d3 94       	inc	r13
    168a:	af cf       	rjmp	.-162    	; 0x15ea <xTaskIncrementTick+0xb0>
    168c:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1690:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    1694:	86 89       	ldd	r24, Z+22	; 0x16
    1696:	90 e0       	ldi	r25, 0x00	; 0
    1698:	fc 01       	movw	r30, r24
    169a:	ee 0f       	add	r30, r30
    169c:	ff 1f       	adc	r31, r31
    169e:	ee 0f       	add	r30, r30
    16a0:	ff 1f       	adc	r31, r31
    16a2:	ee 0f       	add	r30, r30
    16a4:	ff 1f       	adc	r31, r31
    16a6:	8e 0f       	add	r24, r30
    16a8:	9f 1f       	adc	r25, r31
    16aa:	fc 01       	movw	r30, r24
    16ac:	e3 5a       	subi	r30, 0xA3	; 163
    16ae:	fc 46       	sbci	r31, 0x6C	; 108
    16b0:	80 81       	ld	r24, Z
    16b2:	82 30       	cpi	r24, 0x02	; 2
    16b4:	48 f0       	brcs	.+18     	; 0x16c8 <xTaskIncrementTick+0x18e>
    16b6:	dd 24       	eor	r13, r13
    16b8:	d3 94       	inc	r13
    16ba:	06 c0       	rjmp	.+12     	; 0x16c8 <xTaskIncrementTick+0x18e>
    16bc:	80 91 38 93 	lds	r24, 0x9338	; 0x809338 <uxPendedTicks>
    16c0:	8f 5f       	subi	r24, 0xFF	; 255
    16c2:	80 93 38 93 	sts	0x9338, r24	; 0x809338 <uxPendedTicks>
    16c6:	d1 2c       	mov	r13, r1
    16c8:	80 91 37 93 	lds	r24, 0x9337	; 0x809337 <xYieldPending>
    16cc:	88 23       	and	r24, r24
    16ce:	11 f0       	breq	.+4      	; 0x16d4 <xTaskIncrementTick+0x19a>
    16d0:	dd 24       	eor	r13, r13
    16d2:	d3 94       	inc	r13
    16d4:	8d 2d       	mov	r24, r13
    16d6:	df 91       	pop	r29
    16d8:	cf 91       	pop	r28
    16da:	1f 91       	pop	r17
    16dc:	0f 91       	pop	r16
    16de:	ff 90       	pop	r15
    16e0:	ef 90       	pop	r14
    16e2:	df 90       	pop	r13
    16e4:	08 95       	ret

000016e6 <xTaskResumeAll>:
    16e6:	df 92       	push	r13
    16e8:	ef 92       	push	r14
    16ea:	ff 92       	push	r15
    16ec:	0f 93       	push	r16
    16ee:	1f 93       	push	r17
    16f0:	cf 93       	push	r28
    16f2:	df 93       	push	r29
    16f4:	0f b6       	in	r0, 0x3f	; 63
    16f6:	f8 94       	cli
    16f8:	0f 92       	push	r0
    16fa:	80 91 34 93 	lds	r24, 0x9334	; 0x809334 <uxSchedulerSuspended>
    16fe:	81 50       	subi	r24, 0x01	; 1
    1700:	80 93 34 93 	sts	0x9334, r24	; 0x809334 <uxSchedulerSuspended>
    1704:	80 91 34 93 	lds	r24, 0x9334	; 0x809334 <uxSchedulerSuspended>
    1708:	81 11       	cpse	r24, r1
    170a:	62 c0       	rjmp	.+196    	; 0x17d0 <xTaskResumeAll+0xea>
    170c:	80 91 3d 93 	lds	r24, 0x933D	; 0x80933d <uxCurrentNumberOfTasks>
    1710:	81 11       	cpse	r24, r1
    1712:	33 c0       	rjmp	.+102    	; 0x177a <xTaskResumeAll+0x94>
    1714:	60 c0       	rjmp	.+192    	; 0x17d6 <xTaskResumeAll+0xf0>
    1716:	d7 01       	movw	r26, r14
    1718:	15 96       	adiw	r26, 0x05	; 5
    171a:	ed 91       	ld	r30, X+
    171c:	fc 91       	ld	r31, X
    171e:	16 97       	sbiw	r26, 0x06	; 6
    1720:	c6 81       	ldd	r28, Z+6	; 0x06
    1722:	d7 81       	ldd	r29, Z+7	; 0x07
    1724:	ce 01       	movw	r24, r28
    1726:	0c 96       	adiw	r24, 0x0c	; 12
    1728:	0e 94 06 09 	call	0x120c	; 0x120c <uxListRemove>
    172c:	8e 01       	movw	r16, r28
    172e:	0e 5f       	subi	r16, 0xFE	; 254
    1730:	1f 4f       	sbci	r17, 0xFF	; 255
    1732:	c8 01       	movw	r24, r16
    1734:	0e 94 06 09 	call	0x120c	; 0x120c <uxListRemove>
    1738:	2e 89       	ldd	r18, Y+22	; 0x16
    173a:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    173e:	82 17       	cp	r24, r18
    1740:	10 f4       	brcc	.+4      	; 0x1746 <xTaskResumeAll+0x60>
    1742:	20 93 3a 93 	sts	0x933A, r18	; 0x80933a <uxTopReadyPriority>
    1746:	30 e0       	ldi	r19, 0x00	; 0
    1748:	c9 01       	movw	r24, r18
    174a:	88 0f       	add	r24, r24
    174c:	99 1f       	adc	r25, r25
    174e:	88 0f       	add	r24, r24
    1750:	99 1f       	adc	r25, r25
    1752:	88 0f       	add	r24, r24
    1754:	99 1f       	adc	r25, r25
    1756:	82 0f       	add	r24, r18
    1758:	93 1f       	adc	r25, r19
    175a:	b8 01       	movw	r22, r16
    175c:	83 5a       	subi	r24, 0xA3	; 163
    175e:	9c 46       	sbci	r25, 0x6C	; 108
    1760:	0e 94 b4 08 	call	0x1168	; 0x1168 <vListInsertEnd>
    1764:	e0 91 81 93 	lds	r30, 0x9381	; 0x809381 <pxCurrentTCB>
    1768:	f0 91 82 93 	lds	r31, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    176c:	9e 89       	ldd	r25, Y+22	; 0x16
    176e:	86 89       	ldd	r24, Z+22	; 0x16
    1770:	98 17       	cp	r25, r24
    1772:	58 f0       	brcs	.+22     	; 0x178a <xTaskResumeAll+0xa4>
    1774:	d0 92 37 93 	sts	0x9337, r13	; 0x809337 <xYieldPending>
    1778:	08 c0       	rjmp	.+16     	; 0x178a <xTaskResumeAll+0xa4>
    177a:	0f 2e       	mov	r0, r31
    177c:	fe e3       	ldi	r31, 0x3E	; 62
    177e:	ef 2e       	mov	r14, r31
    1780:	f3 e9       	ldi	r31, 0x93	; 147
    1782:	ff 2e       	mov	r15, r31
    1784:	f0 2d       	mov	r31, r0
    1786:	dd 24       	eor	r13, r13
    1788:	d3 94       	inc	r13
    178a:	f7 01       	movw	r30, r14
    178c:	80 81       	ld	r24, Z
    178e:	81 11       	cpse	r24, r1
    1790:	c2 cf       	rjmp	.-124    	; 0x1716 <xTaskResumeAll+0x30>
    1792:	80 91 38 93 	lds	r24, 0x9338	; 0x809338 <uxPendedTicks>
    1796:	88 23       	and	r24, r24
    1798:	99 f0       	breq	.+38     	; 0x17c0 <xTaskResumeAll+0xda>
    179a:	80 91 38 93 	lds	r24, 0x9338	; 0x809338 <uxPendedTicks>
    179e:	88 23       	and	r24, r24
    17a0:	79 f0       	breq	.+30     	; 0x17c0 <xTaskResumeAll+0xda>
    17a2:	c1 e0       	ldi	r28, 0x01	; 1
    17a4:	0e 94 9d 0a 	call	0x153a	; 0x153a <xTaskIncrementTick>
    17a8:	81 11       	cpse	r24, r1
    17aa:	c0 93 37 93 	sts	0x9337, r28	; 0x809337 <xYieldPending>
    17ae:	80 91 38 93 	lds	r24, 0x9338	; 0x809338 <uxPendedTicks>
    17b2:	81 50       	subi	r24, 0x01	; 1
    17b4:	80 93 38 93 	sts	0x9338, r24	; 0x809338 <uxPendedTicks>
    17b8:	80 91 38 93 	lds	r24, 0x9338	; 0x809338 <uxPendedTicks>
    17bc:	81 11       	cpse	r24, r1
    17be:	f2 cf       	rjmp	.-28     	; 0x17a4 <xTaskResumeAll+0xbe>
    17c0:	80 91 37 93 	lds	r24, 0x9337	; 0x809337 <xYieldPending>
    17c4:	81 30       	cpi	r24, 0x01	; 1
    17c6:	31 f4       	brne	.+12     	; 0x17d4 <xTaskResumeAll+0xee>
    17c8:	0e 94 b4 07 	call	0xf68	; 0xf68 <vPortYield>
    17cc:	81 e0       	ldi	r24, 0x01	; 1
    17ce:	03 c0       	rjmp	.+6      	; 0x17d6 <xTaskResumeAll+0xf0>
    17d0:	80 e0       	ldi	r24, 0x00	; 0
    17d2:	01 c0       	rjmp	.+2      	; 0x17d6 <xTaskResumeAll+0xf0>
    17d4:	80 e0       	ldi	r24, 0x00	; 0
    17d6:	0f 90       	pop	r0
    17d8:	0f be       	out	0x3f, r0	; 63
    17da:	df 91       	pop	r29
    17dc:	cf 91       	pop	r28
    17de:	1f 91       	pop	r17
    17e0:	0f 91       	pop	r16
    17e2:	ff 90       	pop	r15
    17e4:	ef 90       	pop	r14
    17e6:	df 90       	pop	r13
    17e8:	08 95       	ret

000017ea <vTaskDelay>:
    17ea:	cf 93       	push	r28
    17ec:	df 93       	push	r29
    17ee:	ec 01       	movw	r28, r24
    17f0:	89 2b       	or	r24, r25
    17f2:	b1 f0       	breq	.+44     	; 0x1820 <vTaskDelay+0x36>
    17f4:	0e 94 97 0a 	call	0x152e	; 0x152e <vTaskSuspendAll>
    17f8:	80 91 3b 93 	lds	r24, 0x933B	; 0x80933b <xTickCount>
    17fc:	90 91 3c 93 	lds	r25, 0x933C	; 0x80933c <xTickCount+0x1>
    1800:	c8 0f       	add	r28, r24
    1802:	d9 1f       	adc	r29, r25
    1804:	80 91 81 93 	lds	r24, 0x9381	; 0x809381 <pxCurrentTCB>
    1808:	90 91 82 93 	lds	r25, 0x9382	; 0x809382 <pxCurrentTCB+0x1>
    180c:	02 96       	adiw	r24, 0x02	; 2
    180e:	0e 94 06 09 	call	0x120c	; 0x120c <uxListRemove>
    1812:	ce 01       	movw	r24, r28
    1814:	0e 94 2d 09 	call	0x125a	; 0x125a <prvAddCurrentTaskToDelayedList>
    1818:	0e 94 73 0b 	call	0x16e6	; 0x16e6 <xTaskResumeAll>
    181c:	81 11       	cpse	r24, r1
    181e:	02 c0       	rjmp	.+4      	; 0x1824 <vTaskDelay+0x3a>
    1820:	0e 94 b4 07 	call	0xf68	; 0xf68 <vPortYield>
    1824:	df 91       	pop	r29
    1826:	cf 91       	pop	r28
    1828:	08 95       	ret

0000182a <vTaskSwitchContext>:
    182a:	80 91 34 93 	lds	r24, 0x9334	; 0x809334 <uxSchedulerSuspended>
    182e:	88 23       	and	r24, r24
    1830:	21 f0       	breq	.+8      	; 0x183a <vTaskSwitchContext+0x10>
    1832:	81 e0       	ldi	r24, 0x01	; 1
    1834:	80 93 37 93 	sts	0x9337, r24	; 0x809337 <xYieldPending>
    1838:	08 95       	ret
    183a:	10 92 37 93 	sts	0x9337, r1	; 0x809337 <xYieldPending>
    183e:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    1842:	90 e0       	ldi	r25, 0x00	; 0
    1844:	fc 01       	movw	r30, r24
    1846:	ee 0f       	add	r30, r30
    1848:	ff 1f       	adc	r31, r31
    184a:	ee 0f       	add	r30, r30
    184c:	ff 1f       	adc	r31, r31
    184e:	ee 0f       	add	r30, r30
    1850:	ff 1f       	adc	r31, r31
    1852:	8e 0f       	add	r24, r30
    1854:	9f 1f       	adc	r25, r31
    1856:	fc 01       	movw	r30, r24
    1858:	e3 5a       	subi	r30, 0xA3	; 163
    185a:	fc 46       	sbci	r31, 0x6C	; 108
    185c:	80 81       	ld	r24, Z
    185e:	81 11       	cpse	r24, r1
    1860:	17 c0       	rjmp	.+46     	; 0x1890 <vTaskSwitchContext+0x66>
    1862:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    1866:	81 50       	subi	r24, 0x01	; 1
    1868:	80 93 3a 93 	sts	0x933A, r24	; 0x80933a <uxTopReadyPriority>
    186c:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    1870:	90 e0       	ldi	r25, 0x00	; 0
    1872:	fc 01       	movw	r30, r24
    1874:	ee 0f       	add	r30, r30
    1876:	ff 1f       	adc	r31, r31
    1878:	ee 0f       	add	r30, r30
    187a:	ff 1f       	adc	r31, r31
    187c:	ee 0f       	add	r30, r30
    187e:	ff 1f       	adc	r31, r31
    1880:	8e 0f       	add	r24, r30
    1882:	9f 1f       	adc	r25, r31
    1884:	fc 01       	movw	r30, r24
    1886:	e3 5a       	subi	r30, 0xA3	; 163
    1888:	fc 46       	sbci	r31, 0x6C	; 108
    188a:	80 81       	ld	r24, Z
    188c:	88 23       	and	r24, r24
    188e:	49 f3       	breq	.-46     	; 0x1862 <vTaskSwitchContext+0x38>
    1890:	80 91 3a 93 	lds	r24, 0x933A	; 0x80933a <uxTopReadyPriority>
    1894:	90 e0       	ldi	r25, 0x00	; 0
    1896:	9c 01       	movw	r18, r24
    1898:	22 0f       	add	r18, r18
    189a:	33 1f       	adc	r19, r19
    189c:	22 0f       	add	r18, r18
    189e:	33 1f       	adc	r19, r19
    18a0:	22 0f       	add	r18, r18
    18a2:	33 1f       	adc	r19, r19
    18a4:	28 0f       	add	r18, r24
    18a6:	39 1f       	adc	r19, r25
    18a8:	d9 01       	movw	r26, r18
    18aa:	a3 5a       	subi	r26, 0xA3	; 163
    18ac:	bc 46       	sbci	r27, 0x6C	; 108
    18ae:	11 96       	adiw	r26, 0x01	; 1
    18b0:	ed 91       	ld	r30, X+
    18b2:	fc 91       	ld	r31, X
    18b4:	12 97       	sbiw	r26, 0x02	; 2
    18b6:	02 80       	ldd	r0, Z+2	; 0x02
    18b8:	f3 81       	ldd	r31, Z+3	; 0x03
    18ba:	e0 2d       	mov	r30, r0
    18bc:	11 96       	adiw	r26, 0x01	; 1
    18be:	ed 93       	st	X+, r30
    18c0:	fc 93       	st	X, r31
    18c2:	12 97       	sbiw	r26, 0x02	; 2
    18c4:	20 5a       	subi	r18, 0xA0	; 160
    18c6:	3c 46       	sbci	r19, 0x6C	; 108
    18c8:	e2 17       	cp	r30, r18
    18ca:	f3 07       	cpc	r31, r19
    18cc:	29 f4       	brne	.+10     	; 0x18d8 <vTaskSwitchContext+0xae>
    18ce:	22 81       	ldd	r18, Z+2	; 0x02
    18d0:	33 81       	ldd	r19, Z+3	; 0x03
    18d2:	fd 01       	movw	r30, r26
    18d4:	21 83       	std	Z+1, r18	; 0x01
    18d6:	32 83       	std	Z+2, r19	; 0x02
    18d8:	fc 01       	movw	r30, r24
    18da:	ee 0f       	add	r30, r30
    18dc:	ff 1f       	adc	r31, r31
    18de:	ee 0f       	add	r30, r30
    18e0:	ff 1f       	adc	r31, r31
    18e2:	ee 0f       	add	r30, r30
    18e4:	ff 1f       	adc	r31, r31
    18e6:	8e 0f       	add	r24, r30
    18e8:	9f 1f       	adc	r25, r31
    18ea:	fc 01       	movw	r30, r24
    18ec:	e3 5a       	subi	r30, 0xA3	; 163
    18ee:	fc 46       	sbci	r31, 0x6C	; 108
    18f0:	01 80       	ldd	r0, Z+1	; 0x01
    18f2:	f2 81       	ldd	r31, Z+2	; 0x02
    18f4:	e0 2d       	mov	r30, r0
    18f6:	86 81       	ldd	r24, Z+6	; 0x06
    18f8:	97 81       	ldd	r25, Z+7	; 0x07
    18fa:	80 93 81 93 	sts	0x9381, r24	; 0x809381 <pxCurrentTCB>
    18fe:	90 93 82 93 	sts	0x9382, r25	; 0x809382 <pxCurrentTCB+0x1>
    1902:	08 95       	ret

00001904 <USB_Event_Stub>:
    1904:	08 95       	ret

00001906 <Endpoint_SelectEndpoint>:
    1906:	80 93 9e 93 	sts	0x939E, r24	; 0x80939e <USB_Endpoint_SelectedEndpoint>
    190a:	28 2f       	mov	r18, r24
    190c:	2f 70       	andi	r18, 0x0F	; 15
    190e:	30 e0       	ldi	r19, 0x00	; 0
    1910:	40 91 c6 04 	lds	r20, 0x04C6	; 0x8004c6 <__TEXT_REGION_LENGTH__+0x7004c6>
    1914:	50 91 c7 04 	lds	r21, 0x04C7	; 0x8004c7 <__TEXT_REGION_LENGTH__+0x7004c7>
    1918:	88 23       	and	r24, r24
    191a:	e4 f4       	brge	.+56     	; 0x1954 <Endpoint_SelectEndpoint+0x4e>
    191c:	64 e8       	ldi	r22, 0x84	; 132
    191e:	62 9f       	mul	r22, r18
    1920:	c0 01       	movw	r24, r0
    1922:	63 9f       	mul	r22, r19
    1924:	90 0d       	add	r25, r0
    1926:	11 24       	eor	r1, r1
    1928:	8f 51       	subi	r24, 0x1F	; 31
    192a:	9c 46       	sbci	r25, 0x6C	; 108
    192c:	80 93 9a 93 	sts	0x939A, r24	; 0x80939a <USB_Endpoint_SelectedFIFO>
    1930:	90 93 9b 93 	sts	0x939B, r25	; 0x80939b <USB_Endpoint_SelectedFIFO+0x1>
    1934:	c9 01       	movw	r24, r18
    1936:	82 95       	swap	r24
    1938:	92 95       	swap	r25
    193a:	90 7f       	andi	r25, 0xF0	; 240
    193c:	98 27       	eor	r25, r24
    193e:	80 7f       	andi	r24, 0xF0	; 240
    1940:	98 27       	eor	r25, r24
    1942:	08 96       	adiw	r24, 0x08	; 8
    1944:	9a 01       	movw	r18, r20
    1946:	28 0f       	add	r18, r24
    1948:	39 1f       	adc	r19, r25
    194a:	20 93 9c 93 	sts	0x939C, r18	; 0x80939c <USB_Endpoint_SelectedHandle>
    194e:	30 93 9d 93 	sts	0x939D, r19	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    1952:	08 95       	ret
    1954:	64 e8       	ldi	r22, 0x84	; 132
    1956:	62 9f       	mul	r22, r18
    1958:	c0 01       	movw	r24, r0
    195a:	63 9f       	mul	r22, r19
    195c:	90 0d       	add	r25, r0
    195e:	11 24       	eor	r1, r1
    1960:	81 56       	subi	r24, 0x61	; 97
    1962:	9c 46       	sbci	r25, 0x6C	; 108
    1964:	80 93 9a 93 	sts	0x939A, r24	; 0x80939a <USB_Endpoint_SelectedFIFO>
    1968:	90 93 9b 93 	sts	0x939B, r25	; 0x80939b <USB_Endpoint_SelectedFIFO+0x1>
    196c:	22 95       	swap	r18
    196e:	32 95       	swap	r19
    1970:	30 7f       	andi	r19, 0xF0	; 240
    1972:	32 27       	eor	r19, r18
    1974:	20 7f       	andi	r18, 0xF0	; 240
    1976:	32 27       	eor	r19, r18
    1978:	24 0f       	add	r18, r20
    197a:	35 1f       	adc	r19, r21
    197c:	20 93 9c 93 	sts	0x939C, r18	; 0x80939c <USB_Endpoint_SelectedHandle>
    1980:	30 93 9d 93 	sts	0x939D, r19	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    1984:	08 95       	ret

00001986 <Endpoint_ConfigureEndpoint_PRV>:
    1986:	1f 93       	push	r17
    1988:	cf 93       	push	r28
    198a:	df 93       	push	r29
    198c:	d8 2f       	mov	r29, r24
    198e:	16 2f       	mov	r17, r22
    1990:	c4 2f       	mov	r28, r20
    1992:	0e 94 83 0c 	call	0x1906	; 0x1906 <Endpoint_SelectEndpoint>
    1996:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    199a:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    199e:	11 82       	std	Z+1, r1	; 0x01
    19a0:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    19a4:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    19a8:	dd 23       	and	r29, r29
    19aa:	a4 f0       	brlt	.+40     	; 0x19d4 <Endpoint_ConfigureEndpoint_PRV+0x4e>
    19ac:	10 82       	st	Z, r1
    19ae:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    19b2:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    19b6:	11 83       	std	Z+1, r17	; 0x01
    19b8:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    19bc:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    19c0:	12 82       	std	Z+2, r1	; 0x02
    19c2:	13 82       	std	Z+3, r1	; 0x03
    19c4:	80 91 9a 93 	lds	r24, 0x939A	; 0x80939a <USB_Endpoint_SelectedFIFO>
    19c8:	90 91 9b 93 	lds	r25, 0x939B	; 0x80939b <USB_Endpoint_SelectedFIFO+0x1>
    19cc:	84 83       	std	Z+4, r24	; 0x04
    19ce:	95 83       	std	Z+5, r25	; 0x05
    19d0:	40 e0       	ldi	r20, 0x00	; 0
    19d2:	14 c0       	rjmp	.+40     	; 0x19fc <Endpoint_ConfigureEndpoint_PRV+0x76>
    19d4:	82 e0       	ldi	r24, 0x02	; 2
    19d6:	80 83       	st	Z, r24
    19d8:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    19dc:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    19e0:	11 83       	std	Z+1, r17	; 0x01
    19e2:	e0 91 9c 93 	lds	r30, 0x939C	; 0x80939c <USB_Endpoint_SelectedHandle>
    19e6:	f0 91 9d 93 	lds	r31, 0x939D	; 0x80939d <USB_Endpoint_SelectedHandle+0x1>
    19ea:	12 82       	std	Z+2, r1	; 0x02
    19ec:	13 82       	std	Z+3, r1	; 0x03
    19ee:	80 91 9a 93 	lds	r24, 0x939A	; 0x80939a <USB_Endpoint_SelectedFIFO>
    19f2:	90 91 9b 93 	lds	r25, 0x939B	; 0x80939b <USB_Endpoint_SelectedFIFO+0x1>
    19f6:	84 83       	std	Z+4, r24	; 0x04
    19f8:	95 83       	std	Z+5, r25	; 0x05
    19fa:	4c 2f       	mov	r20, r28
    19fc:	fc 01       	movw	r30, r24
    19fe:	e0 5c       	subi	r30, 0xC0	; 192
    1a00:	ff 4f       	sbci	r31, 0xFF	; 255
    1a02:	40 83       	st	Z, r20
    1a04:	31 96       	adiw	r30, 0x01	; 1
    1a06:	10 82       	st	Z, r1
    1a08:	81 e0       	ldi	r24, 0x01	; 1
    1a0a:	df 91       	pop	r29
    1a0c:	cf 91       	pop	r28
    1a0e:	1f 91       	pop	r17
    1a10:	08 95       	ret

00001a12 <Endpoint_ClearEndpoints>:
    1a12:	20 e0       	ldi	r18, 0x00	; 0
    1a14:	30 e0       	ldi	r19, 0x00	; 0
    1a16:	a0 ec       	ldi	r26, 0xC0	; 192
    1a18:	b4 e0       	ldi	r27, 0x04	; 4
    1a1a:	16 96       	adiw	r26, 0x06	; 6
    1a1c:	ed 91       	ld	r30, X+
    1a1e:	fc 91       	ld	r31, X
    1a20:	17 97       	sbiw	r26, 0x07	; 7
    1a22:	c9 01       	movw	r24, r18
    1a24:	82 95       	swap	r24
    1a26:	92 95       	swap	r25
    1a28:	90 7f       	andi	r25, 0xF0	; 240
    1a2a:	98 27       	eor	r25, r24
    1a2c:	80 7f       	andi	r24, 0xF0	; 240
    1a2e:	98 27       	eor	r25, r24
    1a30:	e8 0f       	add	r30, r24
    1a32:	f9 1f       	adc	r31, r25
    1a34:	11 86       	std	Z+9, r1	; 0x09
    1a36:	16 96       	adiw	r26, 0x06	; 6
    1a38:	4d 91       	ld	r20, X+
    1a3a:	5c 91       	ld	r21, X
    1a3c:	17 97       	sbiw	r26, 0x07	; 7
    1a3e:	fa 01       	movw	r30, r20
    1a40:	e8 0f       	add	r30, r24
    1a42:	f9 1f       	adc	r31, r25
    1a44:	11 82       	std	Z+1, r1	; 0x01
    1a46:	2f 5f       	subi	r18, 0xFF	; 255
    1a48:	3f 4f       	sbci	r19, 0xFF	; 255
    1a4a:	25 30       	cpi	r18, 0x05	; 5
    1a4c:	31 05       	cpc	r19, r1
    1a4e:	29 f7       	brne	.-54     	; 0x1a1a <Endpoint_ClearEndpoints+0x8>
    1a50:	08 95       	ret

00001a52 <__vector_125>:
    1a52:	1f 92       	push	r1
    1a54:	0f 92       	push	r0
    1a56:	0f b6       	in	r0, 0x3f	; 63
    1a58:	0f 92       	push	r0
    1a5a:	11 24       	eor	r1, r1
    1a5c:	0b b6       	in	r0, 0x3b	; 59
    1a5e:	0f 92       	push	r0
    1a60:	2f 93       	push	r18
    1a62:	3f 93       	push	r19
    1a64:	4f 93       	push	r20
    1a66:	5f 93       	push	r21
    1a68:	6f 93       	push	r22
    1a6a:	7f 93       	push	r23
    1a6c:	8f 93       	push	r24
    1a6e:	9f 93       	push	r25
    1a70:	af 93       	push	r26
    1a72:	bf 93       	push	r27
    1a74:	ef 93       	push	r30
    1a76:	ff 93       	push	r31
    1a78:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1a7c:	88 23       	and	r24, r24
    1a7e:	4c f4       	brge	.+18     	; 0x1a92 <__vector_125+0x40>
    1a80:	80 91 c8 04 	lds	r24, 0x04C8	; 0x8004c8 <__TEXT_REGION_LENGTH__+0x7004c8>
    1a84:	88 23       	and	r24, r24
    1a86:	2c f4       	brge	.+10     	; 0x1a92 <__vector_125+0x40>
    1a88:	80 e8       	ldi	r24, 0x80	; 128
    1a8a:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1a8e:	0e 94 82 0c 	call	0x1904	; 0x1904 <USB_Event_Stub>
    1a92:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1a96:	86 ff       	sbrs	r24, 6
    1a98:	07 c0       	rjmp	.+14     	; 0x1aa8 <__vector_125+0x56>
    1a9a:	80 e4       	ldi	r24, 0x40	; 64
    1a9c:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1aa0:	10 92 91 93 	sts	0x9391, r1	; 0x809391 <USB_DeviceState>
    1aa4:	0e 94 82 0c 	call	0x1904	; 0x1904 <USB_Event_Stub>
    1aa8:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1aac:	85 ff       	sbrs	r24, 5
    1aae:	16 c0       	rjmp	.+44     	; 0x1adc <__vector_125+0x8a>
    1ab0:	80 e2       	ldi	r24, 0x20	; 32
    1ab2:	80 93 ca 04 	sts	0x04CA, r24	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1ab6:	80 91 8d 93 	lds	r24, 0x938D	; 0x80938d <USB_Device_ConfigurationNumber>
    1aba:	88 23       	and	r24, r24
    1abc:	21 f0       	breq	.+8      	; 0x1ac6 <__vector_125+0x74>
    1abe:	84 e0       	ldi	r24, 0x04	; 4
    1ac0:	80 93 91 93 	sts	0x9391, r24	; 0x809391 <USB_DeviceState>
    1ac4:	09 c0       	rjmp	.+18     	; 0x1ad8 <__vector_125+0x86>
    1ac6:	80 91 c3 04 	lds	r24, 0x04C3	; 0x8004c3 <__TEXT_REGION_LENGTH__+0x7004c3>
    1aca:	81 11       	cpse	r24, r1
    1acc:	02 c0       	rjmp	.+4      	; 0x1ad2 <__vector_125+0x80>
    1ace:	81 e0       	ldi	r24, 0x01	; 1
    1ad0:	01 c0       	rjmp	.+2      	; 0x1ad4 <__vector_125+0x82>
    1ad2:	83 e0       	ldi	r24, 0x03	; 3
    1ad4:	80 93 91 93 	sts	0x9391, r24	; 0x809391 <USB_DeviceState>
    1ad8:	0e 94 82 0c 	call	0x1904	; 0x1904 <USB_Event_Stub>
    1adc:	80 91 ca 04 	lds	r24, 0x04CA	; 0x8004ca <__TEXT_REGION_LENGTH__+0x7004ca>
    1ae0:	84 ff       	sbrs	r24, 4
    1ae2:	18 c0       	rjmp	.+48     	; 0x1b14 <__vector_125+0xc2>
    1ae4:	e0 ec       	ldi	r30, 0xC0	; 192
    1ae6:	f4 e0       	ldi	r31, 0x04	; 4
    1ae8:	80 e1       	ldi	r24, 0x10	; 16
    1aea:	82 87       	std	Z+10, r24	; 0x0a
    1aec:	82 e0       	ldi	r24, 0x02	; 2
    1aee:	80 93 91 93 	sts	0x9391, r24	; 0x809391 <USB_DeviceState>
    1af2:	10 92 8d 93 	sts	0x938D, r1	; 0x80938d <USB_Device_ConfigurationNumber>
    1af6:	13 82       	std	Z+3, r1	; 0x03
    1af8:	0e 94 09 0d 	call	0x1a12	; 0x1a12 <Endpoint_ClearEndpoints>
    1afc:	48 e0       	ldi	r20, 0x08	; 8
    1afe:	68 e4       	ldi	r22, 0x48	; 72
    1b00:	80 e8       	ldi	r24, 0x80	; 128
    1b02:	0e 94 c3 0c 	call	0x1986	; 0x1986 <Endpoint_ConfigureEndpoint_PRV>
    1b06:	48 e0       	ldi	r20, 0x08	; 8
    1b08:	68 e4       	ldi	r22, 0x48	; 72
    1b0a:	80 e0       	ldi	r24, 0x00	; 0
    1b0c:	0e 94 c3 0c 	call	0x1986	; 0x1986 <Endpoint_ConfigureEndpoint_PRV>
    1b10:	0e 94 82 0c 	call	0x1904	; 0x1904 <USB_Event_Stub>
    1b14:	ff 91       	pop	r31
    1b16:	ef 91       	pop	r30
    1b18:	bf 91       	pop	r27
    1b1a:	af 91       	pop	r26
    1b1c:	9f 91       	pop	r25
    1b1e:	8f 91       	pop	r24
    1b20:	7f 91       	pop	r23
    1b22:	6f 91       	pop	r22
    1b24:	5f 91       	pop	r21
    1b26:	4f 91       	pop	r20
    1b28:	3f 91       	pop	r19
    1b2a:	2f 91       	pop	r18
    1b2c:	0f 90       	pop	r0
    1b2e:	0b be       	out	0x3b, r0	; 59
    1b30:	0f 90       	pop	r0
    1b32:	0f be       	out	0x3f, r0	; 63
    1b34:	0f 90       	pop	r0
    1b36:	1f 90       	pop	r1
    1b38:	18 95       	reti

00001b3a <relay_thread>:
	time_t t;
	t = mktime(&_t);
	
	return t;

}
    1b3a:	07 e0       	ldi	r16, 0x07	; 7
    1b3c:	28 e1       	ldi	r18, 0x18	; 24
    1b3e:	40 e0       	ldi	r20, 0x00	; 0
    1b40:	60 e0       	ldi	r22, 0x00	; 0
    1b42:	81 ea       	ldi	r24, 0xA1	; 161
    1b44:	92 e2       	ldi	r25, 0x22	; 34
    1b46:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <DigitalPin_Config>
    1b4a:	28 e1       	ldi	r18, 0x18	; 24
    1b4c:	40 e0       	ldi	r20, 0x00	; 0
    1b4e:	60 e0       	ldi	r22, 0x00	; 0
    1b50:	84 ea       	ldi	r24, 0xA4	; 164
    1b52:	92 e2       	ldi	r25, 0x22	; 34
    1b54:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <DigitalPin_Config>
    1b58:	00 e0       	ldi	r16, 0x00	; 0
    1b5a:	28 e1       	ldi	r18, 0x18	; 24
    1b5c:	40 e0       	ldi	r20, 0x00	; 0
    1b5e:	60 e0       	ldi	r22, 0x00	; 0
    1b60:	87 ea       	ldi	r24, 0xA7	; 167
    1b62:	92 e2       	ldi	r25, 0x22	; 34
    1b64:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <DigitalPin_Config>
    1b68:	28 e1       	ldi	r18, 0x18	; 24
    1b6a:	40 e0       	ldi	r20, 0x00	; 0
    1b6c:	60 e0       	ldi	r22, 0x00	; 0
    1b6e:	8a ea       	ldi	r24, 0xAA	; 170
    1b70:	92 e2       	ldi	r25, 0x22	; 34
    1b72:	0e 94 e3 11 	call	0x23c6	; 0x23c6 <DigitalPin_Config>
    1b76:	c5 e9       	ldi	r28, 0x95	; 149
    1b78:	d2 e2       	ldi	r29, 0x22	; 34
    1b7a:	0f 2e       	mov	r0, r31
    1b7c:	f1 ea       	ldi	r31, 0xA1	; 161
    1b7e:	ef 2e       	mov	r14, r31
    1b80:	f2 e2       	ldi	r31, 0x22	; 34
    1b82:	ff 2e       	mov	r15, r31
    1b84:	f0 2d       	mov	r31, r0
    1b86:	8e 01       	movw	r16, r28
    1b88:	c8 01       	movw	r24, r16
    1b8a:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
    1b8e:	61 e0       	ldi	r22, 0x01	; 1
    1b90:	c8 01       	movw	r24, r16
    1b92:	0e 94 ff 11 	call	0x23fe	; 0x23fe <DigitalPin_SetDir>
    1b96:	0d 5f       	subi	r16, 0xFD	; 253
    1b98:	1f 4f       	sbci	r17, 0xFF	; 255
    1b9a:	0e 15       	cp	r16, r14
    1b9c:	1f 05       	cpc	r17, r15
    1b9e:	a1 f7       	brne	.-24     	; 0x1b88 <relay_thread+0x4e>
    1ba0:	0f 2e       	mov	r0, r31
    1ba2:	f1 ea       	ldi	r31, 0xA1	; 161
    1ba4:	cf 2e       	mov	r12, r31
    1ba6:	f2 e2       	ldi	r31, 0x22	; 34
    1ba8:	df 2e       	mov	r13, r31
    1baa:	f0 2d       	mov	r31, r0
    1bac:	bb 24       	eor	r11, r11
    1bae:	b3 94       	inc	r11
    1bb0:	9c 2e       	mov	r9, r28
    1bb2:	ad 2e       	mov	r10, r29
    1bb4:	84 e6       	ldi	r24, 0x64	; 100
    1bb6:	90 e0       	ldi	r25, 0x00	; 0
    1bb8:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <vTaskDelay>
    1bbc:	86 01       	movw	r16, r12
    1bbe:	e1 2c       	mov	r14, r1
    1bc0:	f1 2c       	mov	r15, r1
    1bc2:	d0 2f       	mov	r29, r16
    1bc4:	c1 2f       	mov	r28, r17
    1bc6:	c8 01       	movw	r24, r16
    1bc8:	0e 94 41 12 	call	0x2482	; 0x2482 <DigitalPin_GetValue>
    1bcc:	81 11       	cpse	r24, r1
    1bce:	0c c0       	rjmp	.+24     	; 0x1be8 <relay_thread+0xae>
    1bd0:	8d 2f       	mov	r24, r29
    1bd2:	9c 2f       	mov	r25, r28
    1bd4:	0e 94 41 12 	call	0x2482	; 0x2482 <DigitalPin_GetValue>
    1bd8:	88 23       	and	r24, r24
    1bda:	d1 f3       	breq	.-12     	; 0x1bd0 <relay_thread+0x96>
    1bdc:	f7 01       	movw	r30, r14
    1bde:	ef 56       	subi	r30, 0x6F	; 111
    1be0:	fd 4d       	sbci	r31, 0xDD	; 221
    1be2:	80 81       	ld	r24, Z
    1be4:	8b 25       	eor	r24, r11
    1be6:	80 83       	st	Z, r24
    1be8:	8f ef       	ldi	r24, 0xFF	; 255
    1bea:	e8 1a       	sub	r14, r24
    1bec:	f8 0a       	sbc	r15, r24
    1bee:	0d 5f       	subi	r16, 0xFD	; 253
    1bf0:	1f 4f       	sbci	r17, 0xFF	; 255
    1bf2:	84 e0       	ldi	r24, 0x04	; 4
    1bf4:	e8 16       	cp	r14, r24
    1bf6:	f1 04       	cpc	r15, r1
    1bf8:	21 f7       	brne	.-56     	; 0x1bc2 <relay_thread+0x88>
    1bfa:	09 2d       	mov	r16, r9
    1bfc:	1a 2d       	mov	r17, r10
    1bfe:	c0 e0       	ldi	r28, 0x00	; 0
    1c00:	d0 e0       	ldi	r29, 0x00	; 0
    1c02:	fe 01       	movw	r30, r28
    1c04:	ef 56       	subi	r30, 0x6F	; 111
    1c06:	fd 4d       	sbci	r31, 0xDD	; 221
    1c08:	80 81       	ld	r24, Z
    1c0a:	88 23       	and	r24, r24
    1c0c:	21 f0       	breq	.+8      	; 0x1c16 <relay_thread+0xdc>
    1c0e:	c8 01       	movw	r24, r16
    1c10:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
    1c14:	03 c0       	rjmp	.+6      	; 0x1c1c <relay_thread+0xe2>
    1c16:	c8 01       	movw	r24, r16
    1c18:	0e 94 31 12 	call	0x2462	; 0x2462 <DigitalPin_ClearValue>
    1c1c:	21 96       	adiw	r28, 0x01	; 1
    1c1e:	0d 5f       	subi	r16, 0xFD	; 253
    1c20:	1f 4f       	sbci	r17, 0xFF	; 255
    1c22:	c4 30       	cpi	r28, 0x04	; 4
    1c24:	d1 05       	cpc	r29, r1
    1c26:	69 f7       	brne	.-38     	; 0x1c02 <relay_thread+0xc8>
    1c28:	c5 cf       	rjmp	.-118    	; 0x1bb4 <relay_thread+0x7a>

00001c2a <radio_thread>:
    1c2a:	cf 93       	push	r28
    1c2c:	df 93       	push	r29
    1c2e:	cd b7       	in	r28, 0x3d	; 61
    1c30:	de b7       	in	r29, 0x3e	; 62
    1c32:	a0 97       	sbiw	r28, 0x20	; 32
    1c34:	cd bf       	out	0x3d, r28	; 61
    1c36:	de bf       	out	0x3e, r29	; 62
    1c38:	0e 94 2c 06 	call	0xc58	; 0xc58 <_nrf24l01p_init>
    1c3c:	01 e3       	ldi	r16, 0x31	; 49
    1c3e:	1c e4       	ldi	r17, 0x4C	; 76
    1c40:	2c e4       	ldi	r18, 0x4C	; 76
    1c42:	3c e4       	ldi	r19, 0x4C	; 76
    1c44:	4c e4       	ldi	r20, 0x4C	; 76
    1c46:	50 e0       	ldi	r21, 0x00	; 0
    1c48:	60 e0       	ldi	r22, 0x00	; 0
    1c4a:	70 e0       	ldi	r23, 0x00	; 0
    1c4c:	81 e0       	ldi	r24, 0x01	; 1
    1c4e:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_nrf24l01p_set_RX_pipe_address>
    1c52:	02 e3       	ldi	r16, 0x32	; 50
    1c54:	2c e4       	ldi	r18, 0x4C	; 76
    1c56:	3c e4       	ldi	r19, 0x4C	; 76
    1c58:	4c e4       	ldi	r20, 0x4C	; 76
    1c5a:	50 e0       	ldi	r21, 0x00	; 0
    1c5c:	60 e0       	ldi	r22, 0x00	; 0
    1c5e:	70 e0       	ldi	r23, 0x00	; 0
    1c60:	82 e0       	ldi	r24, 0x02	; 2
    1c62:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_nrf24l01p_set_RX_pipe_address>
    1c66:	03 e3       	ldi	r16, 0x33	; 51
    1c68:	2c e4       	ldi	r18, 0x4C	; 76
    1c6a:	3c e4       	ldi	r19, 0x4C	; 76
    1c6c:	4c e4       	ldi	r20, 0x4C	; 76
    1c6e:	50 e0       	ldi	r21, 0x00	; 0
    1c70:	60 e0       	ldi	r22, 0x00	; 0
    1c72:	70 e0       	ldi	r23, 0x00	; 0
    1c74:	83 e0       	ldi	r24, 0x03	; 3
    1c76:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_nrf24l01p_set_RX_pipe_address>
    1c7a:	04 e3       	ldi	r16, 0x34	; 52
    1c7c:	2c e4       	ldi	r18, 0x4C	; 76
    1c7e:	3c e4       	ldi	r19, 0x4C	; 76
    1c80:	4c e4       	ldi	r20, 0x4C	; 76
    1c82:	50 e0       	ldi	r21, 0x00	; 0
    1c84:	60 e0       	ldi	r22, 0x00	; 0
    1c86:	70 e0       	ldi	r23, 0x00	; 0
    1c88:	84 e0       	ldi	r24, 0x04	; 4
    1c8a:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_nrf24l01p_set_RX_pipe_address>
    1c8e:	05 e3       	ldi	r16, 0x35	; 53
    1c90:	2c e4       	ldi	r18, 0x4C	; 76
    1c92:	3c e4       	ldi	r19, 0x4C	; 76
    1c94:	4c e4       	ldi	r20, 0x4C	; 76
    1c96:	50 e0       	ldi	r21, 0x00	; 0
    1c98:	60 e0       	ldi	r22, 0x00	; 0
    1c9a:	70 e0       	ldi	r23, 0x00	; 0
    1c9c:	85 e0       	ldi	r24, 0x05	; 5
    1c9e:	0e 94 5a 04 	call	0x8b4	; 0x8b4 <_nrf24l01p_set_RX_pipe_address>
    1ca2:	00 e0       	ldi	r16, 0x00	; 0
    1ca4:	10 e0       	ldi	r17, 0x00	; 0
    1ca6:	0f 2e       	mov	r0, r31
    1ca8:	fe eb       	ldi	r31, 0xBE	; 190
    1caa:	ef 2e       	mov	r14, r31
    1cac:	f2 e2       	ldi	r31, 0x22	; 34
    1cae:	ff 2e       	mov	r15, r31
    1cb0:	f0 2d       	mov	r31, r0
    1cb2:	ce 01       	movw	r24, r28
    1cb4:	01 96       	adiw	r24, 0x01	; 1
    1cb6:	5c 01       	movw	r10, r24
    1cb8:	88 ec       	ldi	r24, 0xC8	; 200
    1cba:	90 e0       	ldi	r25, 0x00	; 0
    1cbc:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <vTaskDelay>
    1cc0:	0e 94 d3 06 	call	0xda6	; 0xda6 <_nrf24l01p_PRX>
    1cc4:	68 01       	movw	r12, r16
    1cc6:	9f ef       	ldi	r25, 0xFF	; 255
    1cc8:	c9 1a       	sub	r12, r25
    1cca:	d9 0a       	sbc	r13, r25
    1ccc:	1f 93       	push	r17
    1cce:	0f 93       	push	r16
    1cd0:	ff 92       	push	r15
    1cd2:	ef 92       	push	r14
    1cd4:	bf 92       	push	r11
    1cd6:	af 92       	push	r10
    1cd8:	0e 94 43 18 	call	0x3086	; 0x3086 <sprintf>
    1cdc:	0e 94 49 06 	call	0xc92	; 0xc92 <_nrf24l01p_PTX>
    1ce0:	0f 90       	pop	r0
    1ce2:	0f 90       	pop	r0
    1ce4:	0f 90       	pop	r0
    1ce6:	0f 90       	pop	r0
    1ce8:	0f 90       	pop	r0
    1cea:	0f 90       	pop	r0
    1cec:	86 01       	movw	r16, r12
    1cee:	e4 cf       	rjmp	.-56     	; 0x1cb8 <radio_thread+0x8e>

00001cf0 <usart_spi_transmit_receive>:
    1cf0:	fc 01       	movw	r30, r24
    1cf2:	81 81       	ldd	r24, Z+1	; 0x01
    1cf4:	85 ff       	sbrs	r24, 5
    1cf6:	fd cf       	rjmp	.-6      	; 0x1cf2 <usart_spi_transmit_receive+0x2>
    1cf8:	60 83       	st	Z, r22
    1cfa:	81 81       	ldd	r24, Z+1	; 0x01
    1cfc:	86 ff       	sbrs	r24, 6
    1cfe:	fd cf       	rjmp	.-6      	; 0x1cfa <usart_spi_transmit_receive+0xa>
    1d00:	80 e4       	ldi	r24, 0x40	; 64
    1d02:	81 83       	std	Z+1, r24	; 0x01
    1d04:	80 81       	ld	r24, Z
    1d06:	08 95       	ret

00001d08 <ssd1306_write_command>:
    1d08:	1f 93       	push	r17
    1d0a:	cf 93       	push	r28
    1d0c:	df 93       	push	r29
    1d0e:	c0 ea       	ldi	r28, 0xA0	; 160
    1d10:	d6 e0       	ldi	r29, 0x06	; 6
    1d12:	18 e0       	ldi	r17, 0x08	; 8
    1d14:	1e 83       	std	Y+6, r17	; 0x06
    1d16:	e0 e6       	ldi	r30, 0x60	; 96
    1d18:	f6 e0       	ldi	r31, 0x06	; 6
    1d1a:	91 e0       	ldi	r25, 0x01	; 1
    1d1c:	96 83       	std	Z+6, r25	; 0x06
    1d1e:	96 83       	std	Z+6, r25	; 0x06
    1d20:	68 2f       	mov	r22, r24
    1d22:	80 ea       	ldi	r24, 0xA0	; 160
    1d24:	99 e0       	ldi	r25, 0x09	; 9
    1d26:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <usart_spi_transmit_receive>
    1d2a:	1d 83       	std	Y+5, r17	; 0x05
    1d2c:	df 91       	pop	r29
    1d2e:	cf 91       	pop	r28
    1d30:	1f 91       	pop	r17
    1d32:	08 95       	ret

00001d34 <ssd1306_write_data>:
    1d34:	ef 92       	push	r14
    1d36:	ff 92       	push	r15
    1d38:	0f 93       	push	r16
    1d3a:	1f 93       	push	r17
    1d3c:	cf 93       	push	r28
    1d3e:	df 93       	push	r29
    1d40:	c0 ea       	ldi	r28, 0xA0	; 160
    1d42:	d6 e0       	ldi	r29, 0x06	; 6
    1d44:	18 e0       	ldi	r17, 0x08	; 8
    1d46:	1e 83       	std	Y+6, r17	; 0x06
    1d48:	0f 2e       	mov	r0, r31
    1d4a:	f0 e6       	ldi	r31, 0x60	; 96
    1d4c:	ef 2e       	mov	r14, r31
    1d4e:	f6 e0       	ldi	r31, 0x06	; 6
    1d50:	ff 2e       	mov	r15, r31
    1d52:	f0 2d       	mov	r31, r0
    1d54:	01 e0       	ldi	r16, 0x01	; 1
    1d56:	f7 01       	movw	r30, r14
    1d58:	05 83       	std	Z+5, r16	; 0x05
    1d5a:	68 2f       	mov	r22, r24
    1d5c:	80 ea       	ldi	r24, 0xA0	; 160
    1d5e:	99 e0       	ldi	r25, 0x09	; 9
    1d60:	0e 94 78 0e 	call	0x1cf0	; 0x1cf0 <usart_spi_transmit_receive>
    1d64:	f7 01       	movw	r30, r14
    1d66:	06 83       	std	Z+6, r16	; 0x06
    1d68:	1d 83       	std	Y+5, r17	; 0x05
    1d6a:	df 91       	pop	r29
    1d6c:	cf 91       	pop	r28
    1d6e:	1f 91       	pop	r17
    1d70:	0f 91       	pop	r16
    1d72:	ff 90       	pop	r15
    1d74:	ef 90       	pop	r14
    1d76:	08 95       	ret

00001d78 <ssd1306_set_page_address>:
    1d78:	87 70       	andi	r24, 0x07	; 7
    1d7a:	80 6b       	ori	r24, 0xB0	; 176
    1d7c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1d80:	08 95       	ret

00001d82 <ssd1306_set_column_address>:
    1d82:	cf 93       	push	r28
    1d84:	c8 2f       	mov	r28, r24
    1d86:	98 2f       	mov	r25, r24
    1d88:	9f 77       	andi	r25, 0x7F	; 127
    1d8a:	89 2f       	mov	r24, r25
    1d8c:	82 95       	swap	r24
    1d8e:	8f 70       	andi	r24, 0x0F	; 15
    1d90:	80 61       	ori	r24, 0x10	; 16
    1d92:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1d96:	8c 2f       	mov	r24, r28
    1d98:	8f 70       	andi	r24, 0x0F	; 15
    1d9a:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1d9e:	cf 91       	pop	r28
    1da0:	08 95       	ret

00001da2 <usart_init_spi>:
    1da2:	cf 93       	push	r28
    1da4:	df 93       	push	r29
    1da6:	ec 01       	movw	r28, r24
    1da8:	fb 01       	movw	r30, r22
    1daa:	8c 81       	ldd	r24, Y+4	; 0x04
    1dac:	8f 7e       	andi	r24, 0xEF	; 239
    1dae:	8c 83       	std	Y+4, r24	; 0x04
    1db0:	a0 e6       	ldi	r26, 0x60	; 96
    1db2:	b6 e0       	ldi	r27, 0x06	; 6
    1db4:	82 e0       	ldi	r24, 0x02	; 2
    1db6:	11 96       	adiw	r26, 0x01	; 1
    1db8:	8c 93       	st	X, r24
    1dba:	11 97       	sbiw	r26, 0x01	; 1
    1dbc:	15 96       	adiw	r26, 0x05	; 5
    1dbe:	8c 93       	st	X, r24
    1dc0:	8d 81       	ldd	r24, Y+5	; 0x05
    1dc2:	80 6c       	ori	r24, 0xC0	; 192
    1dc4:	8d 83       	std	Y+5, r24	; 0x05
    1dc6:	84 81       	ldd	r24, Z+4	; 0x04
    1dc8:	8d 7f       	andi	r24, 0xFD	; 253
    1dca:	81 30       	cpi	r24, 0x01	; 1
    1dcc:	21 f4       	brne	.+8      	; 0x1dd6 <usart_init_spi+0x34>
    1dce:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd0:	82 60       	ori	r24, 0x02	; 2
    1dd2:	8d 83       	std	Y+5, r24	; 0x05
    1dd4:	03 c0       	rjmp	.+6      	; 0x1ddc <usart_init_spi+0x3a>
    1dd6:	8d 81       	ldd	r24, Y+5	; 0x05
    1dd8:	8d 7f       	andi	r24, 0xFD	; 253
    1dda:	8d 83       	std	Y+5, r24	; 0x05
    1ddc:	85 81       	ldd	r24, Z+5	; 0x05
    1dde:	88 23       	and	r24, r24
    1de0:	21 f0       	breq	.+8      	; 0x1dea <usart_init_spi+0x48>
    1de2:	8d 81       	ldd	r24, Y+5	; 0x05
    1de4:	84 60       	ori	r24, 0x04	; 4
    1de6:	8d 83       	std	Y+5, r24	; 0x05
    1de8:	03 c0       	rjmp	.+6      	; 0x1df0 <usart_init_spi+0x4e>
    1dea:	8d 81       	ldd	r24, Y+5	; 0x05
    1dec:	8b 7f       	andi	r24, 0xFB	; 251
    1dee:	8d 83       	std	Y+5, r24	; 0x05
    1df0:	80 81       	ld	r24, Z
    1df2:	91 81       	ldd	r25, Z+1	; 0x01
    1df4:	a2 81       	ldd	r26, Z+2	; 0x02
    1df6:	b3 81       	ldd	r27, Z+3	; 0x03
    1df8:	9c 01       	movw	r18, r24
    1dfa:	ad 01       	movw	r20, r26
    1dfc:	22 0f       	add	r18, r18
    1dfe:	33 1f       	adc	r19, r19
    1e00:	44 1f       	adc	r20, r20
    1e02:	55 1f       	adc	r21, r21
    1e04:	60 e0       	ldi	r22, 0x00	; 0
    1e06:	78 e4       	ldi	r23, 0x48	; 72
    1e08:	88 ee       	ldi	r24, 0xE8	; 232
    1e0a:	91 e0       	ldi	r25, 0x01	; 1
    1e0c:	0e 94 a9 16 	call	0x2d52	; 0x2d52 <__udivmodsi4>
    1e10:	21 50       	subi	r18, 0x01	; 1
    1e12:	31 09       	sbc	r19, r1
    1e14:	83 2f       	mov	r24, r19
    1e16:	8f 70       	andi	r24, 0x0F	; 15
    1e18:	8f 83       	std	Y+7, r24	; 0x07
    1e1a:	2e 83       	std	Y+6, r18	; 0x06
    1e1c:	8c 81       	ldd	r24, Y+4	; 0x04
    1e1e:	88 60       	ori	r24, 0x08	; 8
    1e20:	8c 83       	std	Y+4, r24	; 0x04
    1e22:	df 91       	pop	r29
    1e24:	cf 91       	pop	r28
    1e26:	08 95       	ret

00001e28 <ssd1306_init>:
    1e28:	cf 93       	push	r28
    1e2a:	df 93       	push	r29
    1e2c:	00 d0       	rcall	.+0      	; 0x1e2e <ssd1306_init+0x6>
    1e2e:	00 d0       	rcall	.+0      	; 0x1e30 <ssd1306_init+0x8>
    1e30:	cd b7       	in	r28, 0x3d	; 61
    1e32:	de b7       	in	r29, 0x3e	; 62
    1e34:	20 ea       	ldi	r18, 0xA0	; 160
    1e36:	36 e0       	ldi	r19, 0x06	; 6
    1e38:	88 e0       	ldi	r24, 0x08	; 8
    1e3a:	d9 01       	movw	r26, r18
    1e3c:	11 96       	adiw	r26, 0x01	; 1
    1e3e:	8c 93       	st	X, r24
    1e40:	a0 e6       	ldi	r26, 0x60	; 96
    1e42:	b6 e0       	ldi	r27, 0x06	; 6
    1e44:	91 e0       	ldi	r25, 0x01	; 1
    1e46:	11 96       	adiw	r26, 0x01	; 1
    1e48:	9c 93       	st	X, r25
    1e4a:	11 97       	sbiw	r26, 0x01	; 1
    1e4c:	e0 e0       	ldi	r30, 0x00	; 0
    1e4e:	f6 e0       	ldi	r31, 0x06	; 6
    1e50:	81 83       	std	Z+1, r24	; 0x01
    1e52:	92 e0       	ldi	r25, 0x02	; 2
    1e54:	11 96       	adiw	r26, 0x01	; 1
    1e56:	9c 93       	st	X, r25
    1e58:	11 97       	sbiw	r26, 0x01	; 1
    1e5a:	11 96       	adiw	r26, 0x01	; 1
    1e5c:	8c 93       	st	X, r24
    1e5e:	d9 01       	movw	r26, r18
    1e60:	15 96       	adiw	r26, 0x05	; 5
    1e62:	8c 93       	st	X, r24
    1e64:	86 83       	std	Z+6, r24	; 0x06
    1e66:	ba e6       	ldi	r27, 0x6A	; 106
    1e68:	ba 95       	dec	r27
    1e6a:	f1 f7       	brne	.-4      	; 0x1e68 <ssd1306_init+0x40>
    1e6c:	00 c0       	rjmp	.+0      	; 0x1e6e <ssd1306_init+0x46>
    1e6e:	85 83       	std	Z+5, r24	; 0x05
    1e70:	ea e6       	ldi	r30, 0x6A	; 106
    1e72:	ea 95       	dec	r30
    1e74:	f1 f7       	brne	.-4      	; 0x1e72 <ssd1306_init+0x4a>
    1e76:	00 c0       	rjmp	.+0      	; 0x1e78 <ssd1306_init+0x50>
    1e78:	e0 e7       	ldi	r30, 0x70	; 112
    1e7a:	f0 e0       	ldi	r31, 0x00	; 0
    1e7c:	84 81       	ldd	r24, Z+4	; 0x04
    1e7e:	8f 7e       	andi	r24, 0xEF	; 239
    1e80:	84 83       	std	Z+4, r24	; 0x04
    1e82:	80 e0       	ldi	r24, 0x00	; 0
    1e84:	9b e1       	ldi	r25, 0x1B	; 27
    1e86:	a7 eb       	ldi	r26, 0xB7	; 183
    1e88:	b0 e0       	ldi	r27, 0x00	; 0
    1e8a:	89 83       	std	Y+1, r24	; 0x01
    1e8c:	9a 83       	std	Y+2, r25	; 0x02
    1e8e:	ab 83       	std	Y+3, r26	; 0x03
    1e90:	bc 83       	std	Y+4, r27	; 0x04
    1e92:	1d 82       	std	Y+5, r1	; 0x05
    1e94:	1e 82       	std	Y+6, r1	; 0x06
    1e96:	be 01       	movw	r22, r28
    1e98:	6f 5f       	subi	r22, 0xFF	; 255
    1e9a:	7f 4f       	sbci	r23, 0xFF	; 255
    1e9c:	80 ea       	ldi	r24, 0xA0	; 160
    1e9e:	99 e0       	ldi	r25, 0x09	; 9
    1ea0:	0e 94 d1 0e 	call	0x1da2	; 0x1da2 <usart_init_spi>
    1ea4:	88 ea       	ldi	r24, 0xA8	; 168
    1ea6:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1eaa:	8f e1       	ldi	r24, 0x1F	; 31
    1eac:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1eb0:	83 ed       	ldi	r24, 0xD3	; 211
    1eb2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1eb6:	80 e0       	ldi	r24, 0x00	; 0
    1eb8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ebc:	80 e4       	ldi	r24, 0x40	; 64
    1ebe:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ec2:	81 ea       	ldi	r24, 0xA1	; 161
    1ec4:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ec8:	88 ec       	ldi	r24, 0xC8	; 200
    1eca:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ece:	8a ed       	ldi	r24, 0xDA	; 218
    1ed0:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ed4:	82 e0       	ldi	r24, 0x02	; 2
    1ed6:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1eda:	81 e8       	ldi	r24, 0x81	; 129
    1edc:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ee0:	8f e8       	ldi	r24, 0x8F	; 143
    1ee2:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ee6:	84 ea       	ldi	r24, 0xA4	; 164
    1ee8:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1eec:	86 ea       	ldi	r24, 0xA6	; 166
    1eee:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ef2:	85 ed       	ldi	r24, 0xD5	; 213
    1ef4:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1ef8:	80 e8       	ldi	r24, 0x80	; 128
    1efa:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1efe:	8d e8       	ldi	r24, 0x8D	; 141
    1f00:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f04:	84 e1       	ldi	r24, 0x14	; 20
    1f06:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f0a:	8b ed       	ldi	r24, 0xDB	; 219
    1f0c:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f10:	80 e4       	ldi	r24, 0x40	; 64
    1f12:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f16:	89 ed       	ldi	r24, 0xD9	; 217
    1f18:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f1c:	81 ef       	ldi	r24, 0xF1	; 241
    1f1e:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f22:	8f ea       	ldi	r24, 0xAF	; 175
    1f24:	0e 94 84 0e 	call	0x1d08	; 0x1d08 <ssd1306_write_command>
    1f28:	26 96       	adiw	r28, 0x06	; 6
    1f2a:	cd bf       	out	0x3d, r28	; 61
    1f2c:	de bf       	out	0x3e, r29	; 62
    1f2e:	df 91       	pop	r29
    1f30:	cf 91       	pop	r28
    1f32:	08 95       	ret

00001f34 <ssd1306_write_text>:
    1f34:	ef 92       	push	r14
    1f36:	ff 92       	push	r15
    1f38:	0f 93       	push	r16
    1f3a:	1f 93       	push	r17
    1f3c:	cf 93       	push	r28
    1f3e:	dc 01       	movw	r26, r24
    1f40:	ec 91       	ld	r30, X
    1f42:	ee 23       	and	r30, r30
    1f44:	29 f1       	breq	.+74     	; 0x1f90 <ssd1306_write_text+0x5c>
    1f46:	7c 01       	movw	r14, r24
    1f48:	bf ef       	ldi	r27, 0xFF	; 255
    1f4a:	eb 1a       	sub	r14, r27
    1f4c:	fb 0a       	sbc	r15, r27
    1f4e:	ef 37       	cpi	r30, 0x7F	; 127
    1f50:	d0 f4       	brcc	.+52     	; 0x1f86 <ssd1306_write_text+0x52>
    1f52:	f0 e0       	ldi	r31, 0x00	; 0
    1f54:	ee 0f       	add	r30, r30
    1f56:	ff 1f       	adc	r31, r31
    1f58:	ef 56       	subi	r30, 0x6F	; 111
    1f5a:	fe 4d       	sbci	r31, 0xDE	; 222
    1f5c:	00 81       	ld	r16, Z
    1f5e:	11 81       	ldd	r17, Z+1	; 0x01
    1f60:	f8 01       	movw	r30, r16
    1f62:	80 81       	ld	r24, Z
    1f64:	88 23       	and	r24, r24
    1f66:	61 f0       	breq	.+24     	; 0x1f80 <ssd1306_write_text+0x4c>
    1f68:	c1 e0       	ldi	r28, 0x01	; 1
    1f6a:	f8 01       	movw	r30, r16
    1f6c:	ec 0f       	add	r30, r28
    1f6e:	f1 1d       	adc	r31, r1
    1f70:	80 81       	ld	r24, Z
    1f72:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <ssd1306_write_data>
    1f76:	cf 5f       	subi	r28, 0xFF	; 255
    1f78:	d8 01       	movw	r26, r16
    1f7a:	9c 91       	ld	r25, X
    1f7c:	9c 17       	cp	r25, r28
    1f7e:	a8 f7       	brcc	.-22     	; 0x1f6a <ssd1306_write_text+0x36>
    1f80:	80 e0       	ldi	r24, 0x00	; 0
    1f82:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <ssd1306_write_data>
    1f86:	d7 01       	movw	r26, r14
    1f88:	ed 91       	ld	r30, X+
    1f8a:	7d 01       	movw	r14, r26
    1f8c:	e1 11       	cpse	r30, r1
    1f8e:	df cf       	rjmp	.-66     	; 0x1f4e <ssd1306_write_text+0x1a>
    1f90:	cf 91       	pop	r28
    1f92:	1f 91       	pop	r17
    1f94:	0f 91       	pop	r16
    1f96:	ff 90       	pop	r15
    1f98:	ef 90       	pop	r14
    1f9a:	08 95       	ret

00001f9c <glcd_thread>:
    1f9c:	cf 93       	push	r28
    1f9e:	df 93       	push	r29
    1fa0:	cd b7       	in	r28, 0x3d	; 61
    1fa2:	de b7       	in	r29, 0x3e	; 62
    1fa4:	c8 57       	subi	r28, 0x78	; 120
    1fa6:	d1 09       	sbc	r29, r1
    1fa8:	cd bf       	out	0x3d, r28	; 61
    1faa:	de bf       	out	0x3e, r29	; 62
    1fac:	0e 94 14 0f 	call	0x1e28	; 0x1e28 <ssd1306_init>
    1fb0:	10 e0       	ldi	r17, 0x00	; 0
    1fb2:	0f c0       	rjmp	.+30     	; 0x1fd2 <glcd_thread+0x36>
    1fb4:	81 2f       	mov	r24, r17
    1fb6:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <ssd1306_set_page_address>
    1fba:	80 2f       	mov	r24, r16
    1fbc:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <ssd1306_set_column_address>
    1fc0:	80 e0       	ldi	r24, 0x00	; 0
    1fc2:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <ssd1306_write_data>
    1fc6:	0f 5f       	subi	r16, 0xFF	; 255
    1fc8:	00 38       	cpi	r16, 0x80	; 128
    1fca:	a1 f7       	brne	.-24     	; 0x1fb4 <glcd_thread+0x18>
    1fcc:	1f 5f       	subi	r17, 0xFF	; 255
    1fce:	14 30       	cpi	r17, 0x04	; 4
    1fd0:	11 f0       	breq	.+4      	; 0x1fd6 <glcd_thread+0x3a>
    1fd2:	00 e0       	ldi	r16, 0x00	; 0
    1fd4:	ef cf       	rjmp	.-34     	; 0x1fb4 <glcd_thread+0x18>
    1fd6:	0f 2e       	mov	r0, r31
    1fd8:	f1 e9       	ldi	r31, 0x91	; 145
    1fda:	ef 2e       	mov	r14, r31
    1fdc:	f2 e2       	ldi	r31, 0x22	; 34
    1fde:	ff 2e       	mov	r15, r31
    1fe0:	f0 2d       	mov	r31, r0
    1fe2:	33 24       	eor	r3, r3
    1fe4:	33 94       	inc	r3
    1fe6:	ce 01       	movw	r24, r28
    1fe8:	01 96       	adiw	r24, 0x01	; 1
    1fea:	4c 01       	movw	r8, r24
    1fec:	3e 01       	movw	r6, r28
    1fee:	9f e1       	ldi	r25, 0x1F	; 31
    1ff0:	69 0e       	add	r6, r25
    1ff2:	71 1c       	adc	r7, r1
    1ff4:	0f 2e       	mov	r0, r31
    1ff6:	f7 ee       	ldi	r31, 0xE7	; 231
    1ff8:	4f 2e       	mov	r4, r31
    1ffa:	f2 e2       	ldi	r31, 0x22	; 34
    1ffc:	5f 2e       	mov	r5, r31
    1ffe:	f0 2d       	mov	r31, r0
    2000:	5e 01       	movw	r10, r28
    2002:	ad e3       	ldi	r26, 0x3D	; 61
    2004:	aa 0e       	add	r10, r26
    2006:	b1 1c       	adc	r11, r1
    2008:	6e 01       	movw	r12, r28
    200a:	bb e5       	ldi	r27, 0x5B	; 91
    200c:	cb 0e       	add	r12, r27
    200e:	d1 1c       	adc	r13, r1
    2010:	f7 01       	movw	r30, r14
    2012:	80 81       	ld	r24, Z
    2014:	83 25       	eor	r24, r3
    2016:	1f 92       	push	r1
    2018:	8f 93       	push	r24
    201a:	a9 ec       	ldi	r26, 0xC9	; 201
    201c:	b2 e2       	ldi	r27, 0x22	; 34
    201e:	bf 93       	push	r27
    2020:	af 93       	push	r26
    2022:	9f 92       	push	r9
    2024:	8f 92       	push	r8
    2026:	0e 94 43 18 	call	0x3086	; 0x3086 <sprintf>
    202a:	d7 01       	movw	r26, r14
    202c:	11 96       	adiw	r26, 0x01	; 1
    202e:	8c 91       	ld	r24, X
    2030:	83 25       	eor	r24, r3
    2032:	1f 92       	push	r1
    2034:	8f 93       	push	r24
    2036:	a8 ed       	ldi	r26, 0xD8	; 216
    2038:	b2 e2       	ldi	r27, 0x22	; 34
    203a:	bf 93       	push	r27
    203c:	af 93       	push	r26
    203e:	7f 92       	push	r7
    2040:	6f 92       	push	r6
    2042:	0e 94 43 18 	call	0x3086	; 0x3086 <sprintf>
    2046:	d7 01       	movw	r26, r14
    2048:	12 96       	adiw	r26, 0x02	; 2
    204a:	8c 91       	ld	r24, X
    204c:	83 25       	eor	r24, r3
    204e:	1f 92       	push	r1
    2050:	8f 93       	push	r24
    2052:	5f 92       	push	r5
    2054:	4f 92       	push	r4
    2056:	bf 92       	push	r11
    2058:	af 92       	push	r10
    205a:	0e 94 43 18 	call	0x3086	; 0x3086 <sprintf>
    205e:	f7 01       	movw	r30, r14
    2060:	83 81       	ldd	r24, Z+3	; 0x03
    2062:	83 25       	eor	r24, r3
    2064:	1f 92       	push	r1
    2066:	8f 93       	push	r24
    2068:	a6 ef       	ldi	r26, 0xF6	; 246
    206a:	b2 e2       	ldi	r27, 0x22	; 34
    206c:	bf 93       	push	r27
    206e:	af 93       	push	r26
    2070:	df 92       	push	r13
    2072:	cf 92       	push	r12
    2074:	0e 94 43 18 	call	0x3086	; 0x3086 <sprintf>
    2078:	cd bf       	out	0x3d, r28	; 61
    207a:	de bf       	out	0x3e, r29	; 62
    207c:	00 e0       	ldi	r16, 0x00	; 0
    207e:	0f c0       	rjmp	.+30     	; 0x209e <glcd_thread+0x102>
    2080:	80 2f       	mov	r24, r16
    2082:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <ssd1306_set_page_address>
    2086:	81 2f       	mov	r24, r17
    2088:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <ssd1306_set_column_address>
    208c:	80 e0       	ldi	r24, 0x00	; 0
    208e:	0e 94 9a 0e 	call	0x1d34	; 0x1d34 <ssd1306_write_data>
    2092:	1f 5f       	subi	r17, 0xFF	; 255
    2094:	10 38       	cpi	r17, 0x80	; 128
    2096:	a1 f7       	brne	.-24     	; 0x2080 <glcd_thread+0xe4>
    2098:	0f 5f       	subi	r16, 0xFF	; 255
    209a:	04 30       	cpi	r16, 0x04	; 4
    209c:	11 f0       	breq	.+4      	; 0x20a2 <glcd_thread+0x106>
    209e:	10 e0       	ldi	r17, 0x00	; 0
    20a0:	ef cf       	rjmp	.-34     	; 0x2080 <glcd_thread+0xe4>
    20a2:	84 01       	movw	r16, r8
    20a4:	21 2c       	mov	r2, r1
    20a6:	82 2d       	mov	r24, r2
    20a8:	0e 94 bc 0e 	call	0x1d78	; 0x1d78 <ssd1306_set_page_address>
    20ac:	80 e0       	ldi	r24, 0x00	; 0
    20ae:	0e 94 c1 0e 	call	0x1d82	; 0x1d82 <ssd1306_set_column_address>
    20b2:	c8 01       	movw	r24, r16
    20b4:	0e 94 9a 0f 	call	0x1f34	; 0x1f34 <ssd1306_write_text>
    20b8:	23 94       	inc	r2
    20ba:	02 5e       	subi	r16, 0xE2	; 226
    20bc:	1f 4f       	sbci	r17, 0xFF	; 255
    20be:	94 e0       	ldi	r25, 0x04	; 4
    20c0:	29 12       	cpse	r2, r25
    20c2:	f1 cf       	rjmp	.-30     	; 0x20a6 <glcd_thread+0x10a>
    20c4:	80 91 83 93 	lds	r24, 0x9383	; 0x809383 <radioRXnotificationLed>
    20c8:	88 23       	and	r24, r24
    20ca:	79 f0       	breq	.+30     	; 0x20ea <glcd_thread+0x14e>
    20cc:	86 eb       	ldi	r24, 0xB6	; 182
    20ce:	92 e2       	ldi	r25, 0x22	; 34
    20d0:	0e 94 31 12 	call	0x2462	; 0x2462 <DigitalPin_ClearValue>
    20d4:	88 ec       	ldi	r24, 0xC8	; 200
    20d6:	90 e0       	ldi	r25, 0x00	; 0
    20d8:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <vTaskDelay>
    20dc:	86 eb       	ldi	r24, 0xB6	; 182
    20de:	92 e2       	ldi	r25, 0x22	; 34
    20e0:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
    20e4:	10 92 83 93 	sts	0x9383, r1	; 0x809383 <radioRXnotificationLed>
    20e8:	93 cf       	rjmp	.-218    	; 0x2010 <glcd_thread+0x74>
    20ea:	88 ec       	ldi	r24, 0xC8	; 200
    20ec:	90 e0       	ldi	r25, 0x00	; 0
    20ee:	0e 94 f5 0b 	call	0x17ea	; 0x17ea <vTaskDelay>
    20f2:	8e cf       	rjmp	.-228    	; 0x2010 <glcd_thread+0x74>

000020f4 <board_config>:
volatile bool radioRXnotificationLed  =0;
	
	
void board_config(){

	CLKSYS_Enable( OSC_RC32MEN_bm );
    20f4:	e0 e5       	ldi	r30, 0x50	; 80
    20f6:	f0 e0       	ldi	r31, 0x00	; 0
    20f8:	80 81       	ld	r24, Z
    20fa:	82 60       	ori	r24, 0x02	; 2
    20fc:	80 83       	st	Z, r24
	do {} while ( CLKSYS_IsReady( OSC_RC32MRDY_bm ) == 0 );
    20fe:	81 81       	ldd	r24, Z+1	; 0x01
    2100:	81 ff       	sbrs	r24, 1
    2102:	fd cf       	rjmp	.-6      	; 0x20fe <board_config+0xa>
	CLKSYS_Main_ClockSource_Select( CLK_SCLKSEL_RC32M_gc );
    2104:	81 e0       	ldi	r24, 0x01	; 1
    2106:	0e 94 e9 12 	call	0x25d2	; 0x25d2 <CLKSYS_Main_ClockSource_Select>
	CLKSYS_Disable( OSC_RC2MEN_bm );
    210a:	81 e0       	ldi	r24, 0x01	; 1
    210c:	0e 94 df 12 	call	0x25be	; 0x25be <CLKSYS_Disable>

	DigitalPin_SetDir(&led1,1);
    2110:	61 e0       	ldi	r22, 0x01	; 1
    2112:	86 eb       	ldi	r24, 0xB6	; 182
    2114:	92 e2       	ldi	r25, 0x22	; 34
    2116:	0e 94 ff 11 	call	0x23fe	; 0x23fe <DigitalPin_SetDir>
	DigitalPin_SetDir(&led2,1);
    211a:	61 e0       	ldi	r22, 0x01	; 1
    211c:	83 eb       	ldi	r24, 0xB3	; 179
    211e:	92 e2       	ldi	r25, 0x22	; 34
    2120:	0e 94 ff 11 	call	0x23fe	; 0x23fe <DigitalPin_SetDir>
	DigitalPin_SetDir(&powLedR,1);
    2124:	61 e0       	ldi	r22, 0x01	; 1
    2126:	80 eb       	ldi	r24, 0xB0	; 176
    2128:	92 e2       	ldi	r25, 0x22	; 34
    212a:	0e 94 ff 11 	call	0x23fe	; 0x23fe <DigitalPin_SetDir>
	DigitalPin_SetDir(&powLedG,1);
    212e:	61 e0       	ldi	r22, 0x01	; 1
    2130:	8d ea       	ldi	r24, 0xAD	; 173
    2132:	92 e2       	ldi	r25, 0x22	; 34
    2134:	0e 94 ff 11 	call	0x23fe	; 0x23fe <DigitalPin_SetDir>

	DigitalPin_SetValue(&led1);
    2138:	86 eb       	ldi	r24, 0xB6	; 182
    213a:	92 e2       	ldi	r25, 0x22	; 34
    213c:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
	DigitalPin_SetValue(&led2);
    2140:	83 eb       	ldi	r24, 0xB3	; 179
    2142:	92 e2       	ldi	r25, 0x22	; 34
    2144:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
	DigitalPin_SetValue(&powLedR);//off
    2148:	80 eb       	ldi	r24, 0xB0	; 176
    214a:	92 e2       	ldi	r25, 0x22	; 34
    214c:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
	DigitalPin_SetValue(&powLedG);//on
    2150:	8d ea       	ldi	r24, 0xAD	; 173
    2152:	92 e2       	ldi	r25, 0x22	; 34
    2154:	0e 94 21 12 	call	0x2442	; 0x2442 <DigitalPin_SetValue>
	DigitalPin_ClearValue(&powLedG);//off
    2158:	8d ea       	ldi	r24, 0xAD	; 173
    215a:	92 e2       	ldi	r25, 0x22	; 34
    215c:	0e 94 31 12 	call	0x2462	; 0x2462 <DigitalPin_ClearValue>
    2160:	08 95       	ret

00002162 <command_handler>:

	
}


void *command_handler(char **args,int arg_count){
    2162:	0f 93       	push	r16
    2164:	1f 93       	push	r17
    2166:	cf 93       	push	r28
    2168:	df 93       	push	r29
    216a:	ec 01       	movw	r28, r24

	if(!strcmp(args[0], "light") ) {
    216c:	08 81       	ld	r16, Y
    216e:	19 81       	ldd	r17, Y+1	; 0x01
    2170:	66 e0       	ldi	r22, 0x06	; 6
    2172:	73 e2       	ldi	r23, 0x23	; 35
    2174:	c8 01       	movw	r24, r16
    2176:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    217a:	89 2b       	or	r24, r25
    217c:	09 f0       	breq	.+2      	; 0x2180 <command_handler+0x1e>
    217e:	63 c0       	rjmp	.+198    	; 0x2246 <command_handler+0xe4>
		if(!strcmp(args[1], "0")) {
    2180:	0a 81       	ldd	r16, Y+2	; 0x02
    2182:	1b 81       	ldd	r17, Y+3	; 0x03
    2184:	6c e0       	ldi	r22, 0x0C	; 12
    2186:	73 e2       	ldi	r23, 0x23	; 35
    2188:	c8 01       	movw	r24, r16
    218a:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    218e:	89 2b       	or	r24, r25
    2190:	c9 f4       	brne	.+50     	; 0x21c4 <command_handler+0x62>
			if(!strcmp(args[2], "0")) {
    2192:	0c 80       	ldd	r0, Y+4	; 0x04
    2194:	dd 81       	ldd	r29, Y+5	; 0x05
    2196:	c0 2d       	mov	r28, r0
    2198:	6c e0       	ldi	r22, 0x0C	; 12
    219a:	73 e2       	ldi	r23, 0x23	; 35
    219c:	ce 01       	movw	r24, r28
    219e:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    21a2:	89 2b       	or	r24, r25
    21a4:	21 f4       	brne	.+8      	; 0x21ae <command_handler+0x4c>
				relayState[0] = 1;
    21a6:	81 e0       	ldi	r24, 0x01	; 1
    21a8:	80 93 91 22 	sts	0x2291, r24	; 0x802291 <relayState>
    21ac:	9e c0       	rjmp	.+316    	; 0x22ea <command_handler+0x188>
			}
			else if(!strcmp(args[2], "1")) {
    21ae:	65 e2       	ldi	r22, 0x25	; 37
    21b0:	73 e2       	ldi	r23, 0x23	; 35
    21b2:	ce 01       	movw	r24, r28
    21b4:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    21b8:	89 2b       	or	r24, r25
    21ba:	09 f0       	breq	.+2      	; 0x21be <command_handler+0x5c>
    21bc:	96 c0       	rjmp	.+300    	; 0x22ea <command_handler+0x188>
				relayState[0] = 0;
    21be:	10 92 91 22 	sts	0x2291, r1	; 0x802291 <relayState>
    21c2:	93 c0       	rjmp	.+294    	; 0x22ea <command_handler+0x188>
			}
		}
		else if(!strcmp(args[1], "1")) {
    21c4:	65 e2       	ldi	r22, 0x25	; 37
    21c6:	73 e2       	ldi	r23, 0x23	; 35
    21c8:	c8 01       	movw	r24, r16
    21ca:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    21ce:	89 2b       	or	r24, r25
    21d0:	c9 f4       	brne	.+50     	; 0x2204 <command_handler+0xa2>
			if(!strcmp(args[2], "0")) {
    21d2:	0c 80       	ldd	r0, Y+4	; 0x04
    21d4:	dd 81       	ldd	r29, Y+5	; 0x05
    21d6:	c0 2d       	mov	r28, r0
    21d8:	6c e0       	ldi	r22, 0x0C	; 12
    21da:	73 e2       	ldi	r23, 0x23	; 35
    21dc:	ce 01       	movw	r24, r28
    21de:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    21e2:	89 2b       	or	r24, r25
    21e4:	21 f4       	brne	.+8      	; 0x21ee <command_handler+0x8c>
				relayState[1] = 1;
    21e6:	81 e0       	ldi	r24, 0x01	; 1
    21e8:	80 93 92 22 	sts	0x2292, r24	; 0x802292 <relayState+0x1>
    21ec:	7e c0       	rjmp	.+252    	; 0x22ea <command_handler+0x188>
			}
			else if(!strcmp(args[2], "1")) {
    21ee:	65 e2       	ldi	r22, 0x25	; 37
    21f0:	73 e2       	ldi	r23, 0x23	; 35
    21f2:	ce 01       	movw	r24, r28
    21f4:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    21f8:	89 2b       	or	r24, r25
    21fa:	09 f0       	breq	.+2      	; 0x21fe <command_handler+0x9c>
    21fc:	76 c0       	rjmp	.+236    	; 0x22ea <command_handler+0x188>
				relayState[1] = 0;
    21fe:	10 92 92 22 	sts	0x2292, r1	; 0x802292 <relayState+0x1>
    2202:	73 c0       	rjmp	.+230    	; 0x22ea <command_handler+0x188>
			}
		}
		else if(!strcmp(args[1], "2")) {
    2204:	68 e2       	ldi	r22, 0x28	; 40
    2206:	73 e2       	ldi	r23, 0x23	; 35
    2208:	c8 01       	movw	r24, r16
    220a:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    220e:	89 2b       	or	r24, r25
    2210:	09 f0       	breq	.+2      	; 0x2214 <command_handler+0xb2>
    2212:	6b c0       	rjmp	.+214    	; 0x22ea <command_handler+0x188>
			if(!strcmp(args[2], "0")) {
    2214:	0c 80       	ldd	r0, Y+4	; 0x04
    2216:	dd 81       	ldd	r29, Y+5	; 0x05
    2218:	c0 2d       	mov	r28, r0
    221a:	6c e0       	ldi	r22, 0x0C	; 12
    221c:	73 e2       	ldi	r23, 0x23	; 35
    221e:	ce 01       	movw	r24, r28
    2220:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    2224:	89 2b       	or	r24, r25
    2226:	21 f4       	brne	.+8      	; 0x2230 <command_handler+0xce>
				relayState[2] = 1;
    2228:	81 e0       	ldi	r24, 0x01	; 1
    222a:	80 93 93 22 	sts	0x2293, r24	; 0x802293 <relayState+0x2>
    222e:	5d c0       	rjmp	.+186    	; 0x22ea <command_handler+0x188>
			}
			else if(!strcmp(args[2], "1")) {
    2230:	65 e2       	ldi	r22, 0x25	; 37
    2232:	73 e2       	ldi	r23, 0x23	; 35
    2234:	ce 01       	movw	r24, r28
    2236:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    223a:	89 2b       	or	r24, r25
    223c:	09 f0       	breq	.+2      	; 0x2240 <command_handler+0xde>
    223e:	55 c0       	rjmp	.+170    	; 0x22ea <command_handler+0x188>
				relayState[2] = 0;
    2240:	10 92 93 22 	sts	0x2293, r1	; 0x802293 <relayState+0x2>
    2244:	52 c0       	rjmp	.+164    	; 0x22ea <command_handler+0x188>
			}
		}
	}
	else if(!strcmp(args[0], "fan") ) {
    2246:	6e e0       	ldi	r22, 0x0E	; 14
    2248:	73 e2       	ldi	r23, 0x23	; 35
    224a:	c8 01       	movw	r24, r16
    224c:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    2250:	89 2b       	or	r24, r25
    2252:	c1 f4       	brne	.+48     	; 0x2284 <command_handler+0x122>
		if(!strcmp(args[1], "0")) {
    2254:	0a 80       	ldd	r0, Y+2	; 0x02
    2256:	db 81       	ldd	r29, Y+3	; 0x03
    2258:	c0 2d       	mov	r28, r0
    225a:	6c e0       	ldi	r22, 0x0C	; 12
    225c:	73 e2       	ldi	r23, 0x23	; 35
    225e:	ce 01       	movw	r24, r28
    2260:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    2264:	89 2b       	or	r24, r25
    2266:	21 f4       	brne	.+8      	; 0x2270 <command_handler+0x10e>
			relayState[3] = 1;
    2268:	81 e0       	ldi	r24, 0x01	; 1
    226a:	80 93 94 22 	sts	0x2294, r24	; 0x802294 <relayState+0x3>
    226e:	3d c0       	rjmp	.+122    	; 0x22ea <command_handler+0x188>
		}
		else if(!strcmp(args[1], "1")) {
    2270:	65 e2       	ldi	r22, 0x25	; 37
    2272:	73 e2       	ldi	r23, 0x23	; 35
    2274:	ce 01       	movw	r24, r28
    2276:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    227a:	89 2b       	or	r24, r25
    227c:	b1 f5       	brne	.+108    	; 0x22ea <command_handler+0x188>
			relayState[3] = 0;
    227e:	10 92 94 22 	sts	0x2294, r1	; 0x802294 <relayState+0x3>
    2282:	33 c0       	rjmp	.+102    	; 0x22ea <command_handler+0x188>
		}
	}
	else if(!strcmp(args[0], "all") ) {
    2284:	62 e1       	ldi	r22, 0x12	; 18
    2286:	73 e2       	ldi	r23, 0x23	; 35
    2288:	c8 01       	movw	r24, r16
    228a:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    228e:	89 2b       	or	r24, r25
    2290:	01 f5       	brne	.+64     	; 0x22d2 <command_handler+0x170>
		if(!strcmp(args[1], "0")) {
    2292:	0a 80       	ldd	r0, Y+2	; 0x02
    2294:	db 81       	ldd	r29, Y+3	; 0x03
    2296:	c0 2d       	mov	r28, r0
    2298:	6c e0       	ldi	r22, 0x0C	; 12
    229a:	73 e2       	ldi	r23, 0x23	; 35
    229c:	ce 01       	movw	r24, r28
    229e:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    22a2:	89 2b       	or	r24, r25
    22a4:	41 f4       	brne	.+16     	; 0x22b6 <command_handler+0x154>
			relayState[0] = 1;
    22a6:	e1 e9       	ldi	r30, 0x91	; 145
    22a8:	f2 e2       	ldi	r31, 0x22	; 34
    22aa:	81 e0       	ldi	r24, 0x01	; 1
    22ac:	80 83       	st	Z, r24
			relayState[1] = 1;
    22ae:	81 83       	std	Z+1, r24	; 0x01
			relayState[2] = 1;
    22b0:	82 83       	std	Z+2, r24	; 0x02
			relayState[3] = 1;
    22b2:	83 83       	std	Z+3, r24	; 0x03
    22b4:	1a c0       	rjmp	.+52     	; 0x22ea <command_handler+0x188>
		}
		else if(!strcmp(args[1], "1")) {
    22b6:	65 e2       	ldi	r22, 0x25	; 37
    22b8:	73 e2       	ldi	r23, 0x23	; 35
    22ba:	ce 01       	movw	r24, r28
    22bc:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    22c0:	89 2b       	or	r24, r25
    22c2:	99 f4       	brne	.+38     	; 0x22ea <command_handler+0x188>
			relayState[0] = 0;
    22c4:	e1 e9       	ldi	r30, 0x91	; 145
    22c6:	f2 e2       	ldi	r31, 0x22	; 34
    22c8:	10 82       	st	Z, r1
			relayState[1] = 0;
    22ca:	11 82       	std	Z+1, r1	; 0x01
			relayState[2] = 0;
    22cc:	12 82       	std	Z+2, r1	; 0x02
			relayState[3] = 0;
    22ce:	13 82       	std	Z+3, r1	; 0x03
    22d0:	0c c0       	rjmp	.+24     	; 0x22ea <command_handler+0x188>
		}
	}

	else if(!strcmp(args[0],"bootloader")){
    22d2:	66 e1       	ldi	r22, 0x16	; 22
    22d4:	73 e2       	ldi	r23, 0x23	; 35
    22d6:	c8 01       	movw	r24, r16
    22d8:	0e 94 d0 17 	call	0x2fa0	; 0x2fa0 <strcmp>
    22dc:	89 2b       	or	r24, r25
    22de:	29 f4       	brne	.+10     	; 0x22ea <command_handler+0x188>
		uint8_t jmpE = (uint8_t)((BOOT_SECTION_START/2)>>16);
		uint8_t jmpH = (uint8_t)((BOOT_SECTION_START/2)>>8);
		uint8_t jmpL = (uint8_t)((BOOT_SECTION_START/2)>>0);
		//cli();
		//CCPWrite(&(PMIC.CTRL), PMIC_IVSEL_bm );
		asm("ldi ZH, %0"::"i" (jmpH):"r30","r31");
    22e0:	f0 e0       	ldi	r31, 0x00	; 0
		asm("ldi ZL, %0"::"i" (jmpL):"r30","r31");
    22e2:	e0 e0       	ldi	r30, 0x00	; 0
		EIND = jmpE;
    22e4:	83 e0       	ldi	r24, 0x03	; 3
    22e6:	8c bf       	out	0x3c, r24	; 60
		asm("eijmp");
    22e8:	19 94       	eijmp
	else{
		//no recognized command
	}

	return 0;
}
    22ea:	80 e0       	ldi	r24, 0x00	; 0
    22ec:	90 e0       	ldi	r25, 0x00	; 0
    22ee:	df 91       	pop	r29
    22f0:	cf 91       	pop	r28
    22f2:	1f 91       	pop	r17
    22f4:	0f 91       	pop	r16
    22f6:	08 95       	ret

000022f8 <command_parse_execute>:

void command_parse_execute(char *command){
    22f8:	ef 92       	push	r14
    22fa:	ff 92       	push	r15
    22fc:	0f 93       	push	r16
    22fe:	1f 93       	push	r17
    2300:	cf 93       	push	r28
    2302:	df 93       	push	r29
    2304:	cd b7       	in	r28, 0x3d	; 61
    2306:	de b7       	in	r29, 0x3e	; 62
    2308:	64 97       	sbiw	r28, 0x14	; 20
    230a:	cd bf       	out	0x3d, r28	; 61
    230c:	de bf       	out	0x3e, r29	; 62

	int arg_index = 0;
	char *pch;
	char *remotch_args[ 10];
	pch = strtok(command, " ,");
    230e:	61 e2       	ldi	r22, 0x21	; 33
    2310:	73 e2       	ldi	r23, 0x23	; 35
    2312:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <strtok>
	while(pch != NULL) {
    2316:	00 97       	sbiw	r24, 0x00	; 0
    2318:	d9 f0       	breq	.+54     	; 0x2350 <command_parse_execute+0x58>
		remotch_args[arg_index] = pch;
    231a:	89 83       	std	Y+1, r24	; 0x01
    231c:	9a 83       	std	Y+2, r25	; 0x02
    231e:	7e 01       	movw	r14, r28
    2320:	83 e0       	ldi	r24, 0x03	; 3
    2322:	e8 0e       	add	r14, r24
    2324:	f1 1c       	adc	r15, r1
    2326:	01 e0       	ldi	r16, 0x01	; 1
    2328:	10 e0       	ldi	r17, 0x00	; 0
    232a:	09 c0       	rjmp	.+18     	; 0x233e <command_parse_execute+0x46>
    232c:	f7 01       	movw	r30, r14
    232e:	81 93       	st	Z+, r24
    2330:	91 93       	st	Z+, r25
    2332:	7f 01       	movw	r14, r30
		arg_index++;
    2334:	0f 5f       	subi	r16, 0xFF	; 255
    2336:	1f 4f       	sbci	r17, 0xFF	; 255
		if(arg_index >=10) break;
    2338:	0a 30       	cpi	r16, 0x0A	; 10
    233a:	11 05       	cpc	r17, r1
    233c:	59 f0       	breq	.+22     	; 0x2354 <command_parse_execute+0x5c>
		pch = strtok (NULL, " ,");
    233e:	61 e2       	ldi	r22, 0x21	; 33
    2340:	73 e2       	ldi	r23, 0x23	; 35
    2342:	80 e0       	ldi	r24, 0x00	; 0
    2344:	90 e0       	ldi	r25, 0x00	; 0
    2346:	0e 94 cc 17 	call	0x2f98	; 0x2f98 <strtok>

	int arg_index = 0;
	char *pch;
	char *remotch_args[ 10];
	pch = strtok(command, " ,");
	while(pch != NULL) {
    234a:	00 97       	sbiw	r24, 0x00	; 0
    234c:	79 f7       	brne	.-34     	; 0x232c <command_parse_execute+0x34>
    234e:	02 c0       	rjmp	.+4      	; 0x2354 <command_parse_execute+0x5c>
	return 0;
}

void command_parse_execute(char *command){

	int arg_index = 0;
    2350:	00 e0       	ldi	r16, 0x00	; 0
    2352:	10 e0       	ldi	r17, 0x00	; 0
		remotch_args[arg_index] = pch;
		arg_index++;
		if(arg_index >=10) break;
		pch = strtok (NULL, " ,");
	}
	command_handler(remotch_args,arg_index);
    2354:	b8 01       	movw	r22, r16
    2356:	ce 01       	movw	r24, r28
    2358:	01 96       	adiw	r24, 0x01	; 1
    235a:	0e 94 b1 10 	call	0x2162	; 0x2162 <command_handler>
}
    235e:	64 96       	adiw	r28, 0x14	; 20
    2360:	cd bf       	out	0x3d, r28	; 61
    2362:	de bf       	out	0x3e, r29	; 62
    2364:	df 91       	pop	r29
    2366:	cf 91       	pop	r28
    2368:	1f 91       	pop	r17
    236a:	0f 91       	pop	r16
    236c:	ff 90       	pop	r15
    236e:	ef 90       	pop	r14
    2370:	08 95       	ret

00002372 <main>:
 */
int main(void)
{


	board_config();
    2372:	0e 94 7a 10 	call	0x20f4	; 0x20f4 <board_config>
	
	xTaskCreate(radio_thread,(signed portCHAR *) "t1", 500, NULL, tskIDLE_PRIORITY, NULL );
    2376:	a1 2c       	mov	r10, r1
    2378:	b1 2c       	mov	r11, r1
    237a:	c1 2c       	mov	r12, r1
    237c:	d1 2c       	mov	r13, r1
    237e:	e1 2c       	mov	r14, r1
    2380:	f1 2c       	mov	r15, r1
    2382:	00 e0       	ldi	r16, 0x00	; 0
    2384:	20 e0       	ldi	r18, 0x00	; 0
    2386:	30 e0       	ldi	r19, 0x00	; 0
    2388:	44 ef       	ldi	r20, 0xF4	; 244
    238a:	51 e0       	ldi	r21, 0x01	; 1
    238c:	64 e2       	ldi	r22, 0x24	; 36
    238e:	73 e2       	ldi	r23, 0x23	; 35
    2390:	85 e1       	ldi	r24, 0x15	; 21
    2392:	9e e0       	ldi	r25, 0x0E	; 14
    2394:	0e 94 64 09 	call	0x12c8	; 0x12c8 <xTaskGenericCreate>
	xTaskCreate(relay_thread,(signed portCHAR *) "t2", 500, NULL, tskIDLE_PRIORITY, NULL );
    2398:	20 e0       	ldi	r18, 0x00	; 0
    239a:	30 e0       	ldi	r19, 0x00	; 0
    239c:	44 ef       	ldi	r20, 0xF4	; 244
    239e:	51 e0       	ldi	r21, 0x01	; 1
    23a0:	67 e2       	ldi	r22, 0x27	; 39
    23a2:	73 e2       	ldi	r23, 0x23	; 35
    23a4:	8d e9       	ldi	r24, 0x9D	; 157
    23a6:	9d e0       	ldi	r25, 0x0D	; 13
    23a8:	0e 94 64 09 	call	0x12c8	; 0x12c8 <xTaskGenericCreate>
	xTaskCreate(glcd_thread,(signed portCHAR *) "t3", 500, NULL, tskIDLE_PRIORITY, NULL );
    23ac:	20 e0       	ldi	r18, 0x00	; 0
    23ae:	30 e0       	ldi	r19, 0x00	; 0
    23b0:	44 ef       	ldi	r20, 0xF4	; 244
    23b2:	51 e0       	ldi	r21, 0x01	; 1
    23b4:	6a e2       	ldi	r22, 0x2A	; 42
    23b6:	73 e2       	ldi	r23, 0x23	; 35
    23b8:	8e ec       	ldi	r24, 0xCE	; 206
    23ba:	9f e0       	ldi	r25, 0x0F	; 15
    23bc:	0e 94 64 09 	call	0x12c8	; 0x12c8 <xTaskGenericCreate>
	
	vTaskStartScheduler();
    23c0:	0e 94 6c 0a 	call	0x14d8	; 0x14d8 <vTaskStartScheduler>


	while(1)
	{

	}
    23c4:	ff cf       	rjmp	.-2      	; 0x23c4 <main+0x52>

000023c6 <DigitalPin_Config>:
void DigitalPin_ClearValue(DigitalPin_t *pin){
	pin->_port->OUTCLR = (1<< pin->_pin);
}

void DigitalPin_ToggleValue(DigitalPin_t *pin){
	pin->_port->OUTTGL = (1<< pin->_pin);
    23c6:	0f 93       	push	r16
    23c8:	20 2b       	or	r18, r16
    23ca:	61 11       	cpse	r22, r1
    23cc:	02 c0       	rjmp	.+4      	; 0x23d2 <DigitalPin_Config+0xc>
    23ce:	00 e0       	ldi	r16, 0x00	; 0
    23d0:	01 c0       	rjmp	.+2      	; 0x23d4 <DigitalPin_Config+0xe>
    23d2:	00 e8       	ldi	r16, 0x80	; 128
    23d4:	20 2b       	or	r18, r16
    23d6:	41 11       	cpse	r20, r1
    23d8:	02 c0       	rjmp	.+4      	; 0x23de <DigitalPin_Config+0x18>
    23da:	00 e0       	ldi	r16, 0x00	; 0
    23dc:	01 c0       	rjmp	.+2      	; 0x23e0 <DigitalPin_Config+0x1a>
    23de:	00 e4       	ldi	r16, 0x40	; 64
    23e0:	20 2b       	or	r18, r16
    23e2:	3f b7       	in	r19, 0x3f	; 63
    23e4:	f8 94       	cli
    23e6:	dc 01       	movw	r26, r24
    23e8:	12 96       	adiw	r26, 0x02	; 2
    23ea:	4c 91       	ld	r20, X
    23ec:	12 97       	sbiw	r26, 0x02	; 2
    23ee:	40 93 b0 00 	sts	0x00B0, r20	; 0x8000b0 <__TEXT_REGION_LENGTH__+0x7000b0>
    23f2:	ed 91       	ld	r30, X+
    23f4:	fc 91       	ld	r31, X
    23f6:	20 8b       	std	Z+16, r18	; 0x10
    23f8:	3f bf       	out	0x3f, r19	; 63
    23fa:	0f 91       	pop	r16
    23fc:	08 95       	ret

000023fe <DigitalPin_SetDir>:
    23fe:	66 23       	and	r22, r22
    2400:	81 f0       	breq	.+32     	; 0x2422 <DigitalPin_SetDir+0x24>
    2402:	dc 01       	movw	r26, r24
    2404:	ed 91       	ld	r30, X+
    2406:	fc 91       	ld	r31, X
    2408:	11 97       	sbiw	r26, 0x01	; 1
    240a:	21 e0       	ldi	r18, 0x01	; 1
    240c:	30 e0       	ldi	r19, 0x00	; 0
    240e:	a9 01       	movw	r20, r18
    2410:	12 96       	adiw	r26, 0x02	; 2
    2412:	0c 90       	ld	r0, X
    2414:	02 c0       	rjmp	.+4      	; 0x241a <DigitalPin_SetDir+0x1c>
    2416:	44 0f       	add	r20, r20
    2418:	55 1f       	adc	r21, r21
    241a:	0a 94       	dec	r0
    241c:	e2 f7       	brpl	.-8      	; 0x2416 <DigitalPin_SetDir+0x18>
    241e:	41 83       	std	Z+1, r20	; 0x01
    2420:	08 95       	ret
    2422:	dc 01       	movw	r26, r24
    2424:	ed 91       	ld	r30, X+
    2426:	fc 91       	ld	r31, X
    2428:	11 97       	sbiw	r26, 0x01	; 1
    242a:	21 e0       	ldi	r18, 0x01	; 1
    242c:	30 e0       	ldi	r19, 0x00	; 0
    242e:	a9 01       	movw	r20, r18
    2430:	12 96       	adiw	r26, 0x02	; 2
    2432:	0c 90       	ld	r0, X
    2434:	02 c0       	rjmp	.+4      	; 0x243a <DigitalPin_SetDir+0x3c>
    2436:	44 0f       	add	r20, r20
    2438:	55 1f       	adc	r21, r21
    243a:	0a 94       	dec	r0
    243c:	e2 f7       	brpl	.-8      	; 0x2436 <DigitalPin_SetDir+0x38>
    243e:	42 83       	std	Z+2, r20	; 0x02
    2440:	08 95       	ret

00002442 <DigitalPin_SetValue>:
    2442:	dc 01       	movw	r26, r24
    2444:	ed 91       	ld	r30, X+
    2446:	fc 91       	ld	r31, X
    2448:	11 97       	sbiw	r26, 0x01	; 1
    244a:	21 e0       	ldi	r18, 0x01	; 1
    244c:	30 e0       	ldi	r19, 0x00	; 0
    244e:	a9 01       	movw	r20, r18
    2450:	12 96       	adiw	r26, 0x02	; 2
    2452:	0c 90       	ld	r0, X
    2454:	02 c0       	rjmp	.+4      	; 0x245a <DigitalPin_SetValue+0x18>
    2456:	44 0f       	add	r20, r20
    2458:	55 1f       	adc	r21, r21
    245a:	0a 94       	dec	r0
    245c:	e2 f7       	brpl	.-8      	; 0x2456 <DigitalPin_SetValue+0x14>
    245e:	45 83       	std	Z+5, r20	; 0x05
    2460:	08 95       	ret

00002462 <DigitalPin_ClearValue>:
    2462:	dc 01       	movw	r26, r24
    2464:	ed 91       	ld	r30, X+
    2466:	fc 91       	ld	r31, X
    2468:	11 97       	sbiw	r26, 0x01	; 1
    246a:	21 e0       	ldi	r18, 0x01	; 1
    246c:	30 e0       	ldi	r19, 0x00	; 0
    246e:	a9 01       	movw	r20, r18
    2470:	12 96       	adiw	r26, 0x02	; 2
    2472:	0c 90       	ld	r0, X
    2474:	02 c0       	rjmp	.+4      	; 0x247a <DigitalPin_ClearValue+0x18>
    2476:	44 0f       	add	r20, r20
    2478:	55 1f       	adc	r21, r21
    247a:	0a 94       	dec	r0
    247c:	e2 f7       	brpl	.-8      	; 0x2476 <DigitalPin_ClearValue+0x14>
    247e:	46 83       	std	Z+6, r20	; 0x06
    2480:	08 95       	ret

00002482 <DigitalPin_GetValue>:
}
bool DigitalPin_GetValue(DigitalPin_t *pin){
	bool pinValue;
	if((pin->_port->IN)&(1<<(pin->_pin))) pinValue = 1 ;
    2482:	dc 01       	movw	r26, r24
    2484:	ed 91       	ld	r30, X+
    2486:	fc 91       	ld	r31, X
    2488:	11 97       	sbiw	r26, 0x01	; 1
    248a:	20 85       	ldd	r18, Z+8	; 0x08
    248c:	30 e0       	ldi	r19, 0x00	; 0
    248e:	f9 01       	movw	r30, r18
    2490:	12 96       	adiw	r26, 0x02	; 2
    2492:	0c 90       	ld	r0, X
    2494:	02 c0       	rjmp	.+4      	; 0x249a <DigitalPin_GetValue+0x18>
    2496:	f5 95       	asr	r31
    2498:	e7 95       	ror	r30
    249a:	0a 94       	dec	r0
    249c:	e2 f7       	brpl	.-8      	; 0x2496 <DigitalPin_GetValue+0x14>
    249e:	cf 01       	movw	r24, r30
	else pinValue = 0;
	return pinValue;
    24a0:	81 70       	andi	r24, 0x01	; 1
    24a2:	08 95       	ret

000024a4 <__vector_25>:


}

#if defined(USARTC0)
ISR(USARTC0_RXC_vect){
    24a4:	1f 92       	push	r1
    24a6:	0f 92       	push	r0
    24a8:	0f b6       	in	r0, 0x3f	; 63
    24aa:	0f 92       	push	r0
    24ac:	11 24       	eor	r1, r1

}
    24ae:	0f 90       	pop	r0
    24b0:	0f be       	out	0x3f, r0	; 63
    24b2:	0f 90       	pop	r0
    24b4:	1f 90       	pop	r1
    24b6:	18 95       	reti

000024b8 <__vector_27>:

ISR(USARTC0_TXC_vect){
    24b8:	1f 92       	push	r1
    24ba:	0f 92       	push	r0
    24bc:	0f b6       	in	r0, 0x3f	; 63
    24be:	0f 92       	push	r0
    24c0:	11 24       	eor	r1, r1
	
}
    24c2:	0f 90       	pop	r0
    24c4:	0f be       	out	0x3f, r0	; 63
    24c6:	0f 90       	pop	r0
    24c8:	1f 90       	pop	r1
    24ca:	18 95       	reti

000024cc <__vector_26>:

ISR(USARTC0_DRE_vect){
    24cc:	1f 92       	push	r1
    24ce:	0f 92       	push	r0
    24d0:	0f b6       	in	r0, 0x3f	; 63
    24d2:	0f 92       	push	r0
    24d4:	11 24       	eor	r1, r1
	
}
    24d6:	0f 90       	pop	r0
    24d8:	0f be       	out	0x3f, r0	; 63
    24da:	0f 90       	pop	r0
    24dc:	1f 90       	pop	r1
    24de:	18 95       	reti

000024e0 <__vector_28>:
#endif


#if defined(USARTC1)
ISR(USARTC1_RXC_vect){
    24e0:	1f 92       	push	r1
    24e2:	0f 92       	push	r0
    24e4:	0f b6       	in	r0, 0x3f	; 63
    24e6:	0f 92       	push	r0
    24e8:	11 24       	eor	r1, r1
	
}
    24ea:	0f 90       	pop	r0
    24ec:	0f be       	out	0x3f, r0	; 63
    24ee:	0f 90       	pop	r0
    24f0:	1f 90       	pop	r1
    24f2:	18 95       	reti

000024f4 <__vector_30>:

ISR(USARTC1_TXC_vect){
    24f4:	1f 92       	push	r1
    24f6:	0f 92       	push	r0
    24f8:	0f b6       	in	r0, 0x3f	; 63
    24fa:	0f 92       	push	r0
    24fc:	11 24       	eor	r1, r1
	
}
    24fe:	0f 90       	pop	r0
    2500:	0f be       	out	0x3f, r0	; 63
    2502:	0f 90       	pop	r0
    2504:	1f 90       	pop	r1
    2506:	18 95       	reti

00002508 <__vector_29>:

ISR(USARTC1_DRE_vect){
    2508:	1f 92       	push	r1
    250a:	0f 92       	push	r0
    250c:	0f b6       	in	r0, 0x3f	; 63
    250e:	0f 92       	push	r0
    2510:	11 24       	eor	r1, r1
	
}
    2512:	0f 90       	pop	r0
    2514:	0f be       	out	0x3f, r0	; 63
    2516:	0f 90       	pop	r0
    2518:	1f 90       	pop	r1
    251a:	18 95       	reti

0000251c <__vector_88>:
#endif


#if defined(USARTD0)
ISR(USARTD0_RXC_vect){
    251c:	1f 92       	push	r1
    251e:	0f 92       	push	r0
    2520:	0f b6       	in	r0, 0x3f	; 63
    2522:	0f 92       	push	r0
    2524:	11 24       	eor	r1, r1
	
}
    2526:	0f 90       	pop	r0
    2528:	0f be       	out	0x3f, r0	; 63
    252a:	0f 90       	pop	r0
    252c:	1f 90       	pop	r1
    252e:	18 95       	reti

00002530 <__vector_90>:

ISR(USARTD0_TXC_vect){
    2530:	1f 92       	push	r1
    2532:	0f 92       	push	r0
    2534:	0f b6       	in	r0, 0x3f	; 63
    2536:	0f 92       	push	r0
    2538:	11 24       	eor	r1, r1
	
}
    253a:	0f 90       	pop	r0
    253c:	0f be       	out	0x3f, r0	; 63
    253e:	0f 90       	pop	r0
    2540:	1f 90       	pop	r1
    2542:	18 95       	reti

00002544 <__vector_89>:

ISR(USARTD0_DRE_vect){
    2544:	1f 92       	push	r1
    2546:	0f 92       	push	r0
    2548:	0f b6       	in	r0, 0x3f	; 63
    254a:	0f 92       	push	r0
    254c:	11 24       	eor	r1, r1
	
}
    254e:	0f 90       	pop	r0
    2550:	0f be       	out	0x3f, r0	; 63
    2552:	0f 90       	pop	r0
    2554:	1f 90       	pop	r1
    2556:	18 95       	reti

00002558 <__vector_58>:
	
}
#endif

#if defined(USARTE0)
ISR(USARTE0_RXC_vect){
    2558:	1f 92       	push	r1
    255a:	0f 92       	push	r0
    255c:	0f b6       	in	r0, 0x3f	; 63
    255e:	0f 92       	push	r0
    2560:	11 24       	eor	r1, r1
	
}
    2562:	0f 90       	pop	r0
    2564:	0f be       	out	0x3f, r0	; 63
    2566:	0f 90       	pop	r0
    2568:	1f 90       	pop	r1
    256a:	18 95       	reti

0000256c <__vector_60>:

ISR(USARTE0_TXC_vect){
    256c:	1f 92       	push	r1
    256e:	0f 92       	push	r0
    2570:	0f b6       	in	r0, 0x3f	; 63
    2572:	0f 92       	push	r0
    2574:	11 24       	eor	r1, r1
	
}
    2576:	0f 90       	pop	r0
    2578:	0f be       	out	0x3f, r0	; 63
    257a:	0f 90       	pop	r0
    257c:	1f 90       	pop	r1
    257e:	18 95       	reti

00002580 <__vector_59>:

ISR(USARTE0_DRE_vect){
    2580:	1f 92       	push	r1
    2582:	0f 92       	push	r0
    2584:	0f b6       	in	r0, 0x3f	; 63
    2586:	0f 92       	push	r0
    2588:	11 24       	eor	r1, r1
	
}
    258a:	0f 90       	pop	r0
    258c:	0f be       	out	0x3f, r0	; 63
    258e:	0f 90       	pop	r0
    2590:	1f 90       	pop	r1
    2592:	18 95       	reti

00002594 <CCPWrite>:
    2594:	0f 93       	push	r16
    2596:	cf 93       	push	r28
    2598:	df 93       	push	r29
    259a:	1f 92       	push	r1
    259c:	cd b7       	in	r28, 0x3d	; 61
    259e:	de b7       	in	r29, 0x3e	; 62
    25a0:	2f b7       	in	r18, 0x3f	; 63
    25a2:	29 83       	std	Y+1, r18	; 0x01
    25a4:	f8 94       	cli
    25a6:	1b be       	out	0x3b, r1	; 59
    25a8:	fc 01       	movw	r30, r24
    25aa:	08 ed       	ldi	r16, 0xD8	; 216
    25ac:	04 bf       	out	0x34, r16	; 52
    25ae:	60 83       	st	Z, r22
    25b0:	89 81       	ldd	r24, Y+1	; 0x01
    25b2:	8f bf       	out	0x3f, r24	; 63
    25b4:	0f 90       	pop	r0
    25b6:	df 91       	pop	r29
    25b8:	cf 91       	pop	r28
    25ba:	0f 91       	pop	r16
    25bc:	08 95       	ret

000025be <CLKSYS_Disable>:
    25be:	e0 e5       	ldi	r30, 0x50	; 80
    25c0:	f0 e0       	ldi	r31, 0x00	; 0
    25c2:	90 81       	ld	r25, Z
    25c4:	28 2f       	mov	r18, r24
    25c6:	20 95       	com	r18
    25c8:	92 23       	and	r25, r18
    25ca:	90 83       	st	Z, r25
    25cc:	90 81       	ld	r25, Z
    25ce:	89 23       	and	r24, r25
    25d0:	08 95       	ret

000025d2 <CLKSYS_Main_ClockSource_Select>:
    25d2:	0f 93       	push	r16
    25d4:	1f 93       	push	r17
    25d6:	cf 93       	push	r28
    25d8:	c8 2f       	mov	r28, r24
    25da:	00 e4       	ldi	r16, 0x40	; 64
    25dc:	10 e0       	ldi	r17, 0x00	; 0
    25de:	f8 01       	movw	r30, r16
    25e0:	60 81       	ld	r22, Z
    25e2:	68 7f       	andi	r22, 0xF8	; 248
    25e4:	68 2b       	or	r22, r24
    25e6:	80 e4       	ldi	r24, 0x40	; 64
    25e8:	90 e0       	ldi	r25, 0x00	; 0
    25ea:	0e 94 ca 12 	call	0x2594	; 0x2594 <CCPWrite>
    25ee:	f8 01       	movw	r30, r16
    25f0:	80 81       	ld	r24, Z
    25f2:	8c 23       	and	r24, r28
    25f4:	cf 91       	pop	r28
    25f6:	1f 91       	pop	r17
    25f8:	0f 91       	pop	r16
    25fa:	08 95       	ret

000025fc <TC0_ConfigClockSource>:
    25fc:	fc 01       	movw	r30, r24
    25fe:	90 81       	ld	r25, Z
    2600:	90 7f       	andi	r25, 0xF0	; 240
    2602:	69 2b       	or	r22, r25
    2604:	60 83       	st	Z, r22
    2606:	08 95       	ret

00002608 <TC0_SetOverflowIntLevel>:
    2608:	fc 01       	movw	r30, r24
    260a:	96 81       	ldd	r25, Z+6	; 0x06
    260c:	9c 7f       	andi	r25, 0xFC	; 252
    260e:	69 2b       	or	r22, r25
    2610:	66 83       	std	Z+6, r22	; 0x06
    2612:	08 95       	ret

00002614 <vfprintf>:
    2614:	2f 92       	push	r2
    2616:	3f 92       	push	r3
    2618:	4f 92       	push	r4
    261a:	5f 92       	push	r5
    261c:	6f 92       	push	r6
    261e:	7f 92       	push	r7
    2620:	8f 92       	push	r8
    2622:	9f 92       	push	r9
    2624:	af 92       	push	r10
    2626:	bf 92       	push	r11
    2628:	cf 92       	push	r12
    262a:	df 92       	push	r13
    262c:	ef 92       	push	r14
    262e:	ff 92       	push	r15
    2630:	0f 93       	push	r16
    2632:	1f 93       	push	r17
    2634:	cf 93       	push	r28
    2636:	df 93       	push	r29
    2638:	cd b7       	in	r28, 0x3d	; 61
    263a:	de b7       	in	r29, 0x3e	; 62
    263c:	63 97       	sbiw	r28, 0x13	; 19
    263e:	cd bf       	out	0x3d, r28	; 61
    2640:	de bf       	out	0x3e, r29	; 62
    2642:	6c 01       	movw	r12, r24
    2644:	4b 01       	movw	r8, r22
    2646:	2a 01       	movw	r4, r20
    2648:	fc 01       	movw	r30, r24
    264a:	16 82       	std	Z+6, r1	; 0x06
    264c:	17 82       	std	Z+7, r1	; 0x07
    264e:	83 81       	ldd	r24, Z+3	; 0x03
    2650:	81 ff       	sbrs	r24, 1
    2652:	43 c3       	rjmp	.+1670   	; 0x2cda <vfprintf+0x6c6>
    2654:	ae 01       	movw	r20, r28
    2656:	4f 5f       	subi	r20, 0xFF	; 255
    2658:	5f 4f       	sbci	r21, 0xFF	; 255
    265a:	3a 01       	movw	r6, r20
    265c:	f6 01       	movw	r30, r12
    265e:	93 81       	ldd	r25, Z+3	; 0x03
    2660:	f4 01       	movw	r30, r8
    2662:	93 fd       	sbrc	r25, 3
    2664:	85 91       	lpm	r24, Z+
    2666:	93 ff       	sbrs	r25, 3
    2668:	81 91       	ld	r24, Z+
    266a:	4f 01       	movw	r8, r30
    266c:	88 23       	and	r24, r24
    266e:	09 f4       	brne	.+2      	; 0x2672 <vfprintf+0x5e>
    2670:	30 c3       	rjmp	.+1632   	; 0x2cd2 <vfprintf+0x6be>
    2672:	85 32       	cpi	r24, 0x25	; 37
    2674:	39 f4       	brne	.+14     	; 0x2684 <vfprintf+0x70>
    2676:	93 fd       	sbrc	r25, 3
    2678:	85 91       	lpm	r24, Z+
    267a:	93 ff       	sbrs	r25, 3
    267c:	81 91       	ld	r24, Z+
    267e:	4f 01       	movw	r8, r30
    2680:	85 32       	cpi	r24, 0x25	; 37
    2682:	39 f4       	brne	.+14     	; 0x2692 <vfprintf+0x7e>
    2684:	b6 01       	movw	r22, r12
    2686:	90 e0       	ldi	r25, 0x00	; 0
    2688:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    268c:	52 01       	movw	r10, r4
    268e:	25 01       	movw	r4, r10
    2690:	e5 cf       	rjmp	.-54     	; 0x265c <vfprintf+0x48>
    2692:	10 e0       	ldi	r17, 0x00	; 0
    2694:	f1 2c       	mov	r15, r1
    2696:	20 e0       	ldi	r18, 0x00	; 0
    2698:	20 32       	cpi	r18, 0x20	; 32
    269a:	a0 f4       	brcc	.+40     	; 0x26c4 <vfprintf+0xb0>
    269c:	8b 32       	cpi	r24, 0x2B	; 43
    269e:	69 f0       	breq	.+26     	; 0x26ba <vfprintf+0xa6>
    26a0:	30 f4       	brcc	.+12     	; 0x26ae <vfprintf+0x9a>
    26a2:	80 32       	cpi	r24, 0x20	; 32
    26a4:	59 f0       	breq	.+22     	; 0x26bc <vfprintf+0xa8>
    26a6:	83 32       	cpi	r24, 0x23	; 35
    26a8:	69 f4       	brne	.+26     	; 0x26c4 <vfprintf+0xb0>
    26aa:	20 61       	ori	r18, 0x10	; 16
    26ac:	2c c0       	rjmp	.+88     	; 0x2706 <vfprintf+0xf2>
    26ae:	8d 32       	cpi	r24, 0x2D	; 45
    26b0:	39 f0       	breq	.+14     	; 0x26c0 <vfprintf+0xac>
    26b2:	80 33       	cpi	r24, 0x30	; 48
    26b4:	39 f4       	brne	.+14     	; 0x26c4 <vfprintf+0xb0>
    26b6:	21 60       	ori	r18, 0x01	; 1
    26b8:	26 c0       	rjmp	.+76     	; 0x2706 <vfprintf+0xf2>
    26ba:	22 60       	ori	r18, 0x02	; 2
    26bc:	24 60       	ori	r18, 0x04	; 4
    26be:	23 c0       	rjmp	.+70     	; 0x2706 <vfprintf+0xf2>
    26c0:	28 60       	ori	r18, 0x08	; 8
    26c2:	21 c0       	rjmp	.+66     	; 0x2706 <vfprintf+0xf2>
    26c4:	27 fd       	sbrc	r18, 7
    26c6:	27 c0       	rjmp	.+78     	; 0x2716 <vfprintf+0x102>
    26c8:	30 ed       	ldi	r19, 0xD0	; 208
    26ca:	38 0f       	add	r19, r24
    26cc:	3a 30       	cpi	r19, 0x0A	; 10
    26ce:	78 f4       	brcc	.+30     	; 0x26ee <vfprintf+0xda>
    26d0:	26 ff       	sbrs	r18, 6
    26d2:	06 c0       	rjmp	.+12     	; 0x26e0 <vfprintf+0xcc>
    26d4:	fa e0       	ldi	r31, 0x0A	; 10
    26d6:	1f 9f       	mul	r17, r31
    26d8:	30 0d       	add	r19, r0
    26da:	11 24       	eor	r1, r1
    26dc:	13 2f       	mov	r17, r19
    26de:	13 c0       	rjmp	.+38     	; 0x2706 <vfprintf+0xf2>
    26e0:	4a e0       	ldi	r20, 0x0A	; 10
    26e2:	f4 9e       	mul	r15, r20
    26e4:	30 0d       	add	r19, r0
    26e6:	11 24       	eor	r1, r1
    26e8:	f3 2e       	mov	r15, r19
    26ea:	20 62       	ori	r18, 0x20	; 32
    26ec:	0c c0       	rjmp	.+24     	; 0x2706 <vfprintf+0xf2>
    26ee:	8e 32       	cpi	r24, 0x2E	; 46
    26f0:	21 f4       	brne	.+8      	; 0x26fa <vfprintf+0xe6>
    26f2:	26 fd       	sbrc	r18, 6
    26f4:	ee c2       	rjmp	.+1500   	; 0x2cd2 <vfprintf+0x6be>
    26f6:	20 64       	ori	r18, 0x40	; 64
    26f8:	06 c0       	rjmp	.+12     	; 0x2706 <vfprintf+0xf2>
    26fa:	8c 36       	cpi	r24, 0x6C	; 108
    26fc:	11 f4       	brne	.+4      	; 0x2702 <vfprintf+0xee>
    26fe:	20 68       	ori	r18, 0x80	; 128
    2700:	02 c0       	rjmp	.+4      	; 0x2706 <vfprintf+0xf2>
    2702:	88 36       	cpi	r24, 0x68	; 104
    2704:	41 f4       	brne	.+16     	; 0x2716 <vfprintf+0x102>
    2706:	f4 01       	movw	r30, r8
    2708:	93 fd       	sbrc	r25, 3
    270a:	85 91       	lpm	r24, Z+
    270c:	93 ff       	sbrs	r25, 3
    270e:	81 91       	ld	r24, Z+
    2710:	4f 01       	movw	r8, r30
    2712:	81 11       	cpse	r24, r1
    2714:	c1 cf       	rjmp	.-126    	; 0x2698 <vfprintf+0x84>
    2716:	9b eb       	ldi	r25, 0xBB	; 187
    2718:	98 0f       	add	r25, r24
    271a:	93 30       	cpi	r25, 0x03	; 3
    271c:	18 f4       	brcc	.+6      	; 0x2724 <vfprintf+0x110>
    271e:	20 61       	ori	r18, 0x10	; 16
    2720:	80 5e       	subi	r24, 0xE0	; 224
    2722:	06 c0       	rjmp	.+12     	; 0x2730 <vfprintf+0x11c>
    2724:	9b e9       	ldi	r25, 0x9B	; 155
    2726:	98 0f       	add	r25, r24
    2728:	93 30       	cpi	r25, 0x03	; 3
    272a:	08 f0       	brcs	.+2      	; 0x272e <vfprintf+0x11a>
    272c:	71 c1       	rjmp	.+738    	; 0x2a10 <vfprintf+0x3fc>
    272e:	2f 7e       	andi	r18, 0xEF	; 239
    2730:	26 ff       	sbrs	r18, 6
    2732:	16 e0       	ldi	r17, 0x06	; 6
    2734:	2f 73       	andi	r18, 0x3F	; 63
    2736:	32 2e       	mov	r3, r18
    2738:	85 36       	cpi	r24, 0x65	; 101
    273a:	19 f4       	brne	.+6      	; 0x2742 <vfprintf+0x12e>
    273c:	20 64       	ori	r18, 0x40	; 64
    273e:	32 2e       	mov	r3, r18
    2740:	08 c0       	rjmp	.+16     	; 0x2752 <vfprintf+0x13e>
    2742:	86 36       	cpi	r24, 0x66	; 102
    2744:	21 f4       	brne	.+8      	; 0x274e <vfprintf+0x13a>
    2746:	f2 2f       	mov	r31, r18
    2748:	f0 68       	ori	r31, 0x80	; 128
    274a:	3f 2e       	mov	r3, r31
    274c:	02 c0       	rjmp	.+4      	; 0x2752 <vfprintf+0x13e>
    274e:	11 11       	cpse	r17, r1
    2750:	11 50       	subi	r17, 0x01	; 1
    2752:	37 fe       	sbrs	r3, 7
    2754:	07 c0       	rjmp	.+14     	; 0x2764 <vfprintf+0x150>
    2756:	1c 33       	cpi	r17, 0x3C	; 60
    2758:	50 f4       	brcc	.+20     	; 0x276e <vfprintf+0x15a>
    275a:	ee 24       	eor	r14, r14
    275c:	e3 94       	inc	r14
    275e:	e1 0e       	add	r14, r17
    2760:	27 e0       	ldi	r18, 0x07	; 7
    2762:	0b c0       	rjmp	.+22     	; 0x277a <vfprintf+0x166>
    2764:	18 30       	cpi	r17, 0x08	; 8
    2766:	38 f0       	brcs	.+14     	; 0x2776 <vfprintf+0x162>
    2768:	27 e0       	ldi	r18, 0x07	; 7
    276a:	17 e0       	ldi	r17, 0x07	; 7
    276c:	05 c0       	rjmp	.+10     	; 0x2778 <vfprintf+0x164>
    276e:	27 e0       	ldi	r18, 0x07	; 7
    2770:	4c e3       	ldi	r20, 0x3C	; 60
    2772:	e4 2e       	mov	r14, r20
    2774:	02 c0       	rjmp	.+4      	; 0x277a <vfprintf+0x166>
    2776:	21 2f       	mov	r18, r17
    2778:	e1 2c       	mov	r14, r1
    277a:	52 01       	movw	r10, r4
    277c:	44 e0       	ldi	r20, 0x04	; 4
    277e:	a4 0e       	add	r10, r20
    2780:	b1 1c       	adc	r11, r1
    2782:	f2 01       	movw	r30, r4
    2784:	60 81       	ld	r22, Z
    2786:	71 81       	ldd	r23, Z+1	; 0x01
    2788:	82 81       	ldd	r24, Z+2	; 0x02
    278a:	93 81       	ldd	r25, Z+3	; 0x03
    278c:	0e 2d       	mov	r16, r14
    278e:	a3 01       	movw	r20, r6
    2790:	0e 94 e9 16 	call	0x2dd2	; 0x2dd2 <__ftoa_engine>
    2794:	2c 01       	movw	r4, r24
    2796:	09 81       	ldd	r16, Y+1	; 0x01
    2798:	00 ff       	sbrs	r16, 0
    279a:	02 c0       	rjmp	.+4      	; 0x27a0 <vfprintf+0x18c>
    279c:	03 ff       	sbrs	r16, 3
    279e:	07 c0       	rjmp	.+14     	; 0x27ae <vfprintf+0x19a>
    27a0:	31 fc       	sbrc	r3, 1
    27a2:	08 c0       	rjmp	.+16     	; 0x27b4 <vfprintf+0x1a0>
    27a4:	32 fe       	sbrs	r3, 2
    27a6:	09 c0       	rjmp	.+18     	; 0x27ba <vfprintf+0x1a6>
    27a8:	30 e2       	ldi	r19, 0x20	; 32
    27aa:	23 2e       	mov	r2, r19
    27ac:	07 c0       	rjmp	.+14     	; 0x27bc <vfprintf+0x1a8>
    27ae:	2d e2       	ldi	r18, 0x2D	; 45
    27b0:	22 2e       	mov	r2, r18
    27b2:	04 c0       	rjmp	.+8      	; 0x27bc <vfprintf+0x1a8>
    27b4:	9b e2       	ldi	r25, 0x2B	; 43
    27b6:	29 2e       	mov	r2, r25
    27b8:	01 c0       	rjmp	.+2      	; 0x27bc <vfprintf+0x1a8>
    27ba:	21 2c       	mov	r2, r1
    27bc:	80 2f       	mov	r24, r16
    27be:	8c 70       	andi	r24, 0x0C	; 12
    27c0:	19 f0       	breq	.+6      	; 0x27c8 <vfprintf+0x1b4>
    27c2:	21 10       	cpse	r2, r1
    27c4:	68 c2       	rjmp	.+1232   	; 0x2c96 <vfprintf+0x682>
    27c6:	a8 c2       	rjmp	.+1360   	; 0x2d18 <vfprintf+0x704>
    27c8:	37 fe       	sbrs	r3, 7
    27ca:	0f c0       	rjmp	.+30     	; 0x27ea <vfprintf+0x1d6>
    27cc:	e4 0c       	add	r14, r4
    27ce:	04 ff       	sbrs	r16, 4
    27d0:	04 c0       	rjmp	.+8      	; 0x27da <vfprintf+0x1c6>
    27d2:	8a 81       	ldd	r24, Y+2	; 0x02
    27d4:	81 33       	cpi	r24, 0x31	; 49
    27d6:	09 f4       	brne	.+2      	; 0x27da <vfprintf+0x1c6>
    27d8:	ea 94       	dec	r14
    27da:	1e 14       	cp	r1, r14
    27dc:	74 f5       	brge	.+92     	; 0x283a <vfprintf+0x226>
    27de:	f8 e0       	ldi	r31, 0x08	; 8
    27e0:	fe 15       	cp	r31, r14
    27e2:	78 f5       	brcc	.+94     	; 0x2842 <vfprintf+0x22e>
    27e4:	88 e0       	ldi	r24, 0x08	; 8
    27e6:	e8 2e       	mov	r14, r24
    27e8:	2c c0       	rjmp	.+88     	; 0x2842 <vfprintf+0x22e>
    27ea:	36 fc       	sbrc	r3, 6
    27ec:	2a c0       	rjmp	.+84     	; 0x2842 <vfprintf+0x22e>
    27ee:	81 2f       	mov	r24, r17
    27f0:	90 e0       	ldi	r25, 0x00	; 0
    27f2:	84 15       	cp	r24, r4
    27f4:	95 05       	cpc	r25, r5
    27f6:	9c f0       	brlt	.+38     	; 0x281e <vfprintf+0x20a>
    27f8:	2c ef       	ldi	r18, 0xFC	; 252
    27fa:	42 16       	cp	r4, r18
    27fc:	2f ef       	ldi	r18, 0xFF	; 255
    27fe:	52 06       	cpc	r5, r18
    2800:	74 f0       	brlt	.+28     	; 0x281e <vfprintf+0x20a>
    2802:	43 2d       	mov	r20, r3
    2804:	40 68       	ori	r20, 0x80	; 128
    2806:	34 2e       	mov	r3, r20
    2808:	0a c0       	rjmp	.+20     	; 0x281e <vfprintf+0x20a>
    280a:	e2 e0       	ldi	r30, 0x02	; 2
    280c:	f0 e0       	ldi	r31, 0x00	; 0
    280e:	ec 0f       	add	r30, r28
    2810:	fd 1f       	adc	r31, r29
    2812:	e1 0f       	add	r30, r17
    2814:	f1 1d       	adc	r31, r1
    2816:	80 81       	ld	r24, Z
    2818:	80 33       	cpi	r24, 0x30	; 48
    281a:	19 f4       	brne	.+6      	; 0x2822 <vfprintf+0x20e>
    281c:	11 50       	subi	r17, 0x01	; 1
    281e:	11 11       	cpse	r17, r1
    2820:	f4 cf       	rjmp	.-24     	; 0x280a <vfprintf+0x1f6>
    2822:	37 fe       	sbrs	r3, 7
    2824:	0e c0       	rjmp	.+28     	; 0x2842 <vfprintf+0x22e>
    2826:	ee 24       	eor	r14, r14
    2828:	e3 94       	inc	r14
    282a:	e1 0e       	add	r14, r17
    282c:	81 2f       	mov	r24, r17
    282e:	90 e0       	ldi	r25, 0x00	; 0
    2830:	48 16       	cp	r4, r24
    2832:	59 06       	cpc	r5, r25
    2834:	2c f4       	brge	.+10     	; 0x2840 <vfprintf+0x22c>
    2836:	14 19       	sub	r17, r4
    2838:	04 c0       	rjmp	.+8      	; 0x2842 <vfprintf+0x22e>
    283a:	ee 24       	eor	r14, r14
    283c:	e3 94       	inc	r14
    283e:	01 c0       	rjmp	.+2      	; 0x2842 <vfprintf+0x22e>
    2840:	10 e0       	ldi	r17, 0x00	; 0
    2842:	37 fe       	sbrs	r3, 7
    2844:	06 c0       	rjmp	.+12     	; 0x2852 <vfprintf+0x23e>
    2846:	14 14       	cp	r1, r4
    2848:	15 04       	cpc	r1, r5
    284a:	34 f4       	brge	.+12     	; 0x2858 <vfprintf+0x244>
    284c:	c2 01       	movw	r24, r4
    284e:	01 96       	adiw	r24, 0x01	; 1
    2850:	05 c0       	rjmp	.+10     	; 0x285c <vfprintf+0x248>
    2852:	85 e0       	ldi	r24, 0x05	; 5
    2854:	90 e0       	ldi	r25, 0x00	; 0
    2856:	02 c0       	rjmp	.+4      	; 0x285c <vfprintf+0x248>
    2858:	81 e0       	ldi	r24, 0x01	; 1
    285a:	90 e0       	ldi	r25, 0x00	; 0
    285c:	21 10       	cpse	r2, r1
    285e:	01 96       	adiw	r24, 0x01	; 1
    2860:	11 23       	and	r17, r17
    2862:	31 f0       	breq	.+12     	; 0x2870 <vfprintf+0x25c>
    2864:	21 2f       	mov	r18, r17
    2866:	30 e0       	ldi	r19, 0x00	; 0
    2868:	2f 5f       	subi	r18, 0xFF	; 255
    286a:	3f 4f       	sbci	r19, 0xFF	; 255
    286c:	82 0f       	add	r24, r18
    286e:	93 1f       	adc	r25, r19
    2870:	2f 2d       	mov	r18, r15
    2872:	30 e0       	ldi	r19, 0x00	; 0
    2874:	82 17       	cp	r24, r18
    2876:	93 07       	cpc	r25, r19
    2878:	14 f4       	brge	.+4      	; 0x287e <vfprintf+0x26a>
    287a:	f8 1a       	sub	r15, r24
    287c:	01 c0       	rjmp	.+2      	; 0x2880 <vfprintf+0x26c>
    287e:	f1 2c       	mov	r15, r1
    2880:	83 2d       	mov	r24, r3
    2882:	89 70       	andi	r24, 0x09	; 9
    2884:	49 f4       	brne	.+18     	; 0x2898 <vfprintf+0x284>
    2886:	ff 20       	and	r15, r15
    2888:	39 f0       	breq	.+14     	; 0x2898 <vfprintf+0x284>
    288a:	b6 01       	movw	r22, r12
    288c:	80 e2       	ldi	r24, 0x20	; 32
    288e:	90 e0       	ldi	r25, 0x00	; 0
    2890:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2894:	fa 94       	dec	r15
    2896:	f7 cf       	rjmp	.-18     	; 0x2886 <vfprintf+0x272>
    2898:	22 20       	and	r2, r2
    289a:	29 f0       	breq	.+10     	; 0x28a6 <vfprintf+0x292>
    289c:	b6 01       	movw	r22, r12
    289e:	82 2d       	mov	r24, r2
    28a0:	90 e0       	ldi	r25, 0x00	; 0
    28a2:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    28a6:	33 fc       	sbrc	r3, 3
    28a8:	09 c0       	rjmp	.+18     	; 0x28bc <vfprintf+0x2a8>
    28aa:	ff 20       	and	r15, r15
    28ac:	39 f0       	breq	.+14     	; 0x28bc <vfprintf+0x2a8>
    28ae:	b6 01       	movw	r22, r12
    28b0:	80 e3       	ldi	r24, 0x30	; 48
    28b2:	90 e0       	ldi	r25, 0x00	; 0
    28b4:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    28b8:	fa 94       	dec	r15
    28ba:	f7 cf       	rjmp	.-18     	; 0x28aa <vfprintf+0x296>
    28bc:	37 fe       	sbrs	r3, 7
    28be:	5a c0       	rjmp	.+180    	; 0x2974 <vfprintf+0x360>
    28c0:	94 2d       	mov	r25, r4
    28c2:	85 2d       	mov	r24, r5
    28c4:	57 fe       	sbrs	r5, 7
    28c6:	02 c0       	rjmp	.+4      	; 0x28cc <vfprintf+0x2b8>
    28c8:	90 e0       	ldi	r25, 0x00	; 0
    28ca:	80 e0       	ldi	r24, 0x00	; 0
    28cc:	29 2e       	mov	r2, r25
    28ce:	38 2e       	mov	r3, r24
    28d0:	20 e0       	ldi	r18, 0x00	; 0
    28d2:	30 e0       	ldi	r19, 0x00	; 0
    28d4:	a2 01       	movw	r20, r4
    28d6:	4e 19       	sub	r20, r14
    28d8:	51 09       	sbc	r21, r1
    28da:	4c 87       	std	Y+12, r20	; 0x0c
    28dc:	5d 87       	std	Y+13, r21	; 0x0d
    28de:	a2 01       	movw	r20, r4
    28e0:	42 19       	sub	r20, r2
    28e2:	53 09       	sbc	r21, r3
    28e4:	4e 87       	std	Y+14, r20	; 0x0e
    28e6:	5f 87       	std	Y+15, r21	; 0x0f
    28e8:	61 2f       	mov	r22, r17
    28ea:	70 e0       	ldi	r23, 0x00	; 0
    28ec:	44 27       	eor	r20, r20
    28ee:	55 27       	eor	r21, r21
    28f0:	46 1b       	sub	r20, r22
    28f2:	57 0b       	sbc	r21, r23
    28f4:	48 8b       	std	Y+16, r20	; 0x10
    28f6:	59 8b       	std	Y+17, r21	; 0x11
    28f8:	5f ef       	ldi	r21, 0xFF	; 255
    28fa:	25 16       	cp	r2, r21
    28fc:	35 06       	cpc	r3, r21
    28fe:	49 f4       	brne	.+18     	; 0x2912 <vfprintf+0x2fe>
    2900:	b6 01       	movw	r22, r12
    2902:	8e e2       	ldi	r24, 0x2E	; 46
    2904:	90 e0       	ldi	r25, 0x00	; 0
    2906:	2a 8b       	std	Y+18, r18	; 0x12
    2908:	3b 8b       	std	Y+19, r19	; 0x13
    290a:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    290e:	3b 89       	ldd	r19, Y+19	; 0x13
    2910:	2a 89       	ldd	r18, Y+18	; 0x12
    2912:	42 14       	cp	r4, r2
    2914:	53 04       	cpc	r5, r3
    2916:	6c f0       	brlt	.+26     	; 0x2932 <vfprintf+0x31e>
    2918:	4c 85       	ldd	r20, Y+12	; 0x0c
    291a:	5d 85       	ldd	r21, Y+13	; 0x0d
    291c:	42 15       	cp	r20, r2
    291e:	53 05       	cpc	r21, r3
    2920:	44 f4       	brge	.+16     	; 0x2932 <vfprintf+0x31e>
    2922:	ee 85       	ldd	r30, Y+14	; 0x0e
    2924:	ff 85       	ldd	r31, Y+15	; 0x0f
    2926:	e2 0f       	add	r30, r18
    2928:	f3 1f       	adc	r31, r19
    292a:	e6 0d       	add	r30, r6
    292c:	f7 1d       	adc	r31, r7
    292e:	81 81       	ldd	r24, Z+1	; 0x01
    2930:	01 c0       	rjmp	.+2      	; 0x2934 <vfprintf+0x320>
    2932:	80 e3       	ldi	r24, 0x30	; 48
    2934:	51 e0       	ldi	r21, 0x01	; 1
    2936:	25 1a       	sub	r2, r21
    2938:	31 08       	sbc	r3, r1
    293a:	2f 5f       	subi	r18, 0xFF	; 255
    293c:	3f 4f       	sbci	r19, 0xFF	; 255
    293e:	48 89       	ldd	r20, Y+16	; 0x10
    2940:	59 89       	ldd	r21, Y+17	; 0x11
    2942:	24 16       	cp	r2, r20
    2944:	35 06       	cpc	r3, r21
    2946:	4c f0       	brlt	.+18     	; 0x295a <vfprintf+0x346>
    2948:	b6 01       	movw	r22, r12
    294a:	90 e0       	ldi	r25, 0x00	; 0
    294c:	2a 8b       	std	Y+18, r18	; 0x12
    294e:	3b 8b       	std	Y+19, r19	; 0x13
    2950:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2954:	2a 89       	ldd	r18, Y+18	; 0x12
    2956:	3b 89       	ldd	r19, Y+19	; 0x13
    2958:	cf cf       	rjmp	.-98     	; 0x28f8 <vfprintf+0x2e4>
    295a:	24 14       	cp	r2, r4
    295c:	35 04       	cpc	r3, r5
    295e:	39 f4       	brne	.+14     	; 0x296e <vfprintf+0x35a>
    2960:	9a 81       	ldd	r25, Y+2	; 0x02
    2962:	96 33       	cpi	r25, 0x36	; 54
    2964:	18 f4       	brcc	.+6      	; 0x296c <vfprintf+0x358>
    2966:	95 33       	cpi	r25, 0x35	; 53
    2968:	11 f4       	brne	.+4      	; 0x296e <vfprintf+0x35a>
    296a:	04 ff       	sbrs	r16, 4
    296c:	81 e3       	ldi	r24, 0x31	; 49
    296e:	b6 01       	movw	r22, r12
    2970:	90 e0       	ldi	r25, 0x00	; 0
    2972:	4b c0       	rjmp	.+150    	; 0x2a0a <vfprintf+0x3f6>
    2974:	8a 81       	ldd	r24, Y+2	; 0x02
    2976:	81 33       	cpi	r24, 0x31	; 49
    2978:	09 f0       	breq	.+2      	; 0x297c <vfprintf+0x368>
    297a:	0f 7e       	andi	r16, 0xEF	; 239
    297c:	b6 01       	movw	r22, r12
    297e:	90 e0       	ldi	r25, 0x00	; 0
    2980:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2984:	11 11       	cpse	r17, r1
    2986:	05 c0       	rjmp	.+10     	; 0x2992 <vfprintf+0x37e>
    2988:	34 fc       	sbrc	r3, 4
    298a:	18 c0       	rjmp	.+48     	; 0x29bc <vfprintf+0x3a8>
    298c:	85 e6       	ldi	r24, 0x65	; 101
    298e:	90 e0       	ldi	r25, 0x00	; 0
    2990:	17 c0       	rjmp	.+46     	; 0x29c0 <vfprintf+0x3ac>
    2992:	b6 01       	movw	r22, r12
    2994:	8e e2       	ldi	r24, 0x2E	; 46
    2996:	90 e0       	ldi	r25, 0x00	; 0
    2998:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    299c:	82 e0       	ldi	r24, 0x02	; 2
    299e:	ee 24       	eor	r14, r14
    29a0:	e3 94       	inc	r14
    29a2:	e8 0e       	add	r14, r24
    29a4:	f3 01       	movw	r30, r6
    29a6:	e8 0f       	add	r30, r24
    29a8:	f1 1d       	adc	r31, r1
    29aa:	80 81       	ld	r24, Z
    29ac:	b6 01       	movw	r22, r12
    29ae:	90 e0       	ldi	r25, 0x00	; 0
    29b0:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    29b4:	11 50       	subi	r17, 0x01	; 1
    29b6:	8e 2d       	mov	r24, r14
    29b8:	91 f7       	brne	.-28     	; 0x299e <vfprintf+0x38a>
    29ba:	e6 cf       	rjmp	.-52     	; 0x2988 <vfprintf+0x374>
    29bc:	85 e4       	ldi	r24, 0x45	; 69
    29be:	90 e0       	ldi	r25, 0x00	; 0
    29c0:	b6 01       	movw	r22, r12
    29c2:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    29c6:	57 fc       	sbrc	r5, 7
    29c8:	05 c0       	rjmp	.+10     	; 0x29d4 <vfprintf+0x3c0>
    29ca:	41 14       	cp	r4, r1
    29cc:	51 04       	cpc	r5, r1
    29ce:	39 f4       	brne	.+14     	; 0x29de <vfprintf+0x3ca>
    29d0:	04 ff       	sbrs	r16, 4
    29d2:	05 c0       	rjmp	.+10     	; 0x29de <vfprintf+0x3ca>
    29d4:	51 94       	neg	r5
    29d6:	41 94       	neg	r4
    29d8:	51 08       	sbc	r5, r1
    29da:	8d e2       	ldi	r24, 0x2D	; 45
    29dc:	01 c0       	rjmp	.+2      	; 0x29e0 <vfprintf+0x3cc>
    29de:	8b e2       	ldi	r24, 0x2B	; 43
    29e0:	b6 01       	movw	r22, r12
    29e2:	90 e0       	ldi	r25, 0x00	; 0
    29e4:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    29e8:	80 e3       	ldi	r24, 0x30	; 48
    29ea:	9a e0       	ldi	r25, 0x0A	; 10
    29ec:	49 16       	cp	r4, r25
    29ee:	51 04       	cpc	r5, r1
    29f0:	2c f0       	brlt	.+10     	; 0x29fc <vfprintf+0x3e8>
    29f2:	8f 5f       	subi	r24, 0xFF	; 255
    29f4:	5a e0       	ldi	r21, 0x0A	; 10
    29f6:	45 1a       	sub	r4, r21
    29f8:	51 08       	sbc	r5, r1
    29fa:	f7 cf       	rjmp	.-18     	; 0x29ea <vfprintf+0x3d6>
    29fc:	b6 01       	movw	r22, r12
    29fe:	90 e0       	ldi	r25, 0x00	; 0
    2a00:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2a04:	b6 01       	movw	r22, r12
    2a06:	c2 01       	movw	r24, r4
    2a08:	c0 96       	adiw	r24, 0x30	; 48
    2a0a:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2a0e:	57 c1       	rjmp	.+686    	; 0x2cbe <vfprintf+0x6aa>
    2a10:	83 36       	cpi	r24, 0x63	; 99
    2a12:	31 f0       	breq	.+12     	; 0x2a20 <vfprintf+0x40c>
    2a14:	83 37       	cpi	r24, 0x73	; 115
    2a16:	79 f0       	breq	.+30     	; 0x2a36 <vfprintf+0x422>
    2a18:	83 35       	cpi	r24, 0x53	; 83
    2a1a:	09 f0       	breq	.+2      	; 0x2a1e <vfprintf+0x40a>
    2a1c:	58 c0       	rjmp	.+176    	; 0x2ace <vfprintf+0x4ba>
    2a1e:	21 c0       	rjmp	.+66     	; 0x2a62 <vfprintf+0x44e>
    2a20:	52 01       	movw	r10, r4
    2a22:	e2 e0       	ldi	r30, 0x02	; 2
    2a24:	ae 0e       	add	r10, r30
    2a26:	b1 1c       	adc	r11, r1
    2a28:	f2 01       	movw	r30, r4
    2a2a:	80 81       	ld	r24, Z
    2a2c:	89 83       	std	Y+1, r24	; 0x01
    2a2e:	01 e0       	ldi	r16, 0x01	; 1
    2a30:	10 e0       	ldi	r17, 0x00	; 0
    2a32:	23 01       	movw	r4, r6
    2a34:	14 c0       	rjmp	.+40     	; 0x2a5e <vfprintf+0x44a>
    2a36:	52 01       	movw	r10, r4
    2a38:	f2 e0       	ldi	r31, 0x02	; 2
    2a3a:	af 0e       	add	r10, r31
    2a3c:	b1 1c       	adc	r11, r1
    2a3e:	f2 01       	movw	r30, r4
    2a40:	40 80       	ld	r4, Z
    2a42:	51 80       	ldd	r5, Z+1	; 0x01
    2a44:	26 ff       	sbrs	r18, 6
    2a46:	03 c0       	rjmp	.+6      	; 0x2a4e <vfprintf+0x43a>
    2a48:	61 2f       	mov	r22, r17
    2a4a:	70 e0       	ldi	r23, 0x00	; 0
    2a4c:	02 c0       	rjmp	.+4      	; 0x2a52 <vfprintf+0x43e>
    2a4e:	6f ef       	ldi	r22, 0xFF	; 255
    2a50:	7f ef       	ldi	r23, 0xFF	; 255
    2a52:	c2 01       	movw	r24, r4
    2a54:	2a 8b       	std	Y+18, r18	; 0x12
    2a56:	0e 94 d9 17 	call	0x2fb2	; 0x2fb2 <strnlen>
    2a5a:	8c 01       	movw	r16, r24
    2a5c:	2a 89       	ldd	r18, Y+18	; 0x12
    2a5e:	2f 77       	andi	r18, 0x7F	; 127
    2a60:	15 c0       	rjmp	.+42     	; 0x2a8c <vfprintf+0x478>
    2a62:	52 01       	movw	r10, r4
    2a64:	f2 e0       	ldi	r31, 0x02	; 2
    2a66:	af 0e       	add	r10, r31
    2a68:	b1 1c       	adc	r11, r1
    2a6a:	f2 01       	movw	r30, r4
    2a6c:	40 80       	ld	r4, Z
    2a6e:	51 80       	ldd	r5, Z+1	; 0x01
    2a70:	26 ff       	sbrs	r18, 6
    2a72:	03 c0       	rjmp	.+6      	; 0x2a7a <vfprintf+0x466>
    2a74:	61 2f       	mov	r22, r17
    2a76:	70 e0       	ldi	r23, 0x00	; 0
    2a78:	02 c0       	rjmp	.+4      	; 0x2a7e <vfprintf+0x46a>
    2a7a:	6f ef       	ldi	r22, 0xFF	; 255
    2a7c:	7f ef       	ldi	r23, 0xFF	; 255
    2a7e:	c2 01       	movw	r24, r4
    2a80:	2a 8b       	std	Y+18, r18	; 0x12
    2a82:	0e 94 c1 17 	call	0x2f82	; 0x2f82 <strnlen_P>
    2a86:	8c 01       	movw	r16, r24
    2a88:	2a 89       	ldd	r18, Y+18	; 0x12
    2a8a:	20 68       	ori	r18, 0x80	; 128
    2a8c:	32 2e       	mov	r3, r18
    2a8e:	23 fd       	sbrc	r18, 3
    2a90:	1a c0       	rjmp	.+52     	; 0x2ac6 <vfprintf+0x4b2>
    2a92:	8f 2d       	mov	r24, r15
    2a94:	90 e0       	ldi	r25, 0x00	; 0
    2a96:	08 17       	cp	r16, r24
    2a98:	19 07       	cpc	r17, r25
    2a9a:	a8 f4       	brcc	.+42     	; 0x2ac6 <vfprintf+0x4b2>
    2a9c:	b6 01       	movw	r22, r12
    2a9e:	80 e2       	ldi	r24, 0x20	; 32
    2aa0:	90 e0       	ldi	r25, 0x00	; 0
    2aa2:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2aa6:	fa 94       	dec	r15
    2aa8:	f4 cf       	rjmp	.-24     	; 0x2a92 <vfprintf+0x47e>
    2aaa:	f2 01       	movw	r30, r4
    2aac:	37 fc       	sbrc	r3, 7
    2aae:	85 91       	lpm	r24, Z+
    2ab0:	37 fe       	sbrs	r3, 7
    2ab2:	81 91       	ld	r24, Z+
    2ab4:	2f 01       	movw	r4, r30
    2ab6:	b6 01       	movw	r22, r12
    2ab8:	90 e0       	ldi	r25, 0x00	; 0
    2aba:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2abe:	f1 10       	cpse	r15, r1
    2ac0:	fa 94       	dec	r15
    2ac2:	01 50       	subi	r16, 0x01	; 1
    2ac4:	11 09       	sbc	r17, r1
    2ac6:	01 15       	cp	r16, r1
    2ac8:	11 05       	cpc	r17, r1
    2aca:	79 f7       	brne	.-34     	; 0x2aaa <vfprintf+0x496>
    2acc:	f8 c0       	rjmp	.+496    	; 0x2cbe <vfprintf+0x6aa>
    2ace:	84 36       	cpi	r24, 0x64	; 100
    2ad0:	11 f0       	breq	.+4      	; 0x2ad6 <vfprintf+0x4c2>
    2ad2:	89 36       	cpi	r24, 0x69	; 105
    2ad4:	59 f5       	brne	.+86     	; 0x2b2c <vfprintf+0x518>
    2ad6:	52 01       	movw	r10, r4
    2ad8:	27 ff       	sbrs	r18, 7
    2ada:	09 c0       	rjmp	.+18     	; 0x2aee <vfprintf+0x4da>
    2adc:	f4 e0       	ldi	r31, 0x04	; 4
    2ade:	af 0e       	add	r10, r31
    2ae0:	b1 1c       	adc	r11, r1
    2ae2:	f2 01       	movw	r30, r4
    2ae4:	60 81       	ld	r22, Z
    2ae6:	71 81       	ldd	r23, Z+1	; 0x01
    2ae8:	82 81       	ldd	r24, Z+2	; 0x02
    2aea:	93 81       	ldd	r25, Z+3	; 0x03
    2aec:	0a c0       	rjmp	.+20     	; 0x2b02 <vfprintf+0x4ee>
    2aee:	f2 e0       	ldi	r31, 0x02	; 2
    2af0:	af 0e       	add	r10, r31
    2af2:	b1 1c       	adc	r11, r1
    2af4:	f2 01       	movw	r30, r4
    2af6:	60 81       	ld	r22, Z
    2af8:	71 81       	ldd	r23, Z+1	; 0x01
    2afa:	07 2e       	mov	r0, r23
    2afc:	00 0c       	add	r0, r0
    2afe:	88 0b       	sbc	r24, r24
    2b00:	99 0b       	sbc	r25, r25
    2b02:	2f 76       	andi	r18, 0x6F	; 111
    2b04:	32 2e       	mov	r3, r18
    2b06:	97 ff       	sbrs	r25, 7
    2b08:	09 c0       	rjmp	.+18     	; 0x2b1c <vfprintf+0x508>
    2b0a:	90 95       	com	r25
    2b0c:	80 95       	com	r24
    2b0e:	70 95       	com	r23
    2b10:	61 95       	neg	r22
    2b12:	7f 4f       	sbci	r23, 0xFF	; 255
    2b14:	8f 4f       	sbci	r24, 0xFF	; 255
    2b16:	9f 4f       	sbci	r25, 0xFF	; 255
    2b18:	20 68       	ori	r18, 0x80	; 128
    2b1a:	32 2e       	mov	r3, r18
    2b1c:	2a e0       	ldi	r18, 0x0A	; 10
    2b1e:	30 e0       	ldi	r19, 0x00	; 0
    2b20:	a3 01       	movw	r20, r6
    2b22:	0e 94 6d 18 	call	0x30da	; 0x30da <__ultoa_invert>
    2b26:	e8 2e       	mov	r14, r24
    2b28:	e6 18       	sub	r14, r6
    2b2a:	3f c0       	rjmp	.+126    	; 0x2baa <vfprintf+0x596>
    2b2c:	02 2f       	mov	r16, r18
    2b2e:	85 37       	cpi	r24, 0x75	; 117
    2b30:	21 f4       	brne	.+8      	; 0x2b3a <vfprintf+0x526>
    2b32:	0f 7e       	andi	r16, 0xEF	; 239
    2b34:	2a e0       	ldi	r18, 0x0A	; 10
    2b36:	30 e0       	ldi	r19, 0x00	; 0
    2b38:	1d c0       	rjmp	.+58     	; 0x2b74 <vfprintf+0x560>
    2b3a:	09 7f       	andi	r16, 0xF9	; 249
    2b3c:	8f 36       	cpi	r24, 0x6F	; 111
    2b3e:	91 f0       	breq	.+36     	; 0x2b64 <vfprintf+0x550>
    2b40:	18 f4       	brcc	.+6      	; 0x2b48 <vfprintf+0x534>
    2b42:	88 35       	cpi	r24, 0x58	; 88
    2b44:	59 f0       	breq	.+22     	; 0x2b5c <vfprintf+0x548>
    2b46:	c5 c0       	rjmp	.+394    	; 0x2cd2 <vfprintf+0x6be>
    2b48:	80 37       	cpi	r24, 0x70	; 112
    2b4a:	19 f0       	breq	.+6      	; 0x2b52 <vfprintf+0x53e>
    2b4c:	88 37       	cpi	r24, 0x78	; 120
    2b4e:	11 f0       	breq	.+4      	; 0x2b54 <vfprintf+0x540>
    2b50:	c0 c0       	rjmp	.+384    	; 0x2cd2 <vfprintf+0x6be>
    2b52:	00 61       	ori	r16, 0x10	; 16
    2b54:	04 ff       	sbrs	r16, 4
    2b56:	09 c0       	rjmp	.+18     	; 0x2b6a <vfprintf+0x556>
    2b58:	04 60       	ori	r16, 0x04	; 4
    2b5a:	07 c0       	rjmp	.+14     	; 0x2b6a <vfprintf+0x556>
    2b5c:	24 ff       	sbrs	r18, 4
    2b5e:	08 c0       	rjmp	.+16     	; 0x2b70 <vfprintf+0x55c>
    2b60:	06 60       	ori	r16, 0x06	; 6
    2b62:	06 c0       	rjmp	.+12     	; 0x2b70 <vfprintf+0x55c>
    2b64:	28 e0       	ldi	r18, 0x08	; 8
    2b66:	30 e0       	ldi	r19, 0x00	; 0
    2b68:	05 c0       	rjmp	.+10     	; 0x2b74 <vfprintf+0x560>
    2b6a:	20 e1       	ldi	r18, 0x10	; 16
    2b6c:	30 e0       	ldi	r19, 0x00	; 0
    2b6e:	02 c0       	rjmp	.+4      	; 0x2b74 <vfprintf+0x560>
    2b70:	20 e1       	ldi	r18, 0x10	; 16
    2b72:	32 e0       	ldi	r19, 0x02	; 2
    2b74:	52 01       	movw	r10, r4
    2b76:	07 ff       	sbrs	r16, 7
    2b78:	09 c0       	rjmp	.+18     	; 0x2b8c <vfprintf+0x578>
    2b7a:	f4 e0       	ldi	r31, 0x04	; 4
    2b7c:	af 0e       	add	r10, r31
    2b7e:	b1 1c       	adc	r11, r1
    2b80:	f2 01       	movw	r30, r4
    2b82:	60 81       	ld	r22, Z
    2b84:	71 81       	ldd	r23, Z+1	; 0x01
    2b86:	82 81       	ldd	r24, Z+2	; 0x02
    2b88:	93 81       	ldd	r25, Z+3	; 0x03
    2b8a:	08 c0       	rjmp	.+16     	; 0x2b9c <vfprintf+0x588>
    2b8c:	f2 e0       	ldi	r31, 0x02	; 2
    2b8e:	af 0e       	add	r10, r31
    2b90:	b1 1c       	adc	r11, r1
    2b92:	f2 01       	movw	r30, r4
    2b94:	60 81       	ld	r22, Z
    2b96:	71 81       	ldd	r23, Z+1	; 0x01
    2b98:	80 e0       	ldi	r24, 0x00	; 0
    2b9a:	90 e0       	ldi	r25, 0x00	; 0
    2b9c:	a3 01       	movw	r20, r6
    2b9e:	0e 94 6d 18 	call	0x30da	; 0x30da <__ultoa_invert>
    2ba2:	e8 2e       	mov	r14, r24
    2ba4:	e6 18       	sub	r14, r6
    2ba6:	0f 77       	andi	r16, 0x7F	; 127
    2ba8:	30 2e       	mov	r3, r16
    2baa:	36 fe       	sbrs	r3, 6
    2bac:	0b c0       	rjmp	.+22     	; 0x2bc4 <vfprintf+0x5b0>
    2bae:	33 2d       	mov	r19, r3
    2bb0:	3e 7f       	andi	r19, 0xFE	; 254
    2bb2:	e1 16       	cp	r14, r17
    2bb4:	50 f4       	brcc	.+20     	; 0x2bca <vfprintf+0x5b6>
    2bb6:	34 fe       	sbrs	r3, 4
    2bb8:	0a c0       	rjmp	.+20     	; 0x2bce <vfprintf+0x5ba>
    2bba:	32 fc       	sbrc	r3, 2
    2bbc:	08 c0       	rjmp	.+16     	; 0x2bce <vfprintf+0x5ba>
    2bbe:	33 2d       	mov	r19, r3
    2bc0:	3e 7e       	andi	r19, 0xEE	; 238
    2bc2:	05 c0       	rjmp	.+10     	; 0x2bce <vfprintf+0x5ba>
    2bc4:	0e 2d       	mov	r16, r14
    2bc6:	33 2d       	mov	r19, r3
    2bc8:	03 c0       	rjmp	.+6      	; 0x2bd0 <vfprintf+0x5bc>
    2bca:	0e 2d       	mov	r16, r14
    2bcc:	01 c0       	rjmp	.+2      	; 0x2bd0 <vfprintf+0x5bc>
    2bce:	01 2f       	mov	r16, r17
    2bd0:	34 ff       	sbrs	r19, 4
    2bd2:	0c c0       	rjmp	.+24     	; 0x2bec <vfprintf+0x5d8>
    2bd4:	fe 01       	movw	r30, r28
    2bd6:	ee 0d       	add	r30, r14
    2bd8:	f1 1d       	adc	r31, r1
    2bda:	80 81       	ld	r24, Z
    2bdc:	80 33       	cpi	r24, 0x30	; 48
    2bde:	11 f4       	brne	.+4      	; 0x2be4 <vfprintf+0x5d0>
    2be0:	39 7e       	andi	r19, 0xE9	; 233
    2be2:	08 c0       	rjmp	.+16     	; 0x2bf4 <vfprintf+0x5e0>
    2be4:	32 ff       	sbrs	r19, 2
    2be6:	05 c0       	rjmp	.+10     	; 0x2bf2 <vfprintf+0x5de>
    2be8:	0e 5f       	subi	r16, 0xFE	; 254
    2bea:	04 c0       	rjmp	.+8      	; 0x2bf4 <vfprintf+0x5e0>
    2bec:	83 2f       	mov	r24, r19
    2bee:	86 78       	andi	r24, 0x86	; 134
    2bf0:	09 f0       	breq	.+2      	; 0x2bf4 <vfprintf+0x5e0>
    2bf2:	0f 5f       	subi	r16, 0xFF	; 255
    2bf4:	33 fd       	sbrc	r19, 3
    2bf6:	13 c0       	rjmp	.+38     	; 0x2c1e <vfprintf+0x60a>
    2bf8:	30 ff       	sbrs	r19, 0
    2bfa:	06 c0       	rjmp	.+12     	; 0x2c08 <vfprintf+0x5f4>
    2bfc:	1e 2d       	mov	r17, r14
    2bfe:	0f 15       	cp	r16, r15
    2c00:	18 f4       	brcc	.+6      	; 0x2c08 <vfprintf+0x5f4>
    2c02:	1f 0d       	add	r17, r15
    2c04:	10 1b       	sub	r17, r16
    2c06:	0f 2d       	mov	r16, r15
    2c08:	0f 15       	cp	r16, r15
    2c0a:	68 f4       	brcc	.+26     	; 0x2c26 <vfprintf+0x612>
    2c0c:	b6 01       	movw	r22, r12
    2c0e:	80 e2       	ldi	r24, 0x20	; 32
    2c10:	90 e0       	ldi	r25, 0x00	; 0
    2c12:	3b 8b       	std	Y+19, r19	; 0x13
    2c14:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c18:	0f 5f       	subi	r16, 0xFF	; 255
    2c1a:	3b 89       	ldd	r19, Y+19	; 0x13
    2c1c:	f5 cf       	rjmp	.-22     	; 0x2c08 <vfprintf+0x5f4>
    2c1e:	0f 15       	cp	r16, r15
    2c20:	10 f4       	brcc	.+4      	; 0x2c26 <vfprintf+0x612>
    2c22:	f0 1a       	sub	r15, r16
    2c24:	01 c0       	rjmp	.+2      	; 0x2c28 <vfprintf+0x614>
    2c26:	f1 2c       	mov	r15, r1
    2c28:	34 ff       	sbrs	r19, 4
    2c2a:	12 c0       	rjmp	.+36     	; 0x2c50 <vfprintf+0x63c>
    2c2c:	b6 01       	movw	r22, r12
    2c2e:	80 e3       	ldi	r24, 0x30	; 48
    2c30:	90 e0       	ldi	r25, 0x00	; 0
    2c32:	3b 8b       	std	Y+19, r19	; 0x13
    2c34:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c38:	3b 89       	ldd	r19, Y+19	; 0x13
    2c3a:	32 ff       	sbrs	r19, 2
    2c3c:	17 c0       	rjmp	.+46     	; 0x2c6c <vfprintf+0x658>
    2c3e:	31 fd       	sbrc	r19, 1
    2c40:	03 c0       	rjmp	.+6      	; 0x2c48 <vfprintf+0x634>
    2c42:	88 e7       	ldi	r24, 0x78	; 120
    2c44:	90 e0       	ldi	r25, 0x00	; 0
    2c46:	02 c0       	rjmp	.+4      	; 0x2c4c <vfprintf+0x638>
    2c48:	88 e5       	ldi	r24, 0x58	; 88
    2c4a:	90 e0       	ldi	r25, 0x00	; 0
    2c4c:	b6 01       	movw	r22, r12
    2c4e:	0c c0       	rjmp	.+24     	; 0x2c68 <vfprintf+0x654>
    2c50:	83 2f       	mov	r24, r19
    2c52:	86 78       	andi	r24, 0x86	; 134
    2c54:	59 f0       	breq	.+22     	; 0x2c6c <vfprintf+0x658>
    2c56:	31 ff       	sbrs	r19, 1
    2c58:	02 c0       	rjmp	.+4      	; 0x2c5e <vfprintf+0x64a>
    2c5a:	8b e2       	ldi	r24, 0x2B	; 43
    2c5c:	01 c0       	rjmp	.+2      	; 0x2c60 <vfprintf+0x64c>
    2c5e:	80 e2       	ldi	r24, 0x20	; 32
    2c60:	37 fd       	sbrc	r19, 7
    2c62:	8d e2       	ldi	r24, 0x2D	; 45
    2c64:	b6 01       	movw	r22, r12
    2c66:	90 e0       	ldi	r25, 0x00	; 0
    2c68:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c6c:	e1 16       	cp	r14, r17
    2c6e:	38 f4       	brcc	.+14     	; 0x2c7e <vfprintf+0x66a>
    2c70:	b6 01       	movw	r22, r12
    2c72:	80 e3       	ldi	r24, 0x30	; 48
    2c74:	90 e0       	ldi	r25, 0x00	; 0
    2c76:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c7a:	11 50       	subi	r17, 0x01	; 1
    2c7c:	f7 cf       	rjmp	.-18     	; 0x2c6c <vfprintf+0x658>
    2c7e:	ea 94       	dec	r14
    2c80:	f3 01       	movw	r30, r6
    2c82:	ee 0d       	add	r30, r14
    2c84:	f1 1d       	adc	r31, r1
    2c86:	80 81       	ld	r24, Z
    2c88:	b6 01       	movw	r22, r12
    2c8a:	90 e0       	ldi	r25, 0x00	; 0
    2c8c:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2c90:	e1 10       	cpse	r14, r1
    2c92:	f5 cf       	rjmp	.-22     	; 0x2c7e <vfprintf+0x66a>
    2c94:	14 c0       	rjmp	.+40     	; 0x2cbe <vfprintf+0x6aa>
    2c96:	f4 e0       	ldi	r31, 0x04	; 4
    2c98:	ff 15       	cp	r31, r15
    2c9a:	58 f5       	brcc	.+86     	; 0x2cf2 <vfprintf+0x6de>
    2c9c:	84 e0       	ldi	r24, 0x04	; 4
    2c9e:	f8 1a       	sub	r15, r24
    2ca0:	33 fe       	sbrs	r3, 3
    2ca2:	1e c0       	rjmp	.+60     	; 0x2ce0 <vfprintf+0x6cc>
    2ca4:	21 10       	cpse	r2, r1
    2ca6:	26 c0       	rjmp	.+76     	; 0x2cf4 <vfprintf+0x6e0>
    2ca8:	03 ff       	sbrs	r16, 3
    2caa:	2a c0       	rjmp	.+84     	; 0x2d00 <vfprintf+0x6ec>
    2cac:	0c e0       	ldi	r16, 0x0C	; 12
    2cae:	12 e0       	ldi	r17, 0x02	; 2
    2cb0:	f3 2d       	mov	r31, r3
    2cb2:	f0 71       	andi	r31, 0x10	; 16
    2cb4:	3f 2e       	mov	r3, r31
    2cb6:	f8 01       	movw	r30, r16
    2cb8:	84 91       	lpm	r24, Z
    2cba:	81 11       	cpse	r24, r1
    2cbc:	24 c0       	rjmp	.+72     	; 0x2d06 <vfprintf+0x6f2>
    2cbe:	ff 20       	and	r15, r15
    2cc0:	09 f4       	brne	.+2      	; 0x2cc4 <vfprintf+0x6b0>
    2cc2:	e5 cc       	rjmp	.-1590   	; 0x268e <vfprintf+0x7a>
    2cc4:	b6 01       	movw	r22, r12
    2cc6:	80 e2       	ldi	r24, 0x20	; 32
    2cc8:	90 e0       	ldi	r25, 0x00	; 0
    2cca:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2cce:	fa 94       	dec	r15
    2cd0:	f6 cf       	rjmp	.-20     	; 0x2cbe <vfprintf+0x6aa>
    2cd2:	f6 01       	movw	r30, r12
    2cd4:	86 81       	ldd	r24, Z+6	; 0x06
    2cd6:	97 81       	ldd	r25, Z+7	; 0x07
    2cd8:	26 c0       	rjmp	.+76     	; 0x2d26 <vfprintf+0x712>
    2cda:	8f ef       	ldi	r24, 0xFF	; 255
    2cdc:	9f ef       	ldi	r25, 0xFF	; 255
    2cde:	23 c0       	rjmp	.+70     	; 0x2d26 <vfprintf+0x712>
    2ce0:	b6 01       	movw	r22, r12
    2ce2:	80 e2       	ldi	r24, 0x20	; 32
    2ce4:	90 e0       	ldi	r25, 0x00	; 0
    2ce6:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2cea:	fa 94       	dec	r15
    2cec:	f1 10       	cpse	r15, r1
    2cee:	f8 cf       	rjmp	.-16     	; 0x2ce0 <vfprintf+0x6cc>
    2cf0:	d9 cf       	rjmp	.-78     	; 0x2ca4 <vfprintf+0x690>
    2cf2:	f1 2c       	mov	r15, r1
    2cf4:	b6 01       	movw	r22, r12
    2cf6:	82 2d       	mov	r24, r2
    2cf8:	90 e0       	ldi	r25, 0x00	; 0
    2cfa:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2cfe:	d4 cf       	rjmp	.-88     	; 0x2ca8 <vfprintf+0x694>
    2d00:	00 e1       	ldi	r16, 0x10	; 16
    2d02:	12 e0       	ldi	r17, 0x02	; 2
    2d04:	d5 cf       	rjmp	.-86     	; 0x2cb0 <vfprintf+0x69c>
    2d06:	31 10       	cpse	r3, r1
    2d08:	80 52       	subi	r24, 0x20	; 32
    2d0a:	b6 01       	movw	r22, r12
    2d0c:	90 e0       	ldi	r25, 0x00	; 0
    2d0e:	0e 94 0b 18 	call	0x3016	; 0x3016 <fputc>
    2d12:	0f 5f       	subi	r16, 0xFF	; 255
    2d14:	1f 4f       	sbci	r17, 0xFF	; 255
    2d16:	cf cf       	rjmp	.-98     	; 0x2cb6 <vfprintf+0x6a2>
    2d18:	23 e0       	ldi	r18, 0x03	; 3
    2d1a:	2f 15       	cp	r18, r15
    2d1c:	10 f4       	brcc	.+4      	; 0x2d22 <vfprintf+0x70e>
    2d1e:	83 e0       	ldi	r24, 0x03	; 3
    2d20:	be cf       	rjmp	.-132    	; 0x2c9e <vfprintf+0x68a>
    2d22:	f1 2c       	mov	r15, r1
    2d24:	c1 cf       	rjmp	.-126    	; 0x2ca8 <vfprintf+0x694>
    2d26:	63 96       	adiw	r28, 0x13	; 19
    2d28:	cd bf       	out	0x3d, r28	; 61
    2d2a:	de bf       	out	0x3e, r29	; 62
    2d2c:	df 91       	pop	r29
    2d2e:	cf 91       	pop	r28
    2d30:	1f 91       	pop	r17
    2d32:	0f 91       	pop	r16
    2d34:	ff 90       	pop	r15
    2d36:	ef 90       	pop	r14
    2d38:	df 90       	pop	r13
    2d3a:	cf 90       	pop	r12
    2d3c:	bf 90       	pop	r11
    2d3e:	af 90       	pop	r10
    2d40:	9f 90       	pop	r9
    2d42:	8f 90       	pop	r8
    2d44:	7f 90       	pop	r7
    2d46:	6f 90       	pop	r6
    2d48:	5f 90       	pop	r5
    2d4a:	4f 90       	pop	r4
    2d4c:	3f 90       	pop	r3
    2d4e:	2f 90       	pop	r2
    2d50:	08 95       	ret

00002d52 <__udivmodsi4>:
    2d52:	a1 e2       	ldi	r26, 0x21	; 33
    2d54:	1a 2e       	mov	r1, r26
    2d56:	aa 1b       	sub	r26, r26
    2d58:	bb 1b       	sub	r27, r27
    2d5a:	fd 01       	movw	r30, r26
    2d5c:	0d c0       	rjmp	.+26     	; 0x2d78 <__udivmodsi4_ep>

00002d5e <__udivmodsi4_loop>:
    2d5e:	aa 1f       	adc	r26, r26
    2d60:	bb 1f       	adc	r27, r27
    2d62:	ee 1f       	adc	r30, r30
    2d64:	ff 1f       	adc	r31, r31
    2d66:	a2 17       	cp	r26, r18
    2d68:	b3 07       	cpc	r27, r19
    2d6a:	e4 07       	cpc	r30, r20
    2d6c:	f5 07       	cpc	r31, r21
    2d6e:	20 f0       	brcs	.+8      	; 0x2d78 <__udivmodsi4_ep>
    2d70:	a2 1b       	sub	r26, r18
    2d72:	b3 0b       	sbc	r27, r19
    2d74:	e4 0b       	sbc	r30, r20
    2d76:	f5 0b       	sbc	r31, r21

00002d78 <__udivmodsi4_ep>:
    2d78:	66 1f       	adc	r22, r22
    2d7a:	77 1f       	adc	r23, r23
    2d7c:	88 1f       	adc	r24, r24
    2d7e:	99 1f       	adc	r25, r25
    2d80:	1a 94       	dec	r1
    2d82:	69 f7       	brne	.-38     	; 0x2d5e <__udivmodsi4_loop>
    2d84:	60 95       	com	r22
    2d86:	70 95       	com	r23
    2d88:	80 95       	com	r24
    2d8a:	90 95       	com	r25
    2d8c:	9b 01       	movw	r18, r22
    2d8e:	ac 01       	movw	r20, r24
    2d90:	bd 01       	movw	r22, r26
    2d92:	cf 01       	movw	r24, r30
    2d94:	08 95       	ret

00002d96 <__ashrdi3>:
    2d96:	97 fb       	bst	r25, 7
    2d98:	10 f8       	bld	r1, 0

00002d9a <__lshrdi3>:
    2d9a:	16 94       	lsr	r1
    2d9c:	00 08       	sbc	r0, r0
    2d9e:	0f 93       	push	r16
    2da0:	08 30       	cpi	r16, 0x08	; 8
    2da2:	98 f0       	brcs	.+38     	; 0x2dca <__lshrdi3+0x30>
    2da4:	08 50       	subi	r16, 0x08	; 8
    2da6:	23 2f       	mov	r18, r19
    2da8:	34 2f       	mov	r19, r20
    2daa:	45 2f       	mov	r20, r21
    2dac:	56 2f       	mov	r21, r22
    2dae:	67 2f       	mov	r22, r23
    2db0:	78 2f       	mov	r23, r24
    2db2:	89 2f       	mov	r24, r25
    2db4:	90 2d       	mov	r25, r0
    2db6:	f4 cf       	rjmp	.-24     	; 0x2da0 <__lshrdi3+0x6>
    2db8:	05 94       	asr	r0
    2dba:	97 95       	ror	r25
    2dbc:	87 95       	ror	r24
    2dbe:	77 95       	ror	r23
    2dc0:	67 95       	ror	r22
    2dc2:	57 95       	ror	r21
    2dc4:	47 95       	ror	r20
    2dc6:	37 95       	ror	r19
    2dc8:	27 95       	ror	r18
    2dca:	0a 95       	dec	r16
    2dcc:	aa f7       	brpl	.-22     	; 0x2db8 <__lshrdi3+0x1e>
    2dce:	0f 91       	pop	r16
    2dd0:	08 95       	ret

00002dd2 <__ftoa_engine>:
    2dd2:	28 30       	cpi	r18, 0x08	; 8
    2dd4:	08 f0       	brcs	.+2      	; 0x2dd8 <__ftoa_engine+0x6>
    2dd6:	27 e0       	ldi	r18, 0x07	; 7
    2dd8:	33 27       	eor	r19, r19
    2dda:	da 01       	movw	r26, r20
    2ddc:	99 0f       	add	r25, r25
    2dde:	31 1d       	adc	r19, r1
    2de0:	87 fd       	sbrc	r24, 7
    2de2:	91 60       	ori	r25, 0x01	; 1
    2de4:	00 96       	adiw	r24, 0x00	; 0
    2de6:	61 05       	cpc	r22, r1
    2de8:	71 05       	cpc	r23, r1
    2dea:	39 f4       	brne	.+14     	; 0x2dfa <__ftoa_engine+0x28>
    2dec:	32 60       	ori	r19, 0x02	; 2
    2dee:	2e 5f       	subi	r18, 0xFE	; 254
    2df0:	3d 93       	st	X+, r19
    2df2:	30 e3       	ldi	r19, 0x30	; 48
    2df4:	2a 95       	dec	r18
    2df6:	e1 f7       	brne	.-8      	; 0x2df0 <__ftoa_engine+0x1e>
    2df8:	08 95       	ret
    2dfa:	9f 3f       	cpi	r25, 0xFF	; 255
    2dfc:	30 f0       	brcs	.+12     	; 0x2e0a <__ftoa_engine+0x38>
    2dfe:	80 38       	cpi	r24, 0x80	; 128
    2e00:	71 05       	cpc	r23, r1
    2e02:	61 05       	cpc	r22, r1
    2e04:	09 f0       	breq	.+2      	; 0x2e08 <__ftoa_engine+0x36>
    2e06:	3c 5f       	subi	r19, 0xFC	; 252
    2e08:	3c 5f       	subi	r19, 0xFC	; 252
    2e0a:	3d 93       	st	X+, r19
    2e0c:	91 30       	cpi	r25, 0x01	; 1
    2e0e:	08 f0       	brcs	.+2      	; 0x2e12 <__ftoa_engine+0x40>
    2e10:	80 68       	ori	r24, 0x80	; 128
    2e12:	91 1d       	adc	r25, r1
    2e14:	df 93       	push	r29
    2e16:	cf 93       	push	r28
    2e18:	1f 93       	push	r17
    2e1a:	0f 93       	push	r16
    2e1c:	ff 92       	push	r15
    2e1e:	ef 92       	push	r14
    2e20:	19 2f       	mov	r17, r25
    2e22:	98 7f       	andi	r25, 0xF8	; 248
    2e24:	96 95       	lsr	r25
    2e26:	e9 2f       	mov	r30, r25
    2e28:	96 95       	lsr	r25
    2e2a:	96 95       	lsr	r25
    2e2c:	e9 0f       	add	r30, r25
    2e2e:	ff 27       	eor	r31, r31
    2e30:	e2 59       	subi	r30, 0x92	; 146
    2e32:	fd 4f       	sbci	r31, 0xFD	; 253
    2e34:	99 27       	eor	r25, r25
    2e36:	33 27       	eor	r19, r19
    2e38:	ee 24       	eor	r14, r14
    2e3a:	ff 24       	eor	r15, r15
    2e3c:	a7 01       	movw	r20, r14
    2e3e:	e7 01       	movw	r28, r14
    2e40:	05 90       	lpm	r0, Z+
    2e42:	08 94       	sec
    2e44:	07 94       	ror	r0
    2e46:	28 f4       	brcc	.+10     	; 0x2e52 <__ftoa_engine+0x80>
    2e48:	36 0f       	add	r19, r22
    2e4a:	e7 1e       	adc	r14, r23
    2e4c:	f8 1e       	adc	r15, r24
    2e4e:	49 1f       	adc	r20, r25
    2e50:	51 1d       	adc	r21, r1
    2e52:	66 0f       	add	r22, r22
    2e54:	77 1f       	adc	r23, r23
    2e56:	88 1f       	adc	r24, r24
    2e58:	99 1f       	adc	r25, r25
    2e5a:	06 94       	lsr	r0
    2e5c:	a1 f7       	brne	.-24     	; 0x2e46 <__ftoa_engine+0x74>
    2e5e:	05 90       	lpm	r0, Z+
    2e60:	07 94       	ror	r0
    2e62:	28 f4       	brcc	.+10     	; 0x2e6e <__ftoa_engine+0x9c>
    2e64:	e7 0e       	add	r14, r23
    2e66:	f8 1e       	adc	r15, r24
    2e68:	49 1f       	adc	r20, r25
    2e6a:	56 1f       	adc	r21, r22
    2e6c:	c1 1d       	adc	r28, r1
    2e6e:	77 0f       	add	r23, r23
    2e70:	88 1f       	adc	r24, r24
    2e72:	99 1f       	adc	r25, r25
    2e74:	66 1f       	adc	r22, r22
    2e76:	06 94       	lsr	r0
    2e78:	a1 f7       	brne	.-24     	; 0x2e62 <__ftoa_engine+0x90>
    2e7a:	05 90       	lpm	r0, Z+
    2e7c:	07 94       	ror	r0
    2e7e:	28 f4       	brcc	.+10     	; 0x2e8a <__ftoa_engine+0xb8>
    2e80:	f8 0e       	add	r15, r24
    2e82:	49 1f       	adc	r20, r25
    2e84:	56 1f       	adc	r21, r22
    2e86:	c7 1f       	adc	r28, r23
    2e88:	d1 1d       	adc	r29, r1
    2e8a:	88 0f       	add	r24, r24
    2e8c:	99 1f       	adc	r25, r25
    2e8e:	66 1f       	adc	r22, r22
    2e90:	77 1f       	adc	r23, r23
    2e92:	06 94       	lsr	r0
    2e94:	a1 f7       	brne	.-24     	; 0x2e7e <__ftoa_engine+0xac>
    2e96:	05 90       	lpm	r0, Z+
    2e98:	07 94       	ror	r0
    2e9a:	20 f4       	brcc	.+8      	; 0x2ea4 <__ftoa_engine+0xd2>
    2e9c:	49 0f       	add	r20, r25
    2e9e:	56 1f       	adc	r21, r22
    2ea0:	c7 1f       	adc	r28, r23
    2ea2:	d8 1f       	adc	r29, r24
    2ea4:	99 0f       	add	r25, r25
    2ea6:	66 1f       	adc	r22, r22
    2ea8:	77 1f       	adc	r23, r23
    2eaa:	88 1f       	adc	r24, r24
    2eac:	06 94       	lsr	r0
    2eae:	a9 f7       	brne	.-22     	; 0x2e9a <__ftoa_engine+0xc8>
    2eb0:	84 91       	lpm	r24, Z
    2eb2:	10 95       	com	r17
    2eb4:	17 70       	andi	r17, 0x07	; 7
    2eb6:	41 f0       	breq	.+16     	; 0x2ec8 <__ftoa_engine+0xf6>
    2eb8:	d6 95       	lsr	r29
    2eba:	c7 95       	ror	r28
    2ebc:	57 95       	ror	r21
    2ebe:	47 95       	ror	r20
    2ec0:	f7 94       	ror	r15
    2ec2:	e7 94       	ror	r14
    2ec4:	1a 95       	dec	r17
    2ec6:	c1 f7       	brne	.-16     	; 0x2eb8 <__ftoa_engine+0xe6>
    2ec8:	e4 e1       	ldi	r30, 0x14	; 20
    2eca:	f2 e0       	ldi	r31, 0x02	; 2
    2ecc:	68 94       	set
    2ece:	15 90       	lpm	r1, Z+
    2ed0:	15 91       	lpm	r17, Z+
    2ed2:	35 91       	lpm	r19, Z+
    2ed4:	65 91       	lpm	r22, Z+
    2ed6:	95 91       	lpm	r25, Z+
    2ed8:	05 90       	lpm	r0, Z+
    2eda:	7f e2       	ldi	r23, 0x2F	; 47
    2edc:	73 95       	inc	r23
    2ede:	e1 18       	sub	r14, r1
    2ee0:	f1 0a       	sbc	r15, r17
    2ee2:	43 0b       	sbc	r20, r19
    2ee4:	56 0b       	sbc	r21, r22
    2ee6:	c9 0b       	sbc	r28, r25
    2ee8:	d0 09       	sbc	r29, r0
    2eea:	c0 f7       	brcc	.-16     	; 0x2edc <__ftoa_engine+0x10a>
    2eec:	e1 0c       	add	r14, r1
    2eee:	f1 1e       	adc	r15, r17
    2ef0:	43 1f       	adc	r20, r19
    2ef2:	56 1f       	adc	r21, r22
    2ef4:	c9 1f       	adc	r28, r25
    2ef6:	d0 1d       	adc	r29, r0
    2ef8:	7e f4       	brtc	.+30     	; 0x2f18 <__ftoa_engine+0x146>
    2efa:	70 33       	cpi	r23, 0x30	; 48
    2efc:	11 f4       	brne	.+4      	; 0x2f02 <__ftoa_engine+0x130>
    2efe:	8a 95       	dec	r24
    2f00:	e6 cf       	rjmp	.-52     	; 0x2ece <__ftoa_engine+0xfc>
    2f02:	e8 94       	clt
    2f04:	01 50       	subi	r16, 0x01	; 1
    2f06:	30 f0       	brcs	.+12     	; 0x2f14 <__ftoa_engine+0x142>
    2f08:	08 0f       	add	r16, r24
    2f0a:	0a f4       	brpl	.+2      	; 0x2f0e <__ftoa_engine+0x13c>
    2f0c:	00 27       	eor	r16, r16
    2f0e:	02 17       	cp	r16, r18
    2f10:	08 f4       	brcc	.+2      	; 0x2f14 <__ftoa_engine+0x142>
    2f12:	20 2f       	mov	r18, r16
    2f14:	23 95       	inc	r18
    2f16:	02 2f       	mov	r16, r18
    2f18:	7a 33       	cpi	r23, 0x3A	; 58
    2f1a:	28 f0       	brcs	.+10     	; 0x2f26 <__ftoa_engine+0x154>
    2f1c:	79 e3       	ldi	r23, 0x39	; 57
    2f1e:	7d 93       	st	X+, r23
    2f20:	2a 95       	dec	r18
    2f22:	e9 f7       	brne	.-6      	; 0x2f1e <__ftoa_engine+0x14c>
    2f24:	10 c0       	rjmp	.+32     	; 0x2f46 <__ftoa_engine+0x174>
    2f26:	7d 93       	st	X+, r23
    2f28:	2a 95       	dec	r18
    2f2a:	89 f6       	brne	.-94     	; 0x2ece <__ftoa_engine+0xfc>
    2f2c:	06 94       	lsr	r0
    2f2e:	97 95       	ror	r25
    2f30:	67 95       	ror	r22
    2f32:	37 95       	ror	r19
    2f34:	17 95       	ror	r17
    2f36:	17 94       	ror	r1
    2f38:	e1 18       	sub	r14, r1
    2f3a:	f1 0a       	sbc	r15, r17
    2f3c:	43 0b       	sbc	r20, r19
    2f3e:	56 0b       	sbc	r21, r22
    2f40:	c9 0b       	sbc	r28, r25
    2f42:	d0 09       	sbc	r29, r0
    2f44:	98 f0       	brcs	.+38     	; 0x2f6c <__ftoa_engine+0x19a>
    2f46:	23 95       	inc	r18
    2f48:	7e 91       	ld	r23, -X
    2f4a:	73 95       	inc	r23
    2f4c:	7a 33       	cpi	r23, 0x3A	; 58
    2f4e:	08 f0       	brcs	.+2      	; 0x2f52 <__ftoa_engine+0x180>
    2f50:	70 e3       	ldi	r23, 0x30	; 48
    2f52:	7c 93       	st	X, r23
    2f54:	20 13       	cpse	r18, r16
    2f56:	b8 f7       	brcc	.-18     	; 0x2f46 <__ftoa_engine+0x174>
    2f58:	7e 91       	ld	r23, -X
    2f5a:	70 61       	ori	r23, 0x10	; 16
    2f5c:	7d 93       	st	X+, r23
    2f5e:	30 f0       	brcs	.+12     	; 0x2f6c <__ftoa_engine+0x19a>
    2f60:	83 95       	inc	r24
    2f62:	71 e3       	ldi	r23, 0x31	; 49
    2f64:	7d 93       	st	X+, r23
    2f66:	70 e3       	ldi	r23, 0x30	; 48
    2f68:	2a 95       	dec	r18
    2f6a:	e1 f7       	brne	.-8      	; 0x2f64 <__ftoa_engine+0x192>
    2f6c:	11 24       	eor	r1, r1
    2f6e:	ef 90       	pop	r14
    2f70:	ff 90       	pop	r15
    2f72:	0f 91       	pop	r16
    2f74:	1f 91       	pop	r17
    2f76:	cf 91       	pop	r28
    2f78:	df 91       	pop	r29
    2f7a:	99 27       	eor	r25, r25
    2f7c:	87 fd       	sbrc	r24, 7
    2f7e:	90 95       	com	r25
    2f80:	08 95       	ret

00002f82 <strnlen_P>:
    2f82:	fc 01       	movw	r30, r24
    2f84:	05 90       	lpm	r0, Z+
    2f86:	61 50       	subi	r22, 0x01	; 1
    2f88:	70 40       	sbci	r23, 0x00	; 0
    2f8a:	01 10       	cpse	r0, r1
    2f8c:	d8 f7       	brcc	.-10     	; 0x2f84 <strnlen_P+0x2>
    2f8e:	80 95       	com	r24
    2f90:	90 95       	com	r25
    2f92:	8e 0f       	add	r24, r30
    2f94:	9f 1f       	adc	r25, r31
    2f96:	08 95       	ret

00002f98 <strtok>:
    2f98:	4e e2       	ldi	r20, 0x2E	; 46
    2f9a:	53 e2       	ldi	r21, 0x23	; 35
    2f9c:	0c 94 e4 17 	jmp	0x2fc8	; 0x2fc8 <strtok_r>

00002fa0 <strcmp>:
    2fa0:	fb 01       	movw	r30, r22
    2fa2:	dc 01       	movw	r26, r24
    2fa4:	8d 91       	ld	r24, X+
    2fa6:	01 90       	ld	r0, Z+
    2fa8:	80 19       	sub	r24, r0
    2faa:	01 10       	cpse	r0, r1
    2fac:	d9 f3       	breq	.-10     	; 0x2fa4 <strcmp+0x4>
    2fae:	99 0b       	sbc	r25, r25
    2fb0:	08 95       	ret

00002fb2 <strnlen>:
    2fb2:	fc 01       	movw	r30, r24
    2fb4:	61 50       	subi	r22, 0x01	; 1
    2fb6:	70 40       	sbci	r23, 0x00	; 0
    2fb8:	01 90       	ld	r0, Z+
    2fba:	01 10       	cpse	r0, r1
    2fbc:	d8 f7       	brcc	.-10     	; 0x2fb4 <strnlen+0x2>
    2fbe:	80 95       	com	r24
    2fc0:	90 95       	com	r25
    2fc2:	8e 0f       	add	r24, r30
    2fc4:	9f 1f       	adc	r25, r31
    2fc6:	08 95       	ret

00002fc8 <strtok_r>:
    2fc8:	fa 01       	movw	r30, r20
    2fca:	a1 91       	ld	r26, Z+
    2fcc:	b0 81       	ld	r27, Z
    2fce:	00 97       	sbiw	r24, 0x00	; 0
    2fd0:	19 f4       	brne	.+6      	; 0x2fd8 <strtok_r+0x10>
    2fd2:	10 97       	sbiw	r26, 0x00	; 0
    2fd4:	e1 f0       	breq	.+56     	; 0x300e <strtok_r+0x46>
    2fd6:	cd 01       	movw	r24, r26
    2fd8:	dc 01       	movw	r26, r24
    2fda:	cd 01       	movw	r24, r26
    2fdc:	0d 90       	ld	r0, X+
    2fde:	00 20       	and	r0, r0
    2fe0:	11 f4       	brne	.+4      	; 0x2fe6 <strtok_r+0x1e>
    2fe2:	c0 01       	movw	r24, r0
    2fe4:	13 c0       	rjmp	.+38     	; 0x300c <strtok_r+0x44>
    2fe6:	fb 01       	movw	r30, r22
    2fe8:	21 91       	ld	r18, Z+
    2fea:	22 23       	and	r18, r18
    2fec:	19 f0       	breq	.+6      	; 0x2ff4 <strtok_r+0x2c>
    2fee:	20 15       	cp	r18, r0
    2ff0:	d9 f7       	brne	.-10     	; 0x2fe8 <strtok_r+0x20>
    2ff2:	f3 cf       	rjmp	.-26     	; 0x2fda <strtok_r+0x12>
    2ff4:	fb 01       	movw	r30, r22
    2ff6:	21 91       	ld	r18, Z+
    2ff8:	20 15       	cp	r18, r0
    2ffa:	19 f4       	brne	.+6      	; 0x3002 <strtok_r+0x3a>
    2ffc:	1e 92       	st	-X, r1
    2ffe:	11 96       	adiw	r26, 0x01	; 1
    3000:	06 c0       	rjmp	.+12     	; 0x300e <strtok_r+0x46>
    3002:	22 23       	and	r18, r18
    3004:	c1 f7       	brne	.-16     	; 0x2ff6 <strtok_r+0x2e>
    3006:	0d 90       	ld	r0, X+
    3008:	00 20       	and	r0, r0
    300a:	a1 f7       	brne	.-24     	; 0x2ff4 <strtok_r+0x2c>
    300c:	d0 01       	movw	r26, r0
    300e:	fa 01       	movw	r30, r20
    3010:	a1 93       	st	Z+, r26
    3012:	b0 83       	st	Z, r27
    3014:	08 95       	ret

00003016 <fputc>:
    3016:	0f 93       	push	r16
    3018:	1f 93       	push	r17
    301a:	cf 93       	push	r28
    301c:	df 93       	push	r29
    301e:	fb 01       	movw	r30, r22
    3020:	23 81       	ldd	r18, Z+3	; 0x03
    3022:	21 fd       	sbrc	r18, 1
    3024:	03 c0       	rjmp	.+6      	; 0x302c <fputc+0x16>
    3026:	8f ef       	ldi	r24, 0xFF	; 255
    3028:	9f ef       	ldi	r25, 0xFF	; 255
    302a:	28 c0       	rjmp	.+80     	; 0x307c <fputc+0x66>
    302c:	22 ff       	sbrs	r18, 2
    302e:	16 c0       	rjmp	.+44     	; 0x305c <fputc+0x46>
    3030:	46 81       	ldd	r20, Z+6	; 0x06
    3032:	57 81       	ldd	r21, Z+7	; 0x07
    3034:	24 81       	ldd	r18, Z+4	; 0x04
    3036:	35 81       	ldd	r19, Z+5	; 0x05
    3038:	42 17       	cp	r20, r18
    303a:	53 07       	cpc	r21, r19
    303c:	44 f4       	brge	.+16     	; 0x304e <fputc+0x38>
    303e:	a0 81       	ld	r26, Z
    3040:	b1 81       	ldd	r27, Z+1	; 0x01
    3042:	9d 01       	movw	r18, r26
    3044:	2f 5f       	subi	r18, 0xFF	; 255
    3046:	3f 4f       	sbci	r19, 0xFF	; 255
    3048:	20 83       	st	Z, r18
    304a:	31 83       	std	Z+1, r19	; 0x01
    304c:	8c 93       	st	X, r24
    304e:	26 81       	ldd	r18, Z+6	; 0x06
    3050:	37 81       	ldd	r19, Z+7	; 0x07
    3052:	2f 5f       	subi	r18, 0xFF	; 255
    3054:	3f 4f       	sbci	r19, 0xFF	; 255
    3056:	26 83       	std	Z+6, r18	; 0x06
    3058:	37 83       	std	Z+7, r19	; 0x07
    305a:	10 c0       	rjmp	.+32     	; 0x307c <fputc+0x66>
    305c:	eb 01       	movw	r28, r22
    305e:	09 2f       	mov	r16, r25
    3060:	18 2f       	mov	r17, r24
    3062:	00 84       	ldd	r0, Z+8	; 0x08
    3064:	f1 85       	ldd	r31, Z+9	; 0x09
    3066:	e0 2d       	mov	r30, r0
    3068:	19 95       	eicall
    306a:	89 2b       	or	r24, r25
    306c:	e1 f6       	brne	.-72     	; 0x3026 <fputc+0x10>
    306e:	8e 81       	ldd	r24, Y+6	; 0x06
    3070:	9f 81       	ldd	r25, Y+7	; 0x07
    3072:	01 96       	adiw	r24, 0x01	; 1
    3074:	8e 83       	std	Y+6, r24	; 0x06
    3076:	9f 83       	std	Y+7, r25	; 0x07
    3078:	81 2f       	mov	r24, r17
    307a:	90 2f       	mov	r25, r16
    307c:	df 91       	pop	r29
    307e:	cf 91       	pop	r28
    3080:	1f 91       	pop	r17
    3082:	0f 91       	pop	r16
    3084:	08 95       	ret

00003086 <sprintf>:
    3086:	0f 93       	push	r16
    3088:	1f 93       	push	r17
    308a:	cf 93       	push	r28
    308c:	df 93       	push	r29
    308e:	cd b7       	in	r28, 0x3d	; 61
    3090:	de b7       	in	r29, 0x3e	; 62
    3092:	2e 97       	sbiw	r28, 0x0e	; 14
    3094:	cd bf       	out	0x3d, r28	; 61
    3096:	de bf       	out	0x3e, r29	; 62
    3098:	0e 89       	ldd	r16, Y+22	; 0x16
    309a:	1f 89       	ldd	r17, Y+23	; 0x17
    309c:	86 e0       	ldi	r24, 0x06	; 6
    309e:	8c 83       	std	Y+4, r24	; 0x04
    30a0:	09 83       	std	Y+1, r16	; 0x01
    30a2:	1a 83       	std	Y+2, r17	; 0x02
    30a4:	8f ef       	ldi	r24, 0xFF	; 255
    30a6:	9f e7       	ldi	r25, 0x7F	; 127
    30a8:	8d 83       	std	Y+5, r24	; 0x05
    30aa:	9e 83       	std	Y+6, r25	; 0x06
    30ac:	ae 01       	movw	r20, r28
    30ae:	46 5e       	subi	r20, 0xE6	; 230
    30b0:	5f 4f       	sbci	r21, 0xFF	; 255
    30b2:	68 8d       	ldd	r22, Y+24	; 0x18
    30b4:	79 8d       	ldd	r23, Y+25	; 0x19
    30b6:	ce 01       	movw	r24, r28
    30b8:	01 96       	adiw	r24, 0x01	; 1
    30ba:	0e 94 0a 13 	call	0x2614	; 0x2614 <vfprintf>
    30be:	2f 81       	ldd	r18, Y+7	; 0x07
    30c0:	38 85       	ldd	r19, Y+8	; 0x08
    30c2:	f8 01       	movw	r30, r16
    30c4:	e2 0f       	add	r30, r18
    30c6:	f3 1f       	adc	r31, r19
    30c8:	10 82       	st	Z, r1
    30ca:	2e 96       	adiw	r28, 0x0e	; 14
    30cc:	cd bf       	out	0x3d, r28	; 61
    30ce:	de bf       	out	0x3e, r29	; 62
    30d0:	df 91       	pop	r29
    30d2:	cf 91       	pop	r28
    30d4:	1f 91       	pop	r17
    30d6:	0f 91       	pop	r16
    30d8:	08 95       	ret

000030da <__ultoa_invert>:
    30da:	fa 01       	movw	r30, r20
    30dc:	aa 27       	eor	r26, r26
    30de:	28 30       	cpi	r18, 0x08	; 8
    30e0:	51 f1       	breq	.+84     	; 0x3136 <__ultoa_invert+0x5c>
    30e2:	20 31       	cpi	r18, 0x10	; 16
    30e4:	81 f1       	breq	.+96     	; 0x3146 <__ultoa_invert+0x6c>
    30e6:	e8 94       	clt
    30e8:	6f 93       	push	r22
    30ea:	6e 7f       	andi	r22, 0xFE	; 254
    30ec:	6e 5f       	subi	r22, 0xFE	; 254
    30ee:	7f 4f       	sbci	r23, 0xFF	; 255
    30f0:	8f 4f       	sbci	r24, 0xFF	; 255
    30f2:	9f 4f       	sbci	r25, 0xFF	; 255
    30f4:	af 4f       	sbci	r26, 0xFF	; 255
    30f6:	b1 e0       	ldi	r27, 0x01	; 1
    30f8:	3e d0       	rcall	.+124    	; 0x3176 <__ultoa_invert+0x9c>
    30fa:	b4 e0       	ldi	r27, 0x04	; 4
    30fc:	3c d0       	rcall	.+120    	; 0x3176 <__ultoa_invert+0x9c>
    30fe:	67 0f       	add	r22, r23
    3100:	78 1f       	adc	r23, r24
    3102:	89 1f       	adc	r24, r25
    3104:	9a 1f       	adc	r25, r26
    3106:	a1 1d       	adc	r26, r1
    3108:	68 0f       	add	r22, r24
    310a:	79 1f       	adc	r23, r25
    310c:	8a 1f       	adc	r24, r26
    310e:	91 1d       	adc	r25, r1
    3110:	a1 1d       	adc	r26, r1
    3112:	6a 0f       	add	r22, r26
    3114:	71 1d       	adc	r23, r1
    3116:	81 1d       	adc	r24, r1
    3118:	91 1d       	adc	r25, r1
    311a:	a1 1d       	adc	r26, r1
    311c:	20 d0       	rcall	.+64     	; 0x315e <__ultoa_invert+0x84>
    311e:	09 f4       	brne	.+2      	; 0x3122 <__ultoa_invert+0x48>
    3120:	68 94       	set
    3122:	3f 91       	pop	r19
    3124:	2a e0       	ldi	r18, 0x0A	; 10
    3126:	26 9f       	mul	r18, r22
    3128:	11 24       	eor	r1, r1
    312a:	30 19       	sub	r19, r0
    312c:	30 5d       	subi	r19, 0xD0	; 208
    312e:	31 93       	st	Z+, r19
    3130:	de f6       	brtc	.-74     	; 0x30e8 <__ultoa_invert+0xe>
    3132:	cf 01       	movw	r24, r30
    3134:	08 95       	ret
    3136:	46 2f       	mov	r20, r22
    3138:	47 70       	andi	r20, 0x07	; 7
    313a:	40 5d       	subi	r20, 0xD0	; 208
    313c:	41 93       	st	Z+, r20
    313e:	b3 e0       	ldi	r27, 0x03	; 3
    3140:	0f d0       	rcall	.+30     	; 0x3160 <__ultoa_invert+0x86>
    3142:	c9 f7       	brne	.-14     	; 0x3136 <__ultoa_invert+0x5c>
    3144:	f6 cf       	rjmp	.-20     	; 0x3132 <__ultoa_invert+0x58>
    3146:	46 2f       	mov	r20, r22
    3148:	4f 70       	andi	r20, 0x0F	; 15
    314a:	40 5d       	subi	r20, 0xD0	; 208
    314c:	4a 33       	cpi	r20, 0x3A	; 58
    314e:	18 f0       	brcs	.+6      	; 0x3156 <__ultoa_invert+0x7c>
    3150:	49 5d       	subi	r20, 0xD9	; 217
    3152:	31 fd       	sbrc	r19, 1
    3154:	40 52       	subi	r20, 0x20	; 32
    3156:	41 93       	st	Z+, r20
    3158:	02 d0       	rcall	.+4      	; 0x315e <__ultoa_invert+0x84>
    315a:	a9 f7       	brne	.-22     	; 0x3146 <__ultoa_invert+0x6c>
    315c:	ea cf       	rjmp	.-44     	; 0x3132 <__ultoa_invert+0x58>
    315e:	b4 e0       	ldi	r27, 0x04	; 4
    3160:	a6 95       	lsr	r26
    3162:	97 95       	ror	r25
    3164:	87 95       	ror	r24
    3166:	77 95       	ror	r23
    3168:	67 95       	ror	r22
    316a:	ba 95       	dec	r27
    316c:	c9 f7       	brne	.-14     	; 0x3160 <__ultoa_invert+0x86>
    316e:	00 97       	sbiw	r24, 0x00	; 0
    3170:	61 05       	cpc	r22, r1
    3172:	71 05       	cpc	r23, r1
    3174:	08 95       	ret
    3176:	9b 01       	movw	r18, r22
    3178:	ac 01       	movw	r20, r24
    317a:	0a 2e       	mov	r0, r26
    317c:	06 94       	lsr	r0
    317e:	57 95       	ror	r21
    3180:	47 95       	ror	r20
    3182:	37 95       	ror	r19
    3184:	27 95       	ror	r18
    3186:	ba 95       	dec	r27
    3188:	c9 f7       	brne	.-14     	; 0x317c <__ultoa_invert+0xa2>
    318a:	62 0f       	add	r22, r18
    318c:	73 1f       	adc	r23, r19
    318e:	84 1f       	adc	r24, r20
    3190:	95 1f       	adc	r25, r21
    3192:	a0 1d       	adc	r26, r0
    3194:	08 95       	ret

00003196 <_exit>:
    3196:	f8 94       	cli

00003198 <__stop_program>:
    3198:	ff cf       	rjmp	.-2      	; 0x3198 <__stop_program>
